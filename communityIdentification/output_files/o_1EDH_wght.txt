Input file: /net/gerstein/dc547/allostery/networks/make_contact_map/maps_weighted/1EDH_WGH_cont_map.txt
Reading Distance matrix file. 
Number of residues is 422.
The number of edges are 1475
<-get
->getEdges
res1 0 res2 2 k 0
res1 0 res2 89 k 1
res1 1 res2 3 k 2
res1 1 res2 19 k 3
res1 1 res2 21 k 4
res1 1 res2 89 k 5
res1 1 res2 90 k 6
res1 1 res2 91 k 7
res1 2 res2 4 k 8
res1 2 res2 230 k 9
res1 3 res2 5 k 10
res1 3 res2 92 k 11
res1 4 res2 6 k 12
res1 4 res2 19 k 13
res1 4 res2 57 k 14
res1 4 res2 91 k 15
res1 4 res2 92 k 16
res1 4 res2 93 k 17
res1 4 res2 94 k 18
res1 5 res2 7 k 19
res1 5 res2 94 k 20
res1 5 res2 96 k 21
res1 6 res2 8 k 22
res1 6 res2 10 k 23
res1 6 res2 63 k 24
res1 6 res2 94 k 25
res1 6 res2 95 k 26
res1 6 res2 96 k 27
res1 7 res2 9 k 28
res1 7 res2 10 k 29
res1 7 res2 96 k 30
res1 7 res2 307 k 31
res1 8 res2 10 k 32
res1 8 res2 63 k 33
res1 8 res2 64 k 34
res1 8 res2 65 k 35
res1 8 res2 66 k 36
res1 8 res2 95 k 37
res1 8 res2 96 k 38
res1 8 res2 97 k 39
res1 8 res2 98 k 40
res1 8 res2 100 k 41
res1 9 res2 11 k 42
res1 9 res2 62 k 43
res1 9 res2 63 k 44
res1 9 res2 98 k 45
res1 9 res2 100 k 46
res1 9 res2 348 k 47
res1 9 res2 350 k 48
res1 10 res2 14 k 49
res1 10 res2 16 k 50
res1 10 res2 62 k 51
res1 10 res2 348 k 52
res1 11 res2 13 k 53
res1 11 res2 16 k 54
res1 11 res2 346 k 55
res1 11 res2 347 k 56
res1 11 res2 348 k 57
res1 11 res2 349 k 58
res1 11 res2 350 k 59
res1 12 res2 14 k 60
res1 13 res2 15 k 61
res1 13 res2 16 k 62
res1 14 res2 16 k 63
res1 14 res2 59 k 64
res1 14 res2 60 k 65
res1 14 res2 61 k 66
res1 14 res2 62 k 67
res1 15 res2 17 k 68
res1 15 res2 58 k 69
res1 15 res2 59 k 70
res1 15 res2 60 k 71
res1 16 res2 18 k 72
res1 16 res2 57 k 73
res1 16 res2 58 k 74
res1 16 res2 59 k 75
res1 17 res2 19 k 76
res1 17 res2 56 k 77
res1 17 res2 57 k 78
res1 17 res2 58 k 79
res1 18 res2 48 k 80
res1 18 res2 56 k 81
res1 18 res2 57 k 82
res1 18 res2 58 k 83
res1 18 res2 59 k 84
res1 18 res2 93 k 85
res1 18 res2 214 k 86
res1 19 res2 21 k 87
res1 19 res2 55 k 88
res1 19 res2 56 k 89
res1 19 res2 57 k 90
res1 19 res2 213 k 91
res1 19 res2 214 k 92
res1 20 res2 22 k 93
res1 20 res2 54 k 94
res1 20 res2 55 k 95
res1 20 res2 56 k 96
res1 21 res2 33 k 97
res1 21 res2 50 k 98
res1 21 res2 54 k 99
res1 21 res2 55 k 100
res1 21 res2 75 k 101
res1 21 res2 89 k 102
res1 22 res2 24 k 103
res1 22 res2 33 k 104
res1 23 res2 25 k 105
res1 23 res2 26 k 106
res1 23 res2 31 k 107
res1 23 res2 33 k 108
res1 23 res2 77 k 109
res1 23 res2 85 k 110
res1 23 res2 86 k 111
res1 24 res2 26 k 112
res1 24 res2 27 k 113
res1 25 res2 27 k 114
res1 25 res2 28 k 115
res1 25 res2 29 k 116
res1 25 res2 31 k 117
res1 25 res2 85 k 118
res1 25 res2 86 k 119
res1 26 res2 28 k 120
res1 26 res2 29 k 121
res1 26 res2 31 k 122
res1 26 res2 33 k 123
res1 27 res2 29 k 124
res1 29 res2 31 k 125
res1 29 res2 79 k 126
res1 29 res2 80 k 127
res1 29 res2 85 k 128
res1 30 res2 32 k 129
res1 30 res2 53 k 130
res1 30 res2 78 k 131
res1 30 res2 79 k 132
res1 30 res2 80 k 133
res1 31 res2 33 k 134
res1 31 res2 52 k 135
res1 31 res2 77 k 136
res1 31 res2 78 k 137
res1 31 res2 79 k 138
res1 31 res2 85 k 139
res1 32 res2 34 k 140
res1 32 res2 52 k 141
res1 32 res2 53 k 142
res1 32 res2 76 k 143
res1 32 res2 77 k 144
res1 32 res2 78 k 145
res1 32 res2 80 k 146
res1 33 res2 50 k 147
res1 33 res2 51 k 148
res1 33 res2 52 k 149
res1 33 res2 53 k 150
res1 33 res2 55 k 151
res1 33 res2 76 k 152
res1 33 res2 77 k 153
res1 34 res2 50 k 154
res1 34 res2 74 k 155
res1 34 res2 75 k 156
res1 34 res2 76 k 157
res1 35 res2 40 k 158
res1 35 res2 41 k 159
res1 35 res2 48 k 160
res1 35 res2 49 k 161
res1 35 res2 50 k 162
res1 35 res2 57 k 163
res1 35 res2 73 k 164
res1 35 res2 74 k 165
res1 35 res2 75 k 166
res1 35 res2 76 k 167
res1 35 res2 91 k 168
res1 36 res2 40 k 169
res1 36 res2 41 k 170
res1 36 res2 42 k 171
res1 36 res2 72 k 172
res1 36 res2 73 k 173
res1 36 res2 74 k 174
res1 36 res2 76 k 175
res1 37 res2 39 k 176
res1 37 res2 40 k 177
res1 37 res2 41 k 178
res1 37 res2 42 k 179
res1 37 res2 72 k 180
res1 37 res2 73 k 181
res1 38 res2 40 k 182
res1 38 res2 42 k 183
res1 38 res2 43 k 184
res1 38 res2 44 k 185
res1 38 res2 71 k 186
res1 38 res2 73 k 187
res1 39 res2 41 k 188
res1 39 res2 42 k 189
res1 39 res2 43 k 190
res1 39 res2 44 k 191
res1 39 res2 46 k 192
res1 39 res2 47 k 193
res1 39 res2 48 k 194
res1 39 res2 71 k 195
res1 39 res2 73 k 196
res1 40 res2 42 k 197
res1 40 res2 44 k 198
res1 40 res2 45 k 199
res1 40 res2 46 k 200
res1 40 res2 48 k 201
res1 40 res2 73 k 202
res1 41 res2 43 k 203
res1 41 res2 45 k 204
res1 42 res2 44 k 205
res1 42 res2 45 k 206
res1 43 res2 45 k 207
res1 44 res2 46 k 208
res1 44 res2 47 k 209
res1 44 res2 68 k 210
res1 44 res2 71 k 211
res1 45 res2 47 k 212
res1 46 res2 48 k 213
res1 46 res2 49 k 214
res1 46 res2 60 k 215
res1 47 res2 49 k 216
res1 47 res2 58 k 217
res1 47 res2 59 k 218
res1 47 res2 60 k 219
res1 47 res2 61 k 220
res1 47 res2 63 k 221
res1 47 res2 71 k 222
res1 48 res2 57 k 223
res1 48 res2 58 k 224
res1 48 res2 59 k 225
res1 48 res2 63 k 226
res1 48 res2 71 k 227
res1 48 res2 73 k 228
res1 48 res2 93 k 229
res1 49 res2 56 k 230
res1 49 res2 57 k 231
res1 49 res2 58 k 232
res1 49 res2 60 k 233
res1 50 res2 52 k 234
res1 50 res2 55 k 235
res1 50 res2 56 k 236
res1 50 res2 57 k 237
res1 51 res2 53 k 238
res1 51 res2 54 k 239
res1 51 res2 55 k 240
res1 51 res2 56 k 241
res1 51 res2 58 k 242
res1 52 res2 54 k 243
res1 53 res2 55 k 244
res1 54 res2 56 k 245
res1 55 res2 57 k 246
res1 56 res2 58 k 247
res1 57 res2 91 k 248
res1 58 res2 60 k 249
res1 59 res2 61 k 250
res1 59 res2 63 k 251
res1 61 res2 63 k 252
res1 62 res2 64 k 253
res1 63 res2 65 k 254
res1 63 res2 71 k 255
res1 63 res2 95 k 256
res1 64 res2 66 k 257
res1 64 res2 67 k 258
res1 64 res2 68 k 259
res1 64 res2 95 k 260
res1 64 res2 100 k 261
res1 65 res2 67 k 262
res1 65 res2 68 k 263
res1 65 res2 69 k 264
res1 65 res2 95 k 265
res1 65 res2 96 k 266
res1 65 res2 97 k 267
res1 65 res2 132 k 268
res1 65 res2 133 k 269
res1 65 res2 134 k 270
res1 66 res2 68 k 271
res1 66 res2 97 k 272
res1 66 res2 100 k 273
res1 66 res2 101 k 274
res1 66 res2 132 k 275
res1 66 res2 133 k 276
res1 67 res2 69 k 277
res1 68 res2 70 k 278
res1 68 res2 71 k 279
res1 68 res2 95 k 280
res1 69 res2 93 k 281
res1 69 res2 94 k 282
res1 69 res2 95 k 283
res1 70 res2 72 k 284
res1 70 res2 92 k 285
res1 70 res2 93 k 286
res1 70 res2 95 k 287
res1 71 res2 73 k 288
res1 71 res2 91 k 289
res1 71 res2 92 k 290
res1 71 res2 93 k 291
res1 71 res2 95 k 292
res1 72 res2 74 k 293
res1 72 res2 90 k 294
res1 72 res2 91 k 295
res1 72 res2 92 k 296
res1 73 res2 75 k 297
res1 73 res2 89 k 298
res1 73 res2 90 k 299
res1 73 res2 91 k 300
res1 73 res2 93 k 301
res1 74 res2 76 k 302
res1 74 res2 88 k 303
res1 74 res2 89 k 304
res1 74 res2 90 k 305
res1 75 res2 88 k 306
res1 75 res2 89 k 307
res1 75 res2 91 k 308
res1 76 res2 78 k 309
res1 76 res2 88 k 310
res1 77 res2 79 k 311
res1 77 res2 83 k 312
res1 77 res2 84 k 313
res1 77 res2 85 k 314
res1 77 res2 86 k 315
res1 78 res2 80 k 316
res1 78 res2 82 k 317
res1 78 res2 83 k 318
res1 78 res2 84 k 319
res1 78 res2 85 k 320
res1 79 res2 82 k 321
res1 79 res2 83 k 322
res1 79 res2 85 k 323
res1 80 res2 82 k 324
res1 81 res2 83 k 325
res1 82 res2 84 k 326
res1 83 res2 85 k 327
res1 84 res2 86 k 328
res1 86 res2 88 k 329
res1 87 res2 89 k 330
res1 88 res2 90 k 331
res1 89 res2 91 k 332
res1 90 res2 92 k 333
res1 91 res2 93 k 334
res1 92 res2 94 k 335
res1 93 res2 95 k 336
res1 94 res2 96 k 337
res1 95 res2 97 k 338
res1 96 res2 98 k 339
res1 96 res2 218 k 340
res1 97 res2 99 k 341
res1 97 res2 100 k 342
res1 97 res2 133 k 343
res1 97 res2 134 k 344
res1 97 res2 138 k 345
res1 97 res2 140 k 346
res1 98 res2 100 k 347
res1 98 res2 133 k 348
res1 98 res2 140 k 349
res1 98 res2 351 k 350
res1 99 res2 101 k 351
res1 99 res2 133 k 352
res1 99 res2 140 k 353
res1 99 res2 192 k 354
res1 99 res2 193 k 355
res1 99 res2 198 k 356
res1 99 res2 404 k 357
res1 100 res2 102 k 358
res1 100 res2 133 k 359
res1 100 res2 198 k 360
res1 101 res2 103 k 361
res1 101 res2 131 k 362
res1 101 res2 132 k 363
res1 101 res2 133 k 364
res1 101 res2 192 k 365
res1 101 res2 198 k 366
res1 102 res2 104 k 367
res1 102 res2 130 k 368
res1 102 res2 131 k 369
res1 102 res2 192 k 370
res1 102 res2 198 k 371
res1 102 res2 199 k 372
res1 102 res2 407 k 373
res1 103 res2 105 k 374
res1 103 res2 129 k 375
res1 103 res2 130 k 376
res1 103 res2 131 k 377
res1 103 res2 143 k 378
res1 103 res2 190 k 379
res1 103 res2 191 k 380
res1 103 res2 192 k 381
res1 103 res2 198 k 382
res1 103 res2 199 k 383
res1 103 res2 200 k 384
res1 104 res2 106 k 385
res1 104 res2 128 k 386
res1 104 res2 129 k 387
res1 104 res2 130 k 388
res1 104 res2 200 k 389
res1 105 res2 107 k 390
res1 105 res2 110 k 391
res1 105 res2 127 k 392
res1 105 res2 128 k 393
res1 105 res2 129 k 394
res1 105 res2 145 k 395
res1 105 res2 188 k 396
res1 105 res2 189 k 397
res1 105 res2 190 k 398
res1 105 res2 200 k 399
res1 105 res2 201 k 400
res1 105 res2 202 k 401
res1 106 res2 110 k 402
res1 106 res2 128 k 403
res1 106 res2 129 k 404
res1 106 res2 130 k 405
res1 107 res2 109 k 406
res1 107 res2 110 k 407
res1 107 res2 202 k 408
res1 108 res2 110 k 409
res1 108 res2 202 k 410
res1 108 res2 203 k 411
res1 109 res2 111 k 412
res1 109 res2 203 k 413
res1 109 res2 205 k 414
res1 110 res2 112 k 415
res1 110 res2 125 k 416
res1 110 res2 126 k 417
res1 110 res2 127 k 418
res1 110 res2 128 k 419
res1 110 res2 202 k 420
res1 110 res2 203 k 421
res1 110 res2 204 k 422
res1 110 res2 205 k 423
res1 111 res2 125 k 424
res1 111 res2 205 k 425
res1 112 res2 125 k 426
res1 112 res2 205 k 427
res1 112 res2 206 k 428
res1 112 res2 207 k 429
res1 113 res2 124 k 430
res1 113 res2 206 k 431
res1 113 res2 207 k 432
res1 113 res2 209 k 433
res1 114 res2 116 k 434
res1 114 res2 118 k 435
res1 114 res2 124 k 436
res1 114 res2 160 k 437
res1 114 res2 171 k 438
res1 114 res2 176 k 439
res1 114 res2 206 k 440
res1 114 res2 207 k 441
res1 114 res2 208 k 442
res1 114 res2 209 k 443
res1 115 res2 117 k 444
res1 115 res2 118 k 445
res1 115 res2 176 k 446
res1 115 res2 209 k 447
res1 116 res2 118 k 448
res1 116 res2 176 k 449
res1 116 res2 177 k 450
res1 116 res2 178 k 451
res1 116 res2 208 k 452
res1 116 res2 209 k 453
res1 116 res2 210 k 454
res1 117 res2 119 k 455
res1 118 res2 120 k 456
res1 118 res2 122 k 457
res1 118 res2 171 k 458
res1 119 res2 121 k 459
res1 119 res2 122 k 460
res1 119 res2 171 k 461
res1 120 res2 122 k 462
res1 120 res2 171 k 463
res1 120 res2 172 k 464
res1 120 res2 173 k 465
res1 120 res2 174 k 466
res1 121 res2 123 k 467
res1 121 res2 170 k 468
res1 121 res2 171 k 469
res1 122 res2 124 k 470
res1 122 res2 169 k 471
res1 122 res2 170 k 472
res1 122 res2 171 k 473
res1 123 res2 125 k 474
res1 123 res2 168 k 475
res1 123 res2 169 k 476
res1 123 res2 170 k 477
res1 124 res2 169 k 478
res1 124 res2 170 k 479
res1 124 res2 171 k 480
res1 124 res2 206 k 481
res1 125 res2 127 k 482
res1 125 res2 167 k 483
res1 125 res2 168 k 484
res1 125 res2 169 k 485
res1 125 res2 204 k 486
res1 125 res2 206 k 487
res1 126 res2 128 k 488
res1 126 res2 166 k 489
res1 126 res2 167 k 490
res1 126 res2 168 k 491
res1 127 res2 145 k 492
res1 127 res2 166 k 493
res1 127 res2 167 k 494
res1 127 res2 169 k 495
res1 127 res2 188 k 496
res1 127 res2 204 k 497
res1 128 res2 145 k 498
res1 129 res2 143 k 499
res1 129 res2 145 k 500
res1 129 res2 190 k 501
res1 130 res2 132 k 502
res1 130 res2 143 k 503
res1 131 res2 133 k 504
res1 131 res2 140 k 505
res1 131 res2 141 k 506
res1 131 res2 143 k 507
res1 131 res2 192 k 508
res1 132 res2 134 k 509
res1 133 res2 135 k 510
res1 133 res2 140 k 511
res1 133 res2 141 k 512
res1 134 res2 136 k 513
res1 134 res2 137 k 514
res1 134 res2 138 k 515
res1 134 res2 141 k 516
res1 135 res2 137 k 517
res1 135 res2 138 k 518
res1 135 res2 141 k 519
res1 135 res2 142 k 520
res1 135 res2 222 k 521
res1 136 res2 138 k 522
res1 136 res2 222 k 523
res1 137 res2 221 k 524
res1 137 res2 222 k 525
res1 138 res2 140 k 526
res1 138 res2 222 k 527
res1 138 res2 309 k 528
res1 139 res2 141 k 529
res1 139 res2 142 k 530
res1 139 res2 192 k 531
res1 139 res2 193 k 532
res1 139 res2 194 k 533
res1 139 res2 220 k 534
res1 139 res2 222 k 535
res1 140 res2 142 k 536
res1 140 res2 192 k 537
res1 140 res2 193 k 538
res1 140 res2 309 k 539
res1 141 res2 143 k 540
res1 141 res2 192 k 541
res1 142 res2 144 k 542
res1 142 res2 191 k 543
res1 142 res2 192 k 544
res1 142 res2 193 k 545
res1 142 res2 194 k 546
res1 142 res2 195 k 547
res1 143 res2 145 k 548
res1 143 res2 164 k 549
res1 143 res2 190 k 550
res1 143 res2 191 k 551
res1 143 res2 192 k 552
res1 144 res2 146 k 553
res1 144 res2 164 k 554
res1 144 res2 189 k 555
res1 144 res2 190 k 556
res1 144 res2 191 k 557
res1 144 res2 194 k 558
res1 144 res2 195 k 559
res1 145 res2 162 k 560
res1 145 res2 163 k 561
res1 145 res2 164 k 562
res1 145 res2 165 k 563
res1 145 res2 166 k 564
res1 145 res2 167 k 565
res1 145 res2 189 k 566
res1 145 res2 190 k 567
res1 146 res2 148 k 568
res1 146 res2 162 k 569
res1 146 res2 164 k 570
res1 146 res2 187 k 571
res1 146 res2 188 k 572
res1 146 res2 189 k 573
res1 147 res2 149 k 574
res1 147 res2 160 k 575
res1 147 res2 161 k 576
res1 147 res2 162 k 577
res1 147 res2 186 k 578
res1 147 res2 187 k 579
res1 147 res2 188 k 580
res1 148 res2 187 k 581
res1 148 res2 188 k 582
res1 148 res2 189 k 583
res1 148 res2 201 k 584
res1 149 res2 151 k 585
res1 149 res2 185 k 586
res1 149 res2 186 k 587
res1 149 res2 187 k 588
res1 150 res2 152 k 589
res1 150 res2 153 k 590
res1 150 res2 154 k 591
res1 150 res2 156 k 592
res1 150 res2 157 k 593
res1 150 res2 158 k 594
res1 150 res2 159 k 595
res1 150 res2 160 k 596
res1 150 res2 184 k 597
res1 150 res2 185 k 598
res1 150 res2 186 k 599
res1 151 res2 153 k 600
res1 151 res2 183 k 601
res1 151 res2 184 k 602
res1 151 res2 185 k 603
res1 152 res2 154 k 604
res1 152 res2 181 k 605
res1 152 res2 183 k 606
res1 152 res2 184 k 607
res1 153 res2 155 k 608
res1 153 res2 156 k 609
res1 153 res2 157 k 610
res1 154 res2 156 k 611
res1 154 res2 159 k 612
res1 154 res2 181 k 613
res1 154 res2 184 k 614
res1 155 res2 159 k 615
res1 155 res2 175 k 616
res1 155 res2 181 k 617
res1 155 res2 184 k 618
res1 156 res2 158 k 619
res1 156 res2 159 k 620
res1 156 res2 173 k 621
res1 156 res2 174 k 622
res1 157 res2 159 k 623
res1 158 res2 160 k 624
res1 158 res2 172 k 625
res1 158 res2 173 k 626
res1 159 res2 170 k 627
res1 159 res2 171 k 628
res1 159 res2 172 k 629
res1 159 res2 173 k 630
res1 159 res2 174 k 631
res1 159 res2 175 k 632
res1 159 res2 176 k 633
res1 159 res2 184 k 634
res1 160 res2 169 k 635
res1 160 res2 170 k 636
res1 160 res2 171 k 637
res1 160 res2 172 k 638
res1 160 res2 176 k 639
res1 160 res2 184 k 640
res1 160 res2 186 k 641
res1 160 res2 206 k 642
res1 161 res2 163 k 643
res1 161 res2 168 k 644
res1 161 res2 169 k 645
res1 161 res2 170 k 646
res1 161 res2 172 k 647
res1 162 res2 164 k 648
res1 162 res2 167 k 649
res1 162 res2 168 k 650
res1 162 res2 169 k 651
res1 163 res2 165 k 652
res1 163 res2 166 k 653
res1 163 res2 167 k 654
res1 163 res2 168 k 655
res1 164 res2 166 k 656
res1 164 res2 194 k 657
res1 164 res2 195 k 658
res1 165 res2 167 k 659
res1 166 res2 168 k 660
res1 167 res2 169 k 661
res1 168 res2 170 k 662
res1 169 res2 186 k 663
res1 169 res2 188 k 664
res1 169 res2 204 k 665
res1 169 res2 206 k 666
res1 170 res2 172 k 667
res1 171 res2 173 k 668
res1 173 res2 175 k 669
res1 174 res2 176 k 670
res1 175 res2 177 k 671
res1 176 res2 178 k 672
res1 176 res2 184 k 673
res1 176 res2 208 k 674
res1 177 res2 179 k 675
res1 177 res2 180 k 676
res1 177 res2 181 k 677
res1 177 res2 182 k 678
res1 178 res2 180 k 679
res1 178 res2 181 k 680
res1 178 res2 182 k 681
res1 178 res2 208 k 682
res1 178 res2 209 k 683
res1 178 res2 210 k 684
res1 179 res2 181 k 685
res1 180 res2 182 k 686
res1 181 res2 183 k 687
res1 181 res2 184 k 688
res1 181 res2 208 k 689
res1 182 res2 206 k 690
res1 182 res2 207 k 691
res1 182 res2 208 k 692
res1 183 res2 185 k 693
res1 183 res2 206 k 694
res1 183 res2 207 k 695
res1 184 res2 186 k 696
res1 184 res2 204 k 697
res1 184 res2 205 k 698
res1 184 res2 206 k 699
res1 184 res2 208 k 700
res1 185 res2 187 k 701
res1 185 res2 203 k 702
res1 185 res2 204 k 703
res1 185 res2 205 k 704
res1 186 res2 188 k 705
res1 186 res2 202 k 706
res1 186 res2 203 k 707
res1 186 res2 204 k 708
res1 186 res2 206 k 709
res1 187 res2 189 k 710
res1 187 res2 201 k 711
res1 187 res2 202 k 712
res1 188 res2 190 k 713
res1 188 res2 200 k 714
res1 188 res2 201 k 715
res1 188 res2 202 k 716
res1 188 res2 203 k 717
res1 188 res2 204 k 718
res1 189 res2 191 k 719
res1 189 res2 199 k 720
res1 189 res2 200 k 721
res1 189 res2 201 k 722
res1 190 res2 192 k 723
res1 190 res2 198 k 724
res1 190 res2 199 k 725
res1 190 res2 200 k 726
res1 191 res2 193 k 727
res1 191 res2 194 k 728
res1 191 res2 195 k 729
res1 191 res2 197 k 730
res1 191 res2 198 k 731
res1 191 res2 199 k 732
res1 192 res2 194 k 733
res1 192 res2 195 k 734
res1 192 res2 196 k 735
res1 192 res2 197 k 736
res1 192 res2 198 k 737
res1 193 res2 195 k 738
res1 193 res2 196 k 739
res1 193 res2 197 k 740
res1 193 res2 310 k 741
res1 194 res2 196 k 742
res1 195 res2 197 k 743
res1 196 res2 313 k 744
res1 196 res2 409 k 745
res1 197 res2 199 k 746
res1 198 res2 407 k 747
res1 202 res2 204 k 748
res1 203 res2 205 k 749
res1 204 res2 206 k 750
res1 205 res2 207 k 751
res1 206 res2 208 k 752
res1 207 res2 209 k 753
res1 208 res2 210 k 754
res1 211 res2 300 k 755
res1 212 res2 214 k 756
res1 212 res2 215 k 757
res1 212 res2 230 k 758
res1 212 res2 300 k 759
res1 212 res2 301 k 760
res1 212 res2 302 k 761
res1 213 res2 215 k 762
res1 214 res2 216 k 763
res1 214 res2 303 k 764
res1 215 res2 217 k 765
res1 215 res2 229 k 766
res1 215 res2 230 k 767
res1 215 res2 268 k 768
res1 215 res2 302 k 769
res1 215 res2 303 k 770
res1 215 res2 304 k 771
res1 215 res2 305 k 772
res1 216 res2 305 k 773
res1 216 res2 307 k 774
res1 217 res2 219 k 775
res1 217 res2 221 k 776
res1 217 res2 270 k 777
res1 217 res2 274 k 778
res1 217 res2 305 k 779
res1 217 res2 306 k 780
res1 217 res2 307 k 781
res1 218 res2 220 k 782
res1 218 res2 221 k 783
res1 218 res2 274 k 784
res1 218 res2 307 k 785
res1 219 res2 221 k 786
res1 219 res2 274 k 787
res1 219 res2 275 k 788
res1 219 res2 276 k 789
res1 219 res2 277 k 790
res1 219 res2 306 k 791
res1 219 res2 307 k 792
res1 219 res2 308 k 793
res1 219 res2 309 k 794
res1 219 res2 311 k 795
res1 220 res2 222 k 796
res1 220 res2 273 k 797
res1 220 res2 274 k 798
res1 220 res2 309 k 799
res1 220 res2 311 k 800
res1 221 res2 225 k 801
res1 221 res2 227 k 802
res1 221 res2 273 k 803
res1 222 res2 225 k 804
res1 222 res2 227 k 805
res1 223 res2 225 k 806
res1 223 res2 227 k 807
res1 224 res2 226 k 808
res1 224 res2 227 k 809
res1 225 res2 227 k 810
res1 225 res2 270 k 811
res1 225 res2 271 k 812
res1 225 res2 272 k 813
res1 225 res2 273 k 814
res1 226 res2 228 k 815
res1 226 res2 260 k 816
res1 226 res2 269 k 817
res1 226 res2 270 k 818
res1 226 res2 271 k 819
res1 227 res2 229 k 820
res1 227 res2 268 k 821
res1 227 res2 269 k 822
res1 227 res2 270 k 823
res1 228 res2 230 k 824
res1 228 res2 267 k 825
res1 228 res2 268 k 826
res1 228 res2 269 k 827
res1 229 res2 259 k 828
res1 229 res2 268 k 829
res1 229 res2 269 k 830
res1 229 res2 270 k 831
res1 229 res2 304 k 832
res1 230 res2 232 k 833
res1 230 res2 266 k 834
res1 230 res2 267 k 835
res1 230 res2 268 k 836
res1 231 res2 233 k 837
res1 231 res2 265 k 838
res1 231 res2 266 k 839
res1 231 res2 267 k 840
res1 232 res2 244 k 841
res1 232 res2 261 k 842
res1 232 res2 265 k 843
res1 232 res2 266 k 844
res1 232 res2 286 k 845
res1 232 res2 300 k 846
res1 232 res2 302 k 847
res1 233 res2 235 k 848
res1 233 res2 244 k 849
res1 233 res2 265 k 850
res1 234 res2 236 k 851
res1 234 res2 237 k 852
res1 234 res2 242 k 853
res1 234 res2 244 k 854
res1 234 res2 288 k 855
res1 234 res2 296 k 856
res1 234 res2 297 k 857
res1 235 res2 237 k 858
res1 235 res2 238 k 859
res1 235 res2 297 k 860
res1 236 res2 238 k 861
res1 236 res2 239 k 862
res1 236 res2 240 k 863
res1 236 res2 242 k 864
res1 236 res2 296 k 865
res1 236 res2 297 k 866
res1 237 res2 239 k 867
res1 237 res2 240 k 868
res1 237 res2 241 k 869
res1 237 res2 242 k 870
res1 238 res2 240 k 871
res1 240 res2 242 k 872
res1 240 res2 290 k 873
res1 240 res2 291 k 874
res1 240 res2 292 k 875
res1 240 res2 296 k 876
res1 241 res2 243 k 877
res1 241 res2 264 k 878
res1 241 res2 289 k 879
res1 241 res2 290 k 880
res1 241 res2 291 k 881
res1 242 res2 244 k 882
res1 242 res2 263 k 883
res1 242 res2 288 k 884
res1 242 res2 289 k 885
res1 242 res2 296 k 886
res1 243 res2 245 k 887
res1 243 res2 263 k 888
res1 243 res2 264 k 889
res1 243 res2 287 k 890
res1 243 res2 288 k 891
res1 243 res2 289 k 892
res1 243 res2 291 k 893
res1 244 res2 261 k 894
res1 244 res2 262 k 895
res1 244 res2 263 k 896
res1 244 res2 264 k 897
res1 244 res2 266 k 898
res1 244 res2 287 k 899
res1 244 res2 288 k 900
res1 245 res2 261 k 901
res1 245 res2 285 k 902
res1 245 res2 286 k 903
res1 245 res2 287 k 904
res1 246 res2 251 k 905
res1 246 res2 252 k 906
res1 246 res2 259 k 907
res1 246 res2 260 k 908
res1 246 res2 261 k 909
res1 246 res2 268 k 910
res1 246 res2 284 k 911
res1 246 res2 285 k 912
res1 246 res2 286 k 913
res1 246 res2 287 k 914
res1 247 res2 251 k 915
res1 247 res2 252 k 916
res1 247 res2 284 k 917
res1 247 res2 285 k 918
res1 247 res2 287 k 919
res1 248 res2 250 k 920
res1 248 res2 251 k 921
res1 248 res2 252 k 922
res1 248 res2 253 k 923
res1 248 res2 283 k 924
res1 248 res2 284 k 925
res1 249 res2 251 k 926
res1 249 res2 253 k 927
res1 249 res2 254 k 928
res1 249 res2 255 k 929
res1 249 res2 282 k 930
res1 249 res2 283 k 931
res1 249 res2 284 k 932
res1 250 res2 252 k 933
res1 250 res2 253 k 934
res1 250 res2 254 k 935
res1 250 res2 255 k 936
res1 250 res2 256 k 937
res1 250 res2 257 k 938
res1 250 res2 258 k 939
res1 250 res2 259 k 940
res1 250 res2 282 k 941
res1 250 res2 284 k 942
res1 251 res2 253 k 943
res1 251 res2 255 k 944
res1 251 res2 256 k 945
res1 251 res2 257 k 946
res1 251 res2 259 k 947
res1 251 res2 284 k 948
res1 252 res2 254 k 949
res1 252 res2 256 k 950
res1 253 res2 255 k 951
res1 253 res2 256 k 952
res1 254 res2 256 k 953
res1 255 res2 257 k 954
res1 255 res2 258 k 955
res1 255 res2 279 k 956
res1 255 res2 282 k 957
res1 256 res2 258 k 958
res1 257 res2 259 k 959
res1 257 res2 260 k 960
res1 257 res2 271 k 961
res1 258 res2 260 k 962
res1 258 res2 269 k 963
res1 258 res2 270 k 964
res1 258 res2 271 k 965
res1 258 res2 272 k 966
res1 258 res2 274 k 967
res1 258 res2 282 k 968
res1 259 res2 269 k 969
res1 259 res2 270 k 970
res1 259 res2 282 k 971
res1 259 res2 284 k 972
res1 259 res2 304 k 973
res1 260 res2 267 k 974
res1 260 res2 268 k 975
res1 260 res2 269 k 976
res1 260 res2 271 k 977
res1 261 res2 263 k 978
res1 261 res2 266 k 979
res1 261 res2 267 k 980
res1 261 res2 268 k 981
res1 262 res2 264 k 982
res1 262 res2 265 k 983
res1 262 res2 266 k 984
res1 262 res2 267 k 985
res1 262 res2 269 k 986
res1 263 res2 265 k 987
res1 264 res2 266 k 988
res1 265 res2 267 k 989
res1 266 res2 268 k 990
res1 267 res2 269 k 991
res1 268 res2 302 k 992
res1 269 res2 271 k 993
res1 270 res2 272 k 994
res1 270 res2 274 k 995
res1 272 res2 274 k 996
res1 273 res2 275 k 997
res1 274 res2 276 k 998
res1 274 res2 282 k 999
res1 274 res2 306 k 1000
res1 275 res2 277 k 1001
res1 275 res2 278 k 1002
res1 275 res2 279 k 1003
res1 275 res2 306 k 1004
res1 275 res2 311 k 1005
res1 276 res2 278 k 1006
res1 276 res2 279 k 1007
res1 276 res2 280 k 1008
res1 276 res2 306 k 1009
res1 276 res2 307 k 1010
res1 276 res2 308 k 1011
res1 276 res2 343 k 1012
res1 276 res2 344 k 1013
res1 276 res2 345 k 1014
res1 277 res2 279 k 1015
res1 277 res2 308 k 1016
res1 277 res2 311 k 1017
res1 277 res2 312 k 1018
res1 277 res2 343 k 1019
res1 277 res2 344 k 1020
res1 278 res2 280 k 1021
res1 279 res2 281 k 1022
res1 279 res2 282 k 1023
res1 279 res2 306 k 1024
res1 280 res2 304 k 1025
res1 280 res2 305 k 1026
res1 280 res2 306 k 1027
res1 281 res2 283 k 1028
res1 281 res2 303 k 1029
res1 281 res2 304 k 1030
res1 281 res2 306 k 1031
res1 282 res2 284 k 1032
res1 282 res2 302 k 1033
res1 282 res2 303 k 1034
res1 282 res2 304 k 1035
res1 282 res2 306 k 1036
res1 283 res2 285 k 1037
res1 283 res2 301 k 1038
res1 283 res2 302 k 1039
res1 283 res2 303 k 1040
res1 284 res2 286 k 1041
res1 284 res2 300 k 1042
res1 284 res2 301 k 1043
res1 284 res2 302 k 1044
res1 284 res2 304 k 1045
res1 285 res2 287 k 1046
res1 285 res2 299 k 1047
res1 285 res2 300 k 1048
res1 285 res2 301 k 1049
res1 286 res2 299 k 1050
res1 286 res2 300 k 1051
res1 286 res2 302 k 1052
res1 287 res2 289 k 1053
res1 287 res2 299 k 1054
res1 288 res2 290 k 1055
res1 288 res2 294 k 1056
res1 288 res2 295 k 1057
res1 288 res2 296 k 1058
res1 288 res2 297 k 1059
res1 289 res2 291 k 1060
res1 289 res2 293 k 1061
res1 289 res2 294 k 1062
res1 289 res2 295 k 1063
res1 289 res2 296 k 1064
res1 290 res2 292 k 1065
res1 290 res2 293 k 1066
res1 290 res2 294 k 1067
res1 290 res2 296 k 1068
res1 291 res2 293 k 1069
res1 292 res2 294 k 1070
res1 293 res2 295 k 1071
res1 294 res2 296 k 1072
res1 295 res2 297 k 1073
res1 297 res2 299 k 1074
res1 298 res2 300 k 1075
res1 299 res2 301 k 1076
res1 300 res2 302 k 1077
res1 301 res2 303 k 1078
res1 302 res2 304 k 1079
res1 303 res2 305 k 1080
res1 304 res2 306 k 1081
res1 305 res2 307 k 1082
res1 306 res2 308 k 1083
res1 307 res2 309 k 1084
res1 308 res2 344 k 1085
res1 308 res2 345 k 1086
res1 308 res2 349 k 1087
res1 308 res2 351 k 1088
res1 309 res2 311 k 1089
res1 309 res2 344 k 1090
res1 309 res2 351 k 1091
res1 310 res2 312 k 1092
res1 310 res2 344 k 1093
res1 310 res2 351 k 1094
res1 310 res2 403 k 1095
res1 310 res2 404 k 1096
res1 310 res2 409 k 1097
res1 311 res2 313 k 1098
res1 311 res2 344 k 1099
res1 312 res2 314 k 1100
res1 312 res2 342 k 1101
res1 312 res2 343 k 1102
res1 312 res2 344 k 1103
res1 312 res2 403 k 1104
res1 312 res2 409 k 1105
res1 313 res2 315 k 1106
res1 313 res2 341 k 1107
res1 313 res2 342 k 1108
res1 313 res2 403 k 1109
res1 313 res2 409 k 1110
res1 313 res2 410 k 1111
res1 314 res2 316 k 1112
res1 314 res2 341 k 1113
res1 314 res2 342 k 1114
res1 314 res2 354 k 1115
res1 314 res2 401 k 1116
res1 314 res2 402 k 1117
res1 314 res2 403 k 1118
res1 314 res2 409 k 1119
res1 314 res2 410 k 1120
res1 314 res2 411 k 1121
res1 315 res2 317 k 1122
res1 315 res2 339 k 1123
res1 315 res2 340 k 1124
res1 315 res2 341 k 1125
res1 315 res2 411 k 1126
res1 316 res2 318 k 1127
res1 316 res2 321 k 1128
res1 316 res2 338 k 1129
res1 316 res2 339 k 1130
res1 316 res2 340 k 1131
res1 316 res2 356 k 1132
res1 316 res2 399 k 1133
res1 316 res2 400 k 1134
res1 316 res2 401 k 1135
res1 316 res2 411 k 1136
res1 316 res2 412 k 1137
res1 316 res2 413 k 1138
res1 317 res2 321 k 1139
res1 317 res2 339 k 1140
res1 317 res2 340 k 1141
res1 317 res2 341 k 1142
res1 318 res2 320 k 1143
res1 318 res2 321 k 1144
res1 318 res2 413 k 1145
res1 319 res2 321 k 1146
res1 319 res2 413 k 1147
res1 319 res2 414 k 1148
res1 320 res2 322 k 1149
res1 320 res2 414 k 1150
res1 320 res2 416 k 1151
res1 321 res2 323 k 1152
res1 321 res2 336 k 1153
res1 321 res2 337 k 1154
res1 321 res2 338 k 1155
res1 321 res2 339 k 1156
res1 321 res2 413 k 1157
res1 321 res2 414 k 1158
res1 321 res2 415 k 1159
res1 321 res2 416 k 1160
res1 322 res2 336 k 1161
res1 322 res2 416 k 1162
res1 323 res2 336 k 1163
res1 323 res2 416 k 1164
res1 323 res2 417 k 1165
res1 323 res2 418 k 1166
res1 324 res2 335 k 1167
res1 324 res2 418 k 1168
res1 324 res2 420 k 1169
res1 325 res2 327 k 1170
res1 325 res2 329 k 1171
res1 325 res2 335 k 1172
res1 325 res2 371 k 1173
res1 325 res2 382 k 1174
res1 325 res2 387 k 1175
res1 325 res2 417 k 1176
res1 325 res2 418 k 1177
res1 325 res2 419 k 1178
res1 325 res2 420 k 1179
res1 326 res2 328 k 1180
res1 326 res2 329 k 1181
res1 326 res2 420 k 1182
res1 326 res2 421 k 1183
res1 327 res2 329 k 1184
res1 327 res2 387 k 1185
res1 327 res2 388 k 1186
res1 327 res2 389 k 1187
res1 327 res2 390 k 1188
res1 327 res2 419 k 1189
res1 327 res2 420 k 1190
res1 328 res2 330 k 1191
res1 329 res2 331 k 1192
res1 329 res2 333 k 1193
res1 329 res2 382 k 1194
res1 330 res2 332 k 1195
res1 330 res2 333 k 1196
res1 330 res2 382 k 1197
res1 331 res2 333 k 1198
res1 331 res2 382 k 1199
res1 331 res2 383 k 1200
res1 331 res2 384 k 1201
res1 331 res2 385 k 1202
res1 332 res2 334 k 1203
res1 332 res2 381 k 1204
res1 332 res2 382 k 1205
res1 333 res2 335 k 1206
res1 333 res2 380 k 1207
res1 333 res2 381 k 1208
res1 333 res2 382 k 1209
res1 334 res2 336 k 1210
res1 334 res2 379 k 1211
res1 334 res2 380 k 1212
res1 334 res2 381 k 1213
res1 335 res2 371 k 1214
res1 335 res2 380 k 1215
res1 335 res2 381 k 1216
res1 335 res2 382 k 1217
res1 335 res2 417 k 1218
res1 336 res2 378 k 1219
res1 336 res2 379 k 1220
res1 336 res2 380 k 1221
res1 336 res2 415 k 1222
res1 336 res2 417 k 1223
res1 337 res2 339 k 1224
res1 337 res2 377 k 1225
res1 337 res2 378 k 1226
res1 337 res2 379 k 1227
res1 338 res2 356 k 1228
res1 338 res2 377 k 1229
res1 338 res2 378 k 1230
res1 338 res2 380 k 1231
res1 338 res2 399 k 1232
res1 338 res2 415 k 1233
res1 339 res2 356 k 1234
res1 340 res2 354 k 1235
res1 340 res2 356 k 1236
res1 340 res2 401 k 1237
res1 341 res2 343 k 1238
res1 341 res2 354 k 1239
res1 342 res2 344 k 1240
res1 342 res2 351 k 1241
res1 342 res2 352 k 1242
res1 342 res2 354 k 1243
res1 342 res2 403 k 1244
res1 343 res2 345 k 1245
res1 344 res2 346 k 1246
res1 344 res2 351 k 1247
res1 344 res2 352 k 1248
res1 345 res2 347 k 1249
res1 345 res2 348 k 1250
res1 345 res2 349 k 1251
res1 345 res2 352 k 1252
res1 346 res2 348 k 1253
res1 346 res2 349 k 1254
res1 346 res2 352 k 1255
res1 346 res2 353 k 1256
res1 347 res2 349 k 1257
res1 349 res2 351 k 1258
res1 350 res2 352 k 1259
res1 350 res2 353 k 1260
res1 350 res2 403 k 1261
res1 350 res2 404 k 1262
res1 350 res2 405 k 1263
res1 351 res2 353 k 1264
res1 351 res2 403 k 1265
res1 351 res2 404 k 1266
res1 352 res2 354 k 1267
res1 352 res2 403 k 1268
res1 353 res2 355 k 1269
res1 353 res2 402 k 1270
res1 353 res2 403 k 1271
res1 353 res2 404 k 1272
res1 353 res2 405 k 1273
res1 353 res2 406 k 1274
res1 354 res2 356 k 1275
res1 354 res2 375 k 1276
res1 354 res2 401 k 1277
res1 354 res2 402 k 1278
res1 354 res2 403 k 1279
res1 355 res2 357 k 1280
res1 355 res2 375 k 1281
res1 355 res2 400 k 1282
res1 355 res2 401 k 1283
res1 355 res2 402 k 1284
res1 355 res2 405 k 1285
res1 355 res2 406 k 1286
res1 356 res2 373 k 1287
res1 356 res2 374 k 1288
res1 356 res2 375 k 1289
res1 356 res2 376 k 1290
res1 356 res2 377 k 1291
res1 356 res2 378 k 1292
res1 356 res2 400 k 1293
res1 356 res2 401 k 1294
res1 357 res2 359 k 1295
res1 357 res2 373 k 1296
res1 357 res2 398 k 1297
res1 357 res2 399 k 1298
res1 357 res2 400 k 1299
res1 358 res2 360 k 1300
res1 358 res2 371 k 1301
res1 358 res2 372 k 1302
res1 358 res2 373 k 1303
res1 358 res2 397 k 1304
res1 358 res2 398 k 1305
res1 358 res2 399 k 1306
res1 359 res2 398 k 1307
res1 359 res2 399 k 1308
res1 359 res2 400 k 1309
res1 359 res2 412 k 1310
res1 360 res2 362 k 1311
res1 360 res2 396 k 1312
res1 360 res2 397 k 1313
res1 360 res2 398 k 1314
res1 361 res2 363 k 1315
res1 361 res2 364 k 1316
res1 361 res2 365 k 1317
res1 361 res2 367 k 1318
res1 361 res2 368 k 1319
res1 361 res2 369 k 1320
res1 361 res2 370 k 1321
res1 361 res2 371 k 1322
res1 361 res2 395 k 1323
res1 361 res2 396 k 1324
res1 361 res2 397 k 1325
res1 362 res2 364 k 1326
res1 362 res2 394 k 1327
res1 362 res2 395 k 1328
res1 362 res2 396 k 1329
res1 363 res2 365 k 1330
res1 363 res2 392 k 1331
res1 363 res2 394 k 1332
res1 363 res2 395 k 1333
res1 364 res2 366 k 1334
res1 364 res2 367 k 1335
res1 364 res2 368 k 1336
res1 365 res2 367 k 1337
res1 365 res2 392 k 1338
res1 365 res2 395 k 1339
res1 366 res2 370 k 1340
res1 366 res2 386 k 1341
res1 366 res2 392 k 1342
res1 366 res2 395 k 1343
res1 367 res2 369 k 1344
res1 367 res2 370 k 1345
res1 367 res2 384 k 1346
res1 367 res2 385 k 1347
res1 368 res2 370 k 1348
res1 369 res2 371 k 1349
res1 369 res2 383 k 1350
res1 369 res2 384 k 1351
res1 370 res2 381 k 1352
res1 370 res2 382 k 1353
res1 370 res2 383 k 1354
res1 370 res2 384 k 1355
res1 370 res2 385 k 1356
res1 370 res2 386 k 1357
res1 370 res2 387 k 1358
res1 370 res2 395 k 1359
res1 371 res2 380 k 1360
res1 371 res2 381 k 1361
res1 371 res2 382 k 1362
res1 371 res2 383 k 1363
res1 371 res2 387 k 1364
res1 371 res2 395 k 1365
res1 371 res2 397 k 1366
res1 371 res2 417 k 1367
res1 372 res2 374 k 1368
res1 372 res2 379 k 1369
res1 372 res2 380 k 1370
res1 372 res2 381 k 1371
res1 372 res2 383 k 1372
res1 373 res2 375 k 1373
res1 373 res2 378 k 1374
res1 373 res2 379 k 1375
res1 373 res2 380 k 1376
res1 374 res2 376 k 1377
res1 374 res2 377 k 1378
res1 374 res2 378 k 1379
res1 374 res2 379 k 1380
res1 375 res2 377 k 1381
res1 375 res2 405 k 1382
res1 376 res2 378 k 1383
res1 377 res2 379 k 1384
res1 378 res2 380 k 1385
res1 379 res2 381 k 1386
res1 380 res2 397 k 1387
res1 380 res2 399 k 1388
res1 380 res2 415 k 1389
res1 380 res2 417 k 1390
res1 381 res2 383 k 1391
res1 382 res2 384 k 1392
res1 384 res2 386 k 1393
res1 385 res2 387 k 1394
res1 386 res2 388 k 1395
res1 387 res2 389 k 1396
res1 387 res2 395 k 1397
res1 387 res2 419 k 1398
res1 388 res2 390 k 1399
res1 388 res2 391 k 1400
res1 388 res2 392 k 1401
res1 388 res2 393 k 1402
res1 388 res2 419 k 1403
res1 389 res2 391 k 1404
res1 389 res2 392 k 1405
res1 389 res2 393 k 1406
res1 389 res2 419 k 1407
res1 389 res2 420 k 1408
res1 389 res2 421 k 1409
res1 390 res2 392 k 1410
res1 391 res2 393 k 1411
res1 392 res2 394 k 1412
res1 392 res2 395 k 1413
res1 392 res2 419 k 1414
res1 393 res2 417 k 1415
res1 393 res2 418 k 1416
res1 393 res2 419 k 1417
res1 394 res2 396 k 1418
res1 394 res2 417 k 1419
res1 394 res2 418 k 1420
res1 395 res2 397 k 1421
res1 395 res2 415 k 1422
res1 395 res2 416 k 1423
res1 395 res2 417 k 1424
res1 395 res2 419 k 1425
res1 396 res2 398 k 1426
res1 396 res2 414 k 1427
res1 396 res2 415 k 1428
res1 396 res2 416 k 1429
res1 397 res2 399 k 1430
res1 397 res2 413 k 1431
res1 397 res2 414 k 1432
res1 397 res2 415 k 1433
res1 397 res2 417 k 1434
res1 398 res2 400 k 1435
res1 398 res2 412 k 1436
res1 398 res2 413 k 1437
res1 399 res2 401 k 1438
res1 399 res2 411 k 1439
res1 399 res2 412 k 1440
res1 399 res2 413 k 1441
res1 399 res2 414 k 1442
res1 399 res2 415 k 1443
res1 400 res2 402 k 1444
res1 400 res2 410 k 1445
res1 400 res2 411 k 1446
res1 400 res2 412 k 1447
res1 401 res2 403 k 1448
res1 401 res2 409 k 1449
res1 401 res2 410 k 1450
res1 401 res2 411 k 1451
res1 402 res2 404 k 1452
res1 402 res2 405 k 1453
res1 402 res2 406 k 1454
res1 402 res2 408 k 1455
res1 402 res2 409 k 1456
res1 402 res2 410 k 1457
res1 403 res2 405 k 1458
res1 403 res2 406 k 1459
res1 403 res2 407 k 1460
res1 403 res2 408 k 1461
res1 403 res2 409 k 1462
res1 404 res2 406 k 1463
res1 404 res2 407 k 1464
res1 404 res2 408 k 1465
res1 405 res2 407 k 1466
res1 406 res2 408 k 1467
res1 408 res2 410 k 1468
res1 413 res2 415 k 1469
res1 414 res2 416 k 1470
res1 415 res2 417 k 1471
res1 416 res2 418 k 1472
res1 417 res2 419 k 1473
res1 418 res2 420 k 1474
<-getEdges
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
->edgeConnectivity
  proteinGraph->nedges = 1475
edgeConnectivity
->gnewman
->copyGraph
<-copyGraph
Number of communities 1, communities in prev iteration 1 and edges 1475
->edgeConnectivity
  proteinGraph->nedges = 1475
edgeConnectivity
Maximum edge Connectivity 32881.210938 between residues 163 and 170
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1474
->edgeConnectivity
  proteinGraph->nedges = 1474
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 25058.255859 between residues 374 and 376
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1473
->edgeConnectivity
  proteinGraph->nedges = 1473
edgeConnectivity
Maximum edge Connectivity 22005.683594 between residues 280 and 283
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1472
->edgeConnectivity
  proteinGraph->nedges = 1472
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 23144.039062 between residues 257 and 259
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1471
->edgeConnectivity
  proteinGraph->nedges = 1471
edgeConnectivity
Maximum edge Connectivity 19777.683594 between residues 165 and 167
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1470
->edgeConnectivity
  proteinGraph->nedges = 1470
edgeConnectivity
Maximum edge Connectivity 19123.595703 between residues 221 and 275
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1469
->edgeConnectivity
  proteinGraph->nedges = 1469
edgeConnectivity
Maximum edge Connectivity 26516.476562 between residues 220 and 275
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1468
->edgeConnectivity
  proteinGraph->nedges = 1468
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 30883.392578 between residues 256 and 280
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1467
->edgeConnectivity
  proteinGraph->nedges = 1467
edgeConnectivity
Maximum edge Connectivity 24111.228516 between residues 280 and 282
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1466
->edgeConnectivity
  proteinGraph->nedges = 1466
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 26702.251953 between residues 275 and 277
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1465
->edgeConnectivity
  proteinGraph->nedges = 1465
edgeConnectivity
Maximum edge Connectivity 23764.896484 between residues 307 and 309
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1464
->edgeConnectivity
  proteinGraph->nedges = 1464
edgeConnectivity
Maximum edge Connectivity 18256.341797 between residues 251 and 283
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1463
->edgeConnectivity
  proteinGraph->nedges = 1463
edgeConnectivity
Maximum edge Connectivity 17571.542969 between residues 355 and 357
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1462
->edgeConnectivity
  proteinGraph->nedges = 1462
edgeConnectivity
Maximum edge Connectivity 18875.158203 between residues 315 and 343
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1461
->edgeConnectivity
  proteinGraph->nedges = 1461
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 16465.650391 between residues 146 and 168
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1460
->edgeConnectivity
  proteinGraph->nedges = 1460
edgeConnectivity
Maximum edge Connectivity 18947.988281 between residues 163 and 165
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1459
->edgeConnectivity
  proteinGraph->nedges = 1459
edgeConnectivity
Maximum edge Connectivity 27542.134766 between residues 146 and 164
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1458
->edgeConnectivity
  proteinGraph->nedges = 1458
edgeConnectivity
Maximum edge Connectivity 14559.644531 between residues 277 and 307
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1457
->edgeConnectivity
  proteinGraph->nedges = 1457
edgeConnectivity
Maximum edge Connectivity 13935.954102 between residues 9 and 64
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1456
->edgeConnectivity
  proteinGraph->nedges = 1456
edgeConnectivity
Maximum edge Connectivity 13994.473633 between residues 12 and 14
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1455
->edgeConnectivity
  proteinGraph->nedges = 1455
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 19027.802734 between residues 10 and 64
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1454
->edgeConnectivity
  proteinGraph->nedges = 1454
edgeConnectivity
Maximum edge Connectivity 14637.627930 between residues 15 and 63
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1453
->edgeConnectivity
  proteinGraph->nedges = 1453
edgeConnectivity
Maximum edge Connectivity 13522.937500 between residues 12 and 17
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1452
->edgeConnectivity
  proteinGraph->nedges = 1452
edgeConnectivity
Maximum edge Connectivity 20557.890625 between residues 11 and 349
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1451
->edgeConnectivity
  proteinGraph->nedges = 1451
edgeConnectivity
Maximum edge Connectivity 20236.070312 between residues 69 and 72
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1450
->edgeConnectivity
  proteinGraph->nedges = 1450
edgeConnectivity
Maximum edge Connectivity 17270.962891 between residues 64 and 66
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1449
->edgeConnectivity
  proteinGraph->nedges = 1449
edgeConnectivity
Maximum edge Connectivity 18136.320312 between residues 69 and 71
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1448
->edgeConnectivity
  proteinGraph->nedges = 1448
edgeConnectivity
Maximum edge Connectivity 17135.341797 between residues 99 and 352
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1447
->edgeConnectivity
  proteinGraph->nedges = 1447
edgeConnectivity
Maximum edge Connectivity 14452.382812 between residues 45 and 69
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1446
->edgeConnectivity
  proteinGraph->nedges = 1446
edgeConnectivity
Maximum edge Connectivity 20759.974609 between residues 96 and 98
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1445
->edgeConnectivity
  proteinGraph->nedges = 1445
edgeConnectivity
Maximum edge Connectivity 19996.841797 between residues 66 and 96
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1444
->edgeConnectivity
  proteinGraph->nedges = 1444
edgeConnectivity
Maximum edge Connectivity 21539.761719 between residues 66 and 70
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1443
->edgeConnectivity
  proteinGraph->nedges = 1443
edgeConnectivity
Maximum edge Connectivity 19125.158203 between residues 10 and 351
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1442
->edgeConnectivity
  proteinGraph->nedges = 1442
edgeConnectivity
Maximum edge Connectivity 21208.429688 between residues 9 and 98
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1441
->edgeConnectivity
  proteinGraph->nedges = 1441
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 14956.716797 between residues 146 and 167
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1440
->edgeConnectivity
  proteinGraph->nedges = 1440
edgeConnectivity
Maximum edge Connectivity 13679.255859 between residues 376 and 378
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1439
->edgeConnectivity
  proteinGraph->nedges = 1439
edgeConnectivity
Maximum edge Connectivity 14146.393555 between residues 357 and 402
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1438
->edgeConnectivity
  proteinGraph->nedges = 1438
edgeConnectivity
Maximum edge Connectivity 18119.175781 between residues 356 and 358
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1437
->edgeConnectivity
  proteinGraph->nedges = 1437
edgeConnectivity
Maximum edge Connectivity 18077.193359 between residues 357 and 376
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1436
->edgeConnectivity
  proteinGraph->nedges = 1436
edgeConnectivity
Maximum edge Connectivity 16952.794922 between residues 401 and 403
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1435
->edgeConnectivity
  proteinGraph->nedges = 1435
edgeConnectivity
Maximum edge Connectivity 14437.742188 between residues 401 and 411
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1434
->edgeConnectivity
  proteinGraph->nedges = 1434
edgeConnectivity
Maximum edge Connectivity 15476.425781 between residues 315 and 317
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1433
->edgeConnectivity
  proteinGraph->nedges = 1433
edgeConnectivity
Maximum edge Connectivity 17750.861328 between residues 317 and 341
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1432
->edgeConnectivity
  proteinGraph->nedges = 1432
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 <-edgeConnectivity
Maximum edge Connectivity 16628.185547 between residues 400 and 402
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1431
->edgeConnectivity
  proteinGraph->nedges = 1431
edgeConnectivity
Maximum edge Connectivity 20481.919922 between residues 342 and 344
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1430
->edgeConnectivity
  proteinGraph->nedges = 1430
edgeConnectivity
Maximum edge Connectivity 26719.650391 between residues 314 and 316
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1429
->edgeConnectivity
  proteinGraph->nedges = 1429
edgeConnectivity
Maximum edge Connectivity 28034.447266 between residues 315 and 412
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1428
->edgeConnectivity
  proteinGraph->nedges = 1428
edgeConnectivity
Maximum edge Connectivity 26831.994141 between residues 315 and 342
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1427
->edgeConnectivity
  proteinGraph->nedges = 1427
edgeConnectivity
Maximum edge Connectivity 19613.394531 between residues 402 and 412
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1426
->edgeConnectivity
  proteinGraph->nedges = 1426
edgeConnectivity
Maximum edge Connectivity 21278.312500 between residues 356 and 401
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1425
->edgeConnectivity
  proteinGraph->nedges = 1425
edgeConnectivity
Maximum edge Connectivity 28134.205078 between residues 314 and 342
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1424
->edgeConnectivity
  proteinGraph->nedges = 1424
edgeConnectivity
Maximum edge Connectivity 34712.796875 between residues 341 and 355
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1423
->edgeConnectivity
  proteinGraph->nedges = 1423
edgeConnectivity
Maximum edge Connectivity 33461.953125 between residues 317 and 402
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1422
->edgeConnectivity
  proteinGraph->nedges = 1422
edgeConnectivity
Maximum edge Connectivity 49580.429688 between residues 342 and 355
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 1, communities in prev iteration 1 and edges 1421
->edgeConnectivity
  proteinGraph->nedges = 1421
edgeConnectivity
Maximum edge Connectivity 55760.000000 between residues 341 and 402
->floydWarshall
  residueCount = 422
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 1 and edges 1420
->addNodeToCommunityTree
numComm = 2, numCommPrev = 1
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1420
edgeConnectivity
Maximum edge Connectivity 10904.803711 between residues 141 and 193
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1419
->edgeConnectivity
  proteinGraph->nedges = 1419
edgeConnectivity
Maximum edge Connectivity 13745.740234 between residues 140 and 221
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1418
->edgeConnectivity
  proteinGraph->nedges = 1418
edgeConnectivity
Maximum edge Connectivity 13266.910156 between residues 223 and 226
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1417
->edgeConnectivity
  proteinGraph->nedges = 1417
edgeConnectivity
Maximum edge Connectivity 15390.774414 between residues 141 and 310
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1416
->edgeConnectivity
  proteinGraph->nedges = 1416
edgeConnectivity
Maximum edge Connectivity 11915.307617 between residues 138 and 222
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1415
->edgeConnectivity
  proteinGraph->nedges = 1415
edgeConnectivity
Maximum edge Connectivity 12458.120117 between residues 223 and 228
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1414
->edgeConnectivity
  proteinGraph->nedges = 1414
edgeConnectivity
Maximum edge Connectivity 12490.607422 between residues 277 and 281
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1413
->edgeConnectivity
  proteinGraph->nedges = 1413
edgeConnectivity
Maximum edge Connectivity 11929.925781 between residues 226 and 274
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1412
->edgeConnectivity
  proteinGraph->nedges = 1412
edgeConnectivity
Maximum edge Connectivity 14320.438477 between residues 194 and 311
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1411
->edgeConnectivity
  proteinGraph->nedges = 1411
edgeConnectivity
Maximum edge Connectivity 16990.734375 between residues 219 and 275
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1410
->edgeConnectivity
  proteinGraph->nedges = 1410
edgeConnectivity
Maximum edge Connectivity 20829.064453 between residues 220 and 307
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1409
->edgeConnectivity
  proteinGraph->nedges = 1409
edgeConnectivity
Maximum edge Connectivity 24930.992188 between residues 284 and 304
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1408
->edgeConnectivity
  proteinGraph->nedges = 1408
edgeConnectivity
Maximum edge Connectivity 15000.487305 between residues 352 and 405
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1407
->edgeConnectivity
  proteinGraph->nedges = 1407
edgeConnectivity
Maximum edge Connectivity 18142.607422 between residues 139 and 310
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1406
->edgeConnectivity
  proteinGraph->nedges = 1406
edgeConnectivity
Maximum edge Connectivity 16506.167969 between residues 276 and 307
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1405
->edgeConnectivity
  proteinGraph->nedges = 1405
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 <-edgeConnectivity
Maximum edge Connectivity 23155.171875 between residues 218 and 308
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1404
->edgeConnectivity
  proteinGraph->nedges = 1404
edgeConnectivity
Maximum edge Connectivity 14990.181641 between residues 218 and 220
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1403
->edgeConnectivity
  proteinGraph->nedges = 1403
edgeConnectivity
Maximum edge Connectivity 21059.578125 between residues 306 and 308
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1402
->edgeConnectivity
  proteinGraph->nedges = 1402
edgeConnectivity
Maximum edge Connectivity 20142.693359 between residues 279 and 281
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1401
->edgeConnectivity
  proteinGraph->nedges = 1401
edgeConnectivity
Maximum edge Connectivity 12908.027344 between residues 280 and 307
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1400
->edgeConnectivity
  proteinGraph->nedges = 1400
edgeConnectivity
Maximum edge Connectivity 17476.867188 between residues 219 and 222
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1399
->edgeConnectivity
  proteinGraph->nedges = 1399
edgeConnectivity
Maximum edge Connectivity 21269.593750 between residues 217 and 308
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1398
->edgeConnectivity
  proteinGraph->nedges = 1398
edgeConnectivity
Maximum edge Connectivity 29176.318359 between residues 220 and 222
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1397
->edgeConnectivity
  proteinGraph->nedges = 1397
edgeConnectivity
Maximum edge Connectivity 31054.498047 between residues 222 and 274
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1396
->edgeConnectivity
  proteinGraph->nedges = 1396
edgeConnectivity
Maximum edge Connectivity 23448.187500 between residues 3 and 231
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1395
->edgeConnectivity
  proteinGraph->nedges = 1395
edgeConnectivity
Maximum edge Connectivity 38558.195312 between residues 215 and 304
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1394
->edgeConnectivity
  proteinGraph->nedges = 1394
edgeConnectivity
Maximum edge Connectivity 34037.875000 between residues 20 and 214
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1393
->edgeConnectivity
  proteinGraph->nedges = 1393
edgeConnectivity
Maximum edge Connectivity 35174.000000 between residues 19 and 215
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 2, communities in prev iteration 2 and edges 1392
->edgeConnectivity
  proteinGraph->nedges = 1392
edgeConnectivity
Maximum edge Connectivity 43688.000000 between residues 20 and 215
->floydWarshall
  residueCount = 340
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 2 and edges 1391
->addNodeToCommunityTree
numComm = 3, numCommPrev = 2
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1391
edgeConnectivity
Maximum edge Connectivity 9279.874023 between residues 101 and 103
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1390
->edgeConnectivity
  proteinGraph->nedges = 1390
edgeConnectivity
Maximum edge Connectivity 11047.598633 between residues 104 and 132
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1389
->edgeConnectivity
  proteinGraph->nedges = 1389
edgeConnectivity
Maximum edge Connectivity 12081.913086 between residues 65 and 96
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1388
->edgeConnectivity
  proteinGraph->nedges = 1388
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 <-edgeConnectivity
Maximum edge Connectivity 11099.371094 between residues 68 and 70
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1387
->edgeConnectivity
  proteinGraph->nedges = 1387
edgeConnectivity
Maximum edge Connectivity 11096.000977 between residues 67 and 133
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1386
->edgeConnectivity
  proteinGraph->nedges = 1386
edgeConnectivity
Maximum edge Connectivity 14068.056641 between residues 9 and 99
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1385
->edgeConnectivity
  proteinGraph->nedges = 1385
edgeConnectivity
Maximum edge Connectivity 9220.150391 between residues 192 and 199
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1384
->edgeConnectivity
  proteinGraph->nedges = 1384
edgeConnectivity
Maximum edge Connectivity 8905.706055 between residues 7 and 64
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1383
->edgeConnectivity
  proteinGraph->nedges = 1383
edgeConnectivity
Maximum edge Connectivity 8508.750977 between residues 106 and 130
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1382
->edgeConnectivity
  proteinGraph->nedges = 1382
edgeConnectivity
Maximum edge Connectivity 9110.945312 between residues 104 and 106
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1381
->edgeConnectivity
  proteinGraph->nedges = 1381
edgeConnectivity
Maximum edge Connectivity 9090.345703 between residues 142 and 144
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1380
->edgeConnectivity
  proteinGraph->nedges = 1380
edgeConnectivity
Maximum edge Connectivity 7179.265625 between residues 66 and 133
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1379
->edgeConnectivity
  proteinGraph->nedges = 1379
edgeConnectivity
Maximum edge Connectivity 12300.402344 between residues 9 and 101
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1378
->edgeConnectivity
  proteinGraph->nedges = 1378
edgeConnectivity
Maximum edge Connectivity 9651.190430 between residues 142 and 193
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1377
->edgeConnectivity
  proteinGraph->nedges = 1377
edgeConnectivity
Maximum edge Connectivity 15237.957031 between residues 99 and 141
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1376
->edgeConnectivity
  proteinGraph->nedges = 1376
edgeConnectivity
Maximum edge Connectivity 10593.919922 between residues 146 and 191
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1375
->edgeConnectivity
  proteinGraph->nedges = 1375
edgeConnectivity
Maximum edge Connectivity 12175.797852 between residues 144 and 146
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1374
->edgeConnectivity
  proteinGraph->nedges = 1374
edgeConnectivity
Maximum edge Connectivity 9257.228516 between residues 69 and 96
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1373
->edgeConnectivity
  proteinGraph->nedges = 1373
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 <-edgeConnectivity
Maximum edge Connectivity 9435.468750 between residues 9 and 66
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1372
->edgeConnectivity
  proteinGraph->nedges = 1372
edgeConnectivity
Maximum edge Connectivity 12569.443359 between residues 101 and 199
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1371
->edgeConnectivity
  proteinGraph->nedges = 1371
edgeConnectivity
Maximum edge Connectivity 14189.408203 between residues 67 and 134
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1370
->edgeConnectivity
  proteinGraph->nedges = 1370
edgeConnectivity
Maximum edge Connectivity 11625.882812 between residues 99 and 134
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1369
->edgeConnectivity
  proteinGraph->nedges = 1369
edgeConnectivity
Maximum edge Connectivity 13537.614258 between residues 102 and 104
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1368
->edgeConnectivity
  proteinGraph->nedges = 1368
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 <-edgeConnectivity
Maximum edge Connectivity 13007.589844 between residues 98 and 141
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1367
->edgeConnectivity
  proteinGraph->nedges = 1367
edgeConnectivity
Maximum edge Connectivity 9574.308594 between residues 101 and 134
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1366
->edgeConnectivity
  proteinGraph->nedges = 1366
edgeConnectivity
Maximum edge Connectivity 13835.578125 between residues 66 and 97
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1365
->edgeConnectivity
  proteinGraph->nedges = 1365
edgeConnectivity
Maximum edge Connectivity 13944.916992 between residues 9 and 96
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1364
->edgeConnectivity
  proteinGraph->nedges = 1364
edgeConnectivity
Maximum edge Connectivity 12749.854492 between residues 67 and 98
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1363
->edgeConnectivity
  proteinGraph->nedges = 1363
edgeConnectivity
Maximum edge Connectivity 13501.405273 between residues 9 and 65
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1362
->edgeConnectivity
  proteinGraph->nedges = 1362
edgeConnectivity
Maximum edge Connectivity 18752.003906 between residues 98 and 101
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1361
->edgeConnectivity
  proteinGraph->nedges = 1361
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 <-edgeConnectivity
Maximum edge Connectivity 14060.388672 between residues 67 and 102
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1360
->edgeConnectivity
  proteinGraph->nedges = 1360
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 <-edgeConnectivity
Maximum edge Connectivity 17500.574219 between residues 11 and 63
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1359
->edgeConnectivity
  proteinGraph->nedges = 1359
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 <-edgeConnectivity
Maximum edge Connectivity 19650.880859 between residues 8 and 10
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1358
->edgeConnectivity
  proteinGraph->nedges = 1358
edgeConnectivity
Maximum edge Connectivity 19720.207031 between residues 9 and 67
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1357
->edgeConnectivity
  proteinGraph->nedges = 1357
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 <-edgeConnectivity
Maximum edge Connectivity 16249.659180 between residues 8 and 308
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 
  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1356
->edgeConnectivity
  proteinGraph->nedges = 1356
edgeConnectivity
Maximum edge Connectivity 17464.000000 between residues 97 and 99
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 3, communities in prev iteration 3 and edges 1355
->edgeConnectivity
  proteinGraph->nedges = 1355
edgeConnectivity
Maximum edge Connectivity 29370.000000 between residues 97 and 219
->floydWarshall
  residueCount = 254
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 3 and edges 1354
->addNodeToCommunityTree
numComm = 4, numCommPrev = 3
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1354
edgeConnectivity
Maximum edge Connectivity 5071.842773 between residues 195 and 197
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1353
->edgeConnectivity
  proteinGraph->nedges = 1353
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 3527.880127 between residues 194 and 197
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1352
->edgeConnectivity
  proteinGraph->nedges = 1352
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 4227.019531 between residues 193 and 197
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1351
->edgeConnectivity
  proteinGraph->nedges = 1351
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 6249.224609 between residues 199 and 408
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1350
->edgeConnectivity
  proteinGraph->nedges = 1350
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 5950.608887 between residues 103 and 408
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1349
->edgeConnectivity
  proteinGraph->nedges = 1349
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 8762.759766 between residues 100 and 405
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1348
->edgeConnectivity
  proteinGraph->nedges = 1348
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 9163.808594 between residues 221 and 223
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1347
->edgeConnectivity
  proteinGraph->nedges = 1347
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 11415.000000 between residues 66 and 68
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 4, communities in prev iteration 4 and edges 1346
->edgeConnectivity
  proteinGraph->nedges = 1346
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 11752.000000 between residues 66 and 69
->floydWarshall
  residueCount = 165
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.

  Distances calculated.

<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 4 and edges 1345
->addNodeToCommunityTree
numComm = 5, numCommPrev = 4
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1345
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 <-edgeConnectivity
Maximum edge Connectivity 1607.109497 between residues 124 and 169
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1344
->edgeConnectivity
  proteinGraph->nedges = 1344
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1683.543213 between residues 147 and 189
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1343
->edgeConnectivity
  proteinGraph->nedges = 1343
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2066.546875 between residues 169 and 171
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1342
->edgeConnectivity
  proteinGraph->nedges = 1342
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1965.437622 between residues 126 and 169
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1341
->edgeConnectivity
  proteinGraph->nedges = 1341
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2066.229736 between residues 189 and 191
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1340
->edgeConnectivity
  proteinGraph->nedges = 1340
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1723.173950 between residues 162 and 173
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1339
->edgeConnectivity
  proteinGraph->nedges = 1339
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1732.324707 between residues 146 and 165
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1338
->edgeConnectivity
  proteinGraph->nedges = 1338
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2232.317139 between residues 189 and 202
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1337
->edgeConnectivity
  proteinGraph->nedges = 1337
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1656.779175 between residues 111 and 113
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1336
->edgeConnectivity
  proteinGraph->nedges = 1336
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1627.357178 between residues 111 and 205
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1335
->edgeConnectivity
  proteinGraph->nedges = 1335
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1761.541626 between residues 162 and 171
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1334
->edgeConnectivity
  proteinGraph->nedges = 1334
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1552.760986 between residues 288 and 290
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1333
->edgeConnectivity
  proteinGraph->nedges = 1333
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1482.124756 between residues 147 and 163
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1332
->edgeConnectivity
  proteinGraph->nedges = 1332
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1659.672119 between residues 168 and 170
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1331
->edgeConnectivity
  proteinGraph->nedges = 1331
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1763.597168 between residues 106 and 191
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1330
->edgeConnectivity
  proteinGraph->nedges = 1330
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2019.385010 between residues 190 and 192
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1329
->edgeConnectivity
  proteinGraph->nedges = 1329
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1649.388916 between residues 146 and 190
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1328
->edgeConnectivity
  proteinGraph->nedges = 1328
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1388.137817 between residues 77 and 79
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1327
->edgeConnectivity
  proteinGraph->nedges = 1327
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1313.497314 between residues 245 and 288
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1326
->edgeConnectivity
  proteinGraph->nedges = 1326
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1280.147217 between residues 189 and 201
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1325
->edgeConnectivity
  proteinGraph->nedges = 1325
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1372.754150 between residues 206 and 208
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1324
->edgeConnectivity
  proteinGraph->nedges = 1324
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1560.402710 between residues 188 and 190
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1323
->edgeConnectivity
  proteinGraph->nedges = 1323
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1516.847168 between residues 126 and 128
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1322
->edgeConnectivity
  proteinGraph->nedges = 1322
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1545.364014 between residues 125 and 170
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1321
->edgeConnectivity
  proteinGraph->nedges = 1321
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1348.698730 between residues 186 and 188
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1320
->edgeConnectivity
  proteinGraph->nedges = 1320
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1480.070312 between residues 107 and 111
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1319
->edgeConnectivity
  proteinGraph->nedges = 1319
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1638.847046 between residues 105 and 129
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1318
->edgeConnectivity
  proteinGraph->nedges = 1318
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1724.681274 between residues 107 and 129
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1317
->edgeConnectivity
  proteinGraph->nedges = 1317
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2299.893066 between residues 130 and 146
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1316
->edgeConnectivity
  proteinGraph->nedges = 1316
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 3431.380859 between residues 106 and 201
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1315
->edgeConnectivity
  proteinGraph->nedges = 1315
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2192.088379 between residues 149 and 189
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1314
->edgeConnectivity
  proteinGraph->nedges = 1314
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2737.999268 between residues 188 and 202
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1313
->edgeConnectivity
  proteinGraph->nedges = 1313
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 2671.208740 between residues 149 and 188
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1312
->edgeConnectivity
  proteinGraph->nedges = 1312
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 3709.610840 between residues 147 and 188
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1311
->edgeConnectivity
  proteinGraph->nedges = 1311
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 5694.000000 between residues 106 and 190
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 5, communities in prev iteration 5 and edges 1310
->edgeConnectivity
  proteinGraph->nedges = 1310
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 5840.000000 between residues 106 and 202
->floydWarshall
  residueCount = 113
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 5 and edges 1309
->addNodeToCommunityTree
numComm = 6, numCommPrev = 5
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1309
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <-edgeConnectivity
Maximum edge Connectivity 1232.951538 between residues 51 and 58
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1308
->edgeConnectivity
  proteinGraph->nedges = 1308
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1155.758789 between residues 262 and 264
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1307
->edgeConnectivity
  proteinGraph->nedges = 1307
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1080.659546 between residues 35 and 76
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1306
->edgeConnectivity
  proteinGraph->nedges = 1306
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1137.312134 between residues 34 and 77
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1305
->edgeConnectivity
  proteinGraph->nedges = 1305
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1040.500000 between residues 87 and 89
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1304
->edgeConnectivity
  proteinGraph->nedges = 1304
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1663.833008 between residues 33 and 77
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1303
->edgeConnectivity
  proteinGraph->nedges = 1303
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1552.208130 between residues 33 and 35
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1302
->edgeConnectivity
  proteinGraph->nedges = 1302
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1697.666382 between residues 36 and 51
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1301
->edgeConnectivity
  proteinGraph->nedges = 1301
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1164.822876 between residues 56 and 58
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1300
->edgeConnectivity
  proteinGraph->nedges = 1300
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1432.513916 between residues 52 and 57
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1299
->edgeConnectivity
  proteinGraph->nedges = 1299
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1170.034912 between residues 52 and 59
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1298
->edgeConnectivity
  proteinGraph->nedges = 1298
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1122.673706 between residues 51 and 53
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1297
->edgeConnectivity
  proteinGraph->nedges = 1297
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1647.208130 between residues 55 and 57
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1296
->edgeConnectivity
  proteinGraph->nedges = 1296
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1471.139038 between residues 21 and 57
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1295
->edgeConnectivity
  proteinGraph->nedges = 1295
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 1568.833374 between residues 51 and 57
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1294
->edgeConnectivity
  proteinGraph->nedges = 1294
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 2228.583008 between residues 22 and 76
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1293
->edgeConnectivity
  proteinGraph->nedges = 1293
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 2583.500000 between residues 35 and 51
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1292
->edgeConnectivity
  proteinGraph->nedges = 1292
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 2450.416504 between residues 20 and 56
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1291
->edgeConnectivity
  proteinGraph->nedges = 1291
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 2230.000244 between residues 20 and 22
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1290
->edgeConnectivity
  proteinGraph->nedges = 1290
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 3420.000000 between residues 22 and 90
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 6, communities in prev iteration 6 and edges 1289
->edgeConnectivity
  proteinGraph->nedges = 1289
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 3540.000000 between residues 2 and 22
->floydWarshall
  residueCount = 89
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 6 and edges 1288
->addNodeToCommunityTree
numComm = 7, numCommPrev = 6
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1288
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 <-edgeConnectivity
Maximum edge Connectivity 963.618164 between residues 246 and 287
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1287
->edgeConnectivity
  proteinGraph->nedges = 1287
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1028.843994 between residues 298 and 300
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1286
->edgeConnectivity
  proteinGraph->nedges = 1286
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1552.034424 between residues 245 and 262
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1285
->edgeConnectivity
  proteinGraph->nedges = 1285
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1692.291260 between residues 244 and 288
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1284
->edgeConnectivity
  proteinGraph->nedges = 1284
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1866.177124 between residues 244 and 246
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1283
->edgeConnectivity
  proteinGraph->nedges = 1283
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 2109.258545 between residues 262 and 267
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1282
->edgeConnectivity
  proteinGraph->nedges = 1282
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1701.050903 between residues 267 and 269
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1281
->edgeConnectivity
  proteinGraph->nedges = 1281
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 2187.349121 between residues 263 and 268
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1280
->edgeConnectivity
  proteinGraph->nedges = 1280
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 1365.533569 between residues 263 and 270
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1279
->edgeConnectivity
  proteinGraph->nedges = 1279
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 2354.027832 between residues 266 and 268
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1278
->edgeConnectivity
  proteinGraph->nedges = 1278
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 2125.112061 between residues 232 and 268
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1277
->edgeConnectivity
  proteinGraph->nedges = 1277
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 2434.375244 between residues 233 and 267
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1276
->edgeConnectivity
  proteinGraph->nedges = 1276
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 2696.999756 between residues 233 and 245
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1275
->edgeConnectivity
  proteinGraph->nedges = 1275
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 2630.694580 between residues 233 and 266
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 7, communities in prev iteration 7 and edges 1274
->edgeConnectivity
  proteinGraph->nedges = 1274
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 3248.000244 between residues 231 and 267
->floydWarshall
  residueCount = 86
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 8, communities in prev iteration 7 and edges 1273
->addNodeToCommunityTree
numComm = 8, numCommPrev = 7
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1273
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 <-edgeConnectivity
Maximum edge Connectivity 454.000000 between residues 10 and 63
->floydWarshall
  residueCount = 52
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 8, communities in prev iteration 8 and edges 1272
->edgeConnectivity
  proteinGraph->nedges = 1272
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 <-edgeConnectivity
Maximum edge Connectivity 540.000000 between residues 10 and 101
->floydWarshall
  residueCount = 52
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 8, communities in prev iteration 8 and edges 1271
->edgeConnectivity
  proteinGraph->nedges = 1271
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 <-edgeConnectivity
Maximum edge Connectivity 630.000000 between residues 10 and 99
->floydWarshall
  residueCount = 52
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 8 and edges 1270
->addNodeToCommunityTree
numComm = 9, numCommPrev = 8
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1270
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 <-edgeConnectivity
Maximum edge Connectivity 416.547638 between residues 380 and 382
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1269
->edgeConnectivity
  proteinGraph->nedges = 1269
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 519.791626 between residues 335 and 382
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1268
->edgeConnectivity
  proteinGraph->nedges = 1268
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 441.583344 between residues 374 and 381
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1267
->edgeConnectivity
  proteinGraph->nedges = 1267
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 441.583344 between residues 322 and 416
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1266
->edgeConnectivity
  proteinGraph->nedges = 1266
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 533.861145 between residues 322 and 417
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1265
->edgeConnectivity
  proteinGraph->nedges = 1265
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 439.166687 between residues 322 and 324
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1264
->edgeConnectivity
  proteinGraph->nedges = 1264
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 504.883301 between residues 417 and 419
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1263
->edgeConnectivity
  proteinGraph->nedges = 1263
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 442.500000 between residues 395 and 397
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1262
->edgeConnectivity
  proteinGraph->nedges = 1262
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 580.708313 between residues 393 and 396
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1261
->edgeConnectivity
  proteinGraph->nedges = 1261
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 499.249969 between residues 416 and 418
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1260
->edgeConnectivity
  proteinGraph->nedges = 1260
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 474.833344 between residues 338 and 380
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1259
->edgeConnectivity
  proteinGraph->nedges = 1259
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 691.500000 between residues 379 and 381
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1258
->edgeConnectivity
  proteinGraph->nedges = 1258
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 591.166687 between residues 373 and 384
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1257
->edgeConnectivity
  proteinGraph->nedges = 1257
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 514.416626 between residues 396 and 420
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1256
->edgeConnectivity
  proteinGraph->nedges = 1256
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 553.138916 between residues 362 and 398
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1255
->edgeConnectivity
  proteinGraph->nedges = 1255
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 548.250000 between residues 363 and 397
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1254
->edgeConnectivity
  proteinGraph->nedges = 1254
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 443.166656 between residues 373 and 382
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1253
->edgeConnectivity
  proteinGraph->nedges = 1253
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 543.916626 between residues 333 and 335
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1252
->edgeConnectivity
  proteinGraph->nedges = 1252
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 507.458282 between residues 324 and 419
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1251
->edgeConnectivity
  proteinGraph->nedges = 1251
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 572.680542 between residues 418 and 420
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1250
->edgeConnectivity
  proteinGraph->nedges = 1250
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 585.500000 between residues 336 and 381
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1249
->edgeConnectivity
  proteinGraph->nedges = 1249
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 622.750000 between residues 396 and 417
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1248
->edgeConnectivity
  proteinGraph->nedges = 1248
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 659.250000 between residues 324 and 418
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1247
->edgeConnectivity
  proteinGraph->nedges = 1247
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 682.866638 between residues 334 and 381
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1246
->edgeConnectivity
  proteinGraph->nedges = 1246
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 841.274963 between residues 372 and 383
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1245
->edgeConnectivity
  proteinGraph->nedges = 1245
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 697.700012 between residues 372 and 384
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1244
->edgeConnectivity
  proteinGraph->nedges = 1244
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 642.166748 between residues 372 and 381
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1243
->edgeConnectivity
  proteinGraph->nedges = 1243
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 809.749878 between residues 359 and 372
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1242
->edgeConnectivity
  proteinGraph->nedges = 1242
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 797.895752 between residues 362 and 397
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1241
->edgeConnectivity
  proteinGraph->nedges = 1241
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 1140.058350 between residues 396 and 398
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1240
->edgeConnectivity
  proteinGraph->nedges = 1240
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 1205.716675 between residues 398 and 418
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1239
->edgeConnectivity
  proteinGraph->nedges = 1239
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 1383.833252 between residues 361 and 363
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1238
->edgeConnectivity
  proteinGraph->nedges = 1238
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 1790.916626 between residues 396 and 416
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1237
->edgeConnectivity
  proteinGraph->nedges = 1237
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 2058.583252 between residues 337 and 418
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1236
->edgeConnectivity
  proteinGraph->nedges = 1236
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 2191.000000 between residues 372 and 398
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 9, communities in prev iteration 9 and edges 1235
->edgeConnectivity
  proteinGraph->nedges = 1235
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 3360.000000 between residues 381 and 418
->floydWarshall
  residueCount = 82
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 9 and edges 1234
->addNodeToCommunityTree
numComm = 10, numCommPrev = 9
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1234
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 <-edgeConnectivity
Maximum edge Connectivity 402.895813 between residues 162 and 170
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1233
->edgeConnectivity
  proteinGraph->nedges = 1233
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 580.370850 between residues 126 and 168
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1232
->edgeConnectivity
  proteinGraph->nedges = 1232
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 491.586121 between residues 148 and 163
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1231
->edgeConnectivity
  proteinGraph->nedges = 1231
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 656.041687 between residues 128 and 170
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1230
->edgeConnectivity
  proteinGraph->nedges = 1230
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 584.166748 between residues 205 and 207
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1229
->edgeConnectivity
  proteinGraph->nedges = 1229
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 628.718750 between residues 111 and 206
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1228
->edgeConnectivity
  proteinGraph->nedges = 1228
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 481.458313 between residues 148 and 161
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1227
->edgeConnectivity
  proteinGraph->nedges = 1227
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 627.125000 between residues 111 and 126
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1226
->edgeConnectivity
  proteinGraph->nedges = 1226
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 538.777771 between residues 128 and 205
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1225
->edgeConnectivity
  proteinGraph->nedges = 1225
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 614.500000 between residues 111 and 204
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1224
->edgeConnectivity
  proteinGraph->nedges = 1224
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 641.222168 between residues 148 and 162
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1223
->edgeConnectivity
  proteinGraph->nedges = 1223
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 1100.500000 between residues 128 and 189
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1222
->edgeConnectivity
  proteinGraph->nedges = 1222
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 792.041626 between residues 109 and 204
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1221
->edgeConnectivity
  proteinGraph->nedges = 1221
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 1430.166626 between residues 108 and 110
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1220
->edgeConnectivity
  proteinGraph->nedges = 1220
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 1160.000000 between residues 111 and 203
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1219
->edgeConnectivity
  proteinGraph->nedges = 1219
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 972.916626 between residues 109 and 203
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1218
->edgeConnectivity
  proteinGraph->nedges = 1218
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 1226.000122 between residues 106 and 203
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1217
->edgeConnectivity
  proteinGraph->nedges = 1217
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 1383.900146 between residues 108 and 203
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 10, communities in prev iteration 10 and edges 1216
->edgeConnectivity
  proteinGraph->nedges = 1216
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 1740.000000 between residues 106 and 189
->floydWarshall
  residueCount = 73
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 10 and edges 1215
->addNodeToCommunityTree
numComm = 11, numCommPrev = 10
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1215
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 <-edgeConnectivity
Maximum edge Connectivity 391.599976 between residues 41 and 49
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1214
->edgeConnectivity
  proteinGraph->nedges = 1214
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 383.871490 between residues 250 and 283
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1213
->edgeConnectivity
  proteinGraph->nedges = 1213
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 359.308350 between residues 256 and 283
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1212
->edgeConnectivity
  proteinGraph->nedges = 1212
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 358.333313 between residues 248 and 286
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1211
->edgeConnectivity
  proteinGraph->nedges = 1211
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 451.888885 between residues 247 and 287
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1210
->edgeConnectivity
  proteinGraph->nedges = 1210
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 370.722260 between residues 247 and 286
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1209
->edgeConnectivity
  proteinGraph->nedges = 1209
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 398.412933 between residues 249 and 285
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1208
->edgeConnectivity
  proteinGraph->nedges = 1208
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 347.687531 between residues 46 and 48
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1207
->edgeConnectivity
  proteinGraph->nedges = 1207
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 481.541656 between residues 41 and 47
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1206
->edgeConnectivity
  proteinGraph->nedges = 1206
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 468.333313 between residues 40 and 48
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1205
->edgeConnectivity
  proteinGraph->nedges = 1205
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 341.819427 between residues 36 and 50
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1204
->edgeConnectivity
  proteinGraph->nedges = 1204
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 389.641632 between residues 45 and 48
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1203
->edgeConnectivity
  proteinGraph->nedges = 1203
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 582.583374 between residues 49 and 60
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1202
->edgeConnectivity
  proteinGraph->nedges = 1202
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 530.869446 between residues 40 and 47
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1201
->edgeConnectivity
  proteinGraph->nedges = 1201
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 619.604309 between residues 40 and 49
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1200
->edgeConnectivity
  proteinGraph->nedges = 1200
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 614.916687 between residues 45 and 47
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1199
->edgeConnectivity
  proteinGraph->nedges = 1199
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 455.166687 between residues 49 and 59
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1198
->edgeConnectivity
  proteinGraph->nedges = 1198
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 633.027649 between residues 36 and 58
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1197
->edgeConnectivity
  proteinGraph->nedges = 1197
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 658.291626 between residues 47 and 49
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1196
->edgeConnectivity
  proteinGraph->nedges = 1196
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 488.166656 between residues 36 and 49
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1195
->edgeConnectivity
  proteinGraph->nedges = 1195
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 635.666687 between residues 48 and 72
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1194
->edgeConnectivity
  proteinGraph->nedges = 1194
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 685.500000 between residues 49 and 74
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1193
->edgeConnectivity
  proteinGraph->nedges = 1193
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 599.583252 between residues 64 and 96
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1192
->edgeConnectivity
  proteinGraph->nedges = 1192
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 578.541626 between residues 50 and 58
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1191
->edgeConnectivity
  proteinGraph->nedges = 1191
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 404.375061 between residues 39 and 72
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1190
->edgeConnectivity
  proteinGraph->nedges = 1190
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 464.666626 between residues 40 and 72
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1189
->edgeConnectivity
  proteinGraph->nedges = 1189
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 579.354126 between residues 72 and 74
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1188
->edgeConnectivity
  proteinGraph->nedges = 1188
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 467.875000 between residues 58 and 92
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1187
->edgeConnectivity
  proteinGraph->nedges = 1187
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 548.666748 between residues 19 and 94
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1186
->edgeConnectivity
  proteinGraph->nedges = 1186
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 799.916626 between residues 73 and 93
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1185
->edgeConnectivity
  proteinGraph->nedges = 1185
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 522.125000 between residues 19 and 49
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1184
->edgeConnectivity
  proteinGraph->nedges = 1184
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 589.541626 between residues 49 and 58
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1183
->edgeConnectivity
  proteinGraph->nedges = 1183
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 627.152771 between residues 7 and 96
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1182
->edgeConnectivity
  proteinGraph->nedges = 1182
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 762.833374 between residues 64 and 72
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1181
->edgeConnectivity
  proteinGraph->nedges = 1181
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 740.791687 between residues 5 and 94
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1180
->edgeConnectivity
  proteinGraph->nedges = 1180
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 561.375000 between residues 11 and 15
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1179
->edgeConnectivity
  proteinGraph->nedges = 1179
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 518.208374 between residues 11 and 17
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1178
->edgeConnectivity
  proteinGraph->nedges = 1178
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 633.250061 between residues 5 and 20
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1177
->edgeConnectivity
  proteinGraph->nedges = 1177
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 616.916626 between residues 49 and 64
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1176
->edgeConnectivity
  proteinGraph->nedges = 1176
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 873.500061 between residues 2 and 20
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 11, communities in prev iteration 11 and edges 1175
->edgeConnectivity
  proteinGraph->nedges = 1175
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 1476.000000 between residues 5 and 58
->floydWarshall
  residueCount = 59
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 11 and edges 1174
->addNodeToCommunityTree
numComm = 12, numCommPrev = 11
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1174
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <-edgeConnectivity
Maximum edge Connectivity 330.572937 between residues 251 and 259
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1173
->edgeConnectivity
  proteinGraph->nedges = 1173
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 426.029144 between residues 260 and 271
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1172
->edgeConnectivity
  proteinGraph->nedges = 1172
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 456.436676 between residues 252 and 258
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1171
->edgeConnectivity
  proteinGraph->nedges = 1171
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 316.073639 between residues 252 and 260
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1170
->edgeConnectivity
  proteinGraph->nedges = 1170
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 323.555542 between residues 256 and 259
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1169
->edgeConnectivity
  proteinGraph->nedges = 1169
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 463.541626 between residues 251 and 258
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1168
->edgeConnectivity
  proteinGraph->nedges = 1168
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 351.625000 between residues 251 and 260
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1167
->edgeConnectivity
  proteinGraph->nedges = 1167
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 299.004669 between residues 282 and 284
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1166
->edgeConnectivity
  proteinGraph->nedges = 1166
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 343.125000 between residues 283 and 285
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1165
->edgeConnectivity
  proteinGraph->nedges = 1165
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 292.999969 between residues 258 and 272
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1164
->edgeConnectivity
  proteinGraph->nedges = 1164
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 361.902802 between residues 247 and 261
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1163
->edgeConnectivity
  proteinGraph->nedges = 1163
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 389.760406 between residues 262 and 269
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1162
->edgeConnectivity
  proteinGraph->nedges = 1162
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 500.041626 between residues 260 and 270
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1161
->edgeConnectivity
  proteinGraph->nedges = 1161
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 565.027771 between residues 258 and 261
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1160
->edgeConnectivity
  proteinGraph->nedges = 1160
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 570.583313 between residues 247 and 269
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1159
->edgeConnectivity
  proteinGraph->nedges = 1159
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 534.000000 between residues 262 and 268
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1158
->edgeConnectivity
  proteinGraph->nedges = 1158
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 470.622223 between residues 259 and 283
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1157
->edgeConnectivity
  proteinGraph->nedges = 1157
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 421.699982 between residues 230 and 260
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1156
->edgeConnectivity
  proteinGraph->nedges = 1156
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 496.450073 between residues 285 and 303
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1155
->edgeConnectivity
  proteinGraph->nedges = 1155
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 455.333344 between residues 285 and 305
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1154
->edgeConnectivity
  proteinGraph->nedges = 1154
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 444.363892 between residues 284 and 303
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1153
->edgeConnectivity
  proteinGraph->nedges = 1153
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 473.583344 between residues 231 and 233
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1152
->edgeConnectivity
  proteinGraph->nedges = 1152
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 615.000000 between residues 275 and 283
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1151
->edgeConnectivity
  proteinGraph->nedges = 1151
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 616.500061 between residues 275 and 307
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1150
->edgeConnectivity
  proteinGraph->nedges = 1150
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 570.075012 between residues 302 and 304
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1149
->edgeConnectivity
  proteinGraph->nedges = 1149
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 615.250000 between residues 269 and 303
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1148
->edgeConnectivity
  proteinGraph->nedges = 1148
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 650.183411 between residues 258 and 260
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1147
->edgeConnectivity
  proteinGraph->nedges = 1147
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 662.944397 between residues 260 and 285
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1146
->edgeConnectivity
  proteinGraph->nedges = 1146
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 850.645813 between residues 247 and 260
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1145
->edgeConnectivity
  proteinGraph->nedges = 1145
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 840.000000 between residues 287 and 303
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1144
->edgeConnectivity
  proteinGraph->nedges = 1144
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 1097.750122 between residues 301 and 303
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1143
->edgeConnectivity
  proteinGraph->nedges = 1143
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 1023.000000 between residues 213 and 302
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1142
->edgeConnectivity
  proteinGraph->nedges = 1142
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 1616.000000 between residues 213 and 301
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 12, communities in prev iteration 12 and edges 1141
->edgeConnectivity
  proteinGraph->nedges = 1141
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 1650.000000 between residues 233 and 303
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 13, communities in prev iteration 12 and edges 1140
->addNodeToCommunityTree
numComm = 13, numCommPrev = 12
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1140
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 272.916687 between residues 91 and 93
->floydWarshall
  residueCount = 41
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 13, communities in prev iteration 13 and edges 1139
->edgeConnectivity
  proteinGraph->nedges = 1139
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <-edgeConnectivity
Maximum edge Connectivity 411.916656 between residues 70 and 95
->floydWarshall
  residueCount = 41
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 13, communities in prev iteration 13 and edges 1138
->edgeConnectivity
  proteinGraph->nedges = 1138
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <-edgeConnectivity
Maximum edge Connectivity 360.750000 between residues 72 and 93
->floydWarshall
  residueCount = 41
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 13, communities in prev iteration 13 and edges 1137
->edgeConnectivity
  proteinGraph->nedges = 1137
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <-edgeConnectivity
Maximum edge Connectivity 330.833313 between residues 5 and 92
->floydWarshall
  residueCount = 41
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 13, communities in prev iteration 13 and edges 1136
->edgeConnectivity
  proteinGraph->nedges = 1136
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <-edgeConnectivity
Maximum edge Connectivity 544.000000 between residues 71 and 93
->floydWarshall
  residueCount = 41
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 13, communities in prev iteration 13 and edges 1135
->edgeConnectivity
  proteinGraph->nedges = 1135
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <-edgeConnectivity
Maximum edge Connectivity 556.020874 between residues 2 and 4
->floydWarshall
  residueCount = 41
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 13, communities in prev iteration 13 and edges 1134
->edgeConnectivity
  proteinGraph->nedges = 1134
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <-edgeConnectivity
Maximum edge Connectivity 696.000000 between residues 1 and 90
->floydWarshall
  residueCount = 41
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 13 and edges 1133
->addNodeToCommunityTree
numComm = 14, numCommPrev = 13
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1133
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <-edgeConnectivity
Maximum edge Connectivity 270.166626 between residues 218 and 275
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1132
->edgeConnectivity
  proteinGraph->nedges = 1132
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 250.152786 between residues 179 and 182
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1131
->edgeConnectivity
  proteinGraph->nedges = 1131
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 238.479141 between residues 345 and 353
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1130
->edgeConnectivity
  proteinGraph->nedges = 1130
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 294.544556 between residues 352 and 404
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1129
->edgeConnectivity
  proteinGraph->nedges = 1129
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 217.666656 between residues 346 and 353
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1128
->edgeConnectivity
  proteinGraph->nedges = 1128
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 228.777786 between residues 352 and 354
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1127
->edgeConnectivity
  proteinGraph->nedges = 1127
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 244.279160 between residues 345 and 347
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1126
->edgeConnectivity
  proteinGraph->nedges = 1126
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 319.458313 between residues 343 and 345
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1125
->edgeConnectivity
  proteinGraph->nedges = 1125
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 248.000000 between residues 312 and 314
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1124
->edgeConnectivity
  proteinGraph->nedges = 1124
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 228.270844 between residues 310 and 352
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1123
->edgeConnectivity
  proteinGraph->nedges = 1123
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 304.500000 between residues 311 and 345
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1122
->edgeConnectivity
  proteinGraph->nedges = 1122
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 253.828125 between residues 313 and 345
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1121
->edgeConnectivity
  proteinGraph->nedges = 1121
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 348.708344 between residues 345 and 352
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1120
->edgeConnectivity
  proteinGraph->nedges = 1120
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 276.729156 between residues 311 and 352
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1119
->edgeConnectivity
  proteinGraph->nedges = 1119
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 376.833282 between residues 347 and 353
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1118
->edgeConnectivity
  proteinGraph->nedges = 1118
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 351.130524 between residues 347 and 354
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1117
->edgeConnectivity
  proteinGraph->nedges = 1117
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 386.229248 between residues 313 and 344
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1116
->edgeConnectivity
  proteinGraph->nedges = 1116
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 422.541656 between residues 12 and 351
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1115
->edgeConnectivity
  proteinGraph->nedges = 1115
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 647.000000 between residues 343 and 352
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 14, communities in prev iteration 14 and edges 1114
->edgeConnectivity
  proteinGraph->nedges = 1114
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 1012.000000 between residues 278 and 313
->floydWarshall
  residueCount = 45
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 14 and edges 1113
->addNodeToCommunityTree
numComm = 15, numCommPrev = 14
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1113
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <-edgeConnectivity
Maximum edge Connectivity 213.083328 between residues 116 and 210
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1112
->edgeConnectivity
  proteinGraph->nedges = 1112
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 214.972229 between residues 117 and 119
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1111
->edgeConnectivity
  proteinGraph->nedges = 1111
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 229.216660 between residues 176 and 178
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1110
->edgeConnectivity
  proteinGraph->nedges = 1110
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 226.069458 between residues 115 and 119
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1109
->edgeConnectivity
  proteinGraph->nedges = 1109
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 227.624985 between residues 117 and 177
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1108
->edgeConnectivity
  proteinGraph->nedges = 1108
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 220.833328 between residues 115 and 172
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1107
->edgeConnectivity
  proteinGraph->nedges = 1107
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 243.569443 between residues 177 and 179
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1106
->edgeConnectivity
  proteinGraph->nedges = 1106
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 326.666687 between residues 177 and 209
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1105
->edgeConnectivity
  proteinGraph->nedges = 1105
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 223.555588 between residues 115 and 125
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1104
->edgeConnectivity
  proteinGraph->nedges = 1104
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 204.027771 between residues 114 and 125
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1103
->edgeConnectivity
  proteinGraph->nedges = 1103
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 222.916672 between residues 115 and 161
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1102
->edgeConnectivity
  proteinGraph->nedges = 1102
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 277.694427 between residues 115 and 177
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1101
->edgeConnectivity
  proteinGraph->nedges = 1101
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 227.583344 between residues 178 and 182
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1100
->edgeConnectivity
  proteinGraph->nedges = 1100
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 264.083313 between residues 180 and 182
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1099
->edgeConnectivity
  proteinGraph->nedges = 1099
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 299.666656 between residues 185 and 209
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1098
->edgeConnectivity
  proteinGraph->nedges = 1098
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 519.125000 between residues 207 and 209
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1097
->edgeConnectivity
  proteinGraph->nedges = 1097
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 352.416687 between residues 115 and 207
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1096
->edgeConnectivity
  proteinGraph->nedges = 1096
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 345.916718 between residues 114 and 207
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1095
->edgeConnectivity
  proteinGraph->nedges = 1095
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 386.083313 between residues 184 and 208
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1094
->edgeConnectivity
  proteinGraph->nedges = 1094
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 523.416687 between residues 182 and 209
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1093
->edgeConnectivity
  proteinGraph->nedges = 1093
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 677.541626 between residues 183 and 207
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 15, communities in prev iteration 15 and edges 1092
->edgeConnectivity
  proteinGraph->nedges = 1092
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 1104.000000 between residues 113 and 208
->floydWarshall
  residueCount = 58
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 15 and edges 1091
->addNodeToCommunityTree
numComm = 16, numCommPrev = 15
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1091
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <-edgeConnectivity
Maximum edge Connectivity 195.250000 between residues 218 and 271
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1090
->edgeConnectivity
  proteinGraph->nedges = 1090
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 281.875000 between residues 216 and 230
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1089
->edgeConnectivity
  proteinGraph->nedges = 1089
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 248.916656 between residues 230 and 305
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1088
->edgeConnectivity
  proteinGraph->nedges = 1088
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 369.375000 between residues 218 and 222
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1087
->edgeConnectivity
  proteinGraph->nedges = 1087
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 429.000000 between residues 229 and 231
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1086
->edgeConnectivity
  proteinGraph->nedges = 1086
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 427.000000 between residues 261 and 269
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1085
->edgeConnectivity
  proteinGraph->nedges = 1085
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 339.000000 between residues 216 and 231
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1084
->edgeConnectivity
  proteinGraph->nedges = 1084
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 424.000000 between residues 216 and 269
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 16, communities in prev iteration 16 and edges 1083
->edgeConnectivity
  proteinGraph->nedges = 1083
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 540.000000 between residues 213 and 231
->floydWarshall
  residueCount = 33
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 16 and edges 1082
->addNodeToCommunityTree
numComm = 17, numCommPrev = 16
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1082
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <-edgeConnectivity
Maximum edge Connectivity 168.944458 between residues 161 and 187
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1081
->edgeConnectivity
  proteinGraph->nedges = 1081
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 199.500000 between residues 151 and 187
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1080
->edgeConnectivity
  proteinGraph->nedges = 1080
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 215.999985 between residues 152 and 154
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1079
->edgeConnectivity
  proteinGraph->nedges = 1079
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 239.833344 between residues 185 and 187
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1078
->edgeConnectivity
  proteinGraph->nedges = 1078
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 178.000015 between residues 124 and 126
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1077
->edgeConnectivity
  proteinGraph->nedges = 1077
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 196.250000 between residues 177 and 185
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1076
->edgeConnectivity
  proteinGraph->nedges = 1076
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 227.083328 between residues 160 and 185
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1075
->edgeConnectivity
  proteinGraph->nedges = 1075
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 192.125000 between residues 124 and 170
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1074
->edgeConnectivity
  proteinGraph->nedges = 1074
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 235.000000 between residues 123 and 170
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1073
->edgeConnectivity
  proteinGraph->nedges = 1073
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 259.416687 between residues 161 and 170
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1072
->edgeConnectivity
  proteinGraph->nedges = 1072
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 235.750015 between residues 187 and 207
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1071
->edgeConnectivity
  proteinGraph->nedges = 1071
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 257.333344 between residues 161 and 185
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1070
->edgeConnectivity
  proteinGraph->nedges = 1070
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 312.833313 between residues 151 and 186
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1069
->edgeConnectivity
  proteinGraph->nedges = 1069
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 296.958313 between residues 161 and 207
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1068
->edgeConnectivity
  proteinGraph->nedges = 1068
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 336.000031 between residues 156 and 182
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1067
->edgeConnectivity
  proteinGraph->nedges = 1067
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 326.250000 between residues 125 and 207
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1066
->edgeConnectivity
  proteinGraph->nedges = 1066
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 380.833405 between residues 155 and 182
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1065
->edgeConnectivity
  proteinGraph->nedges = 1065
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 382.708374 between residues 151 and 185
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1064
->edgeConnectivity
  proteinGraph->nedges = 1064
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 526.092712 between residues 156 and 185
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1063
->edgeConnectivity
  proteinGraph->nedges = 1063
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 816.000000 between residues 155 and 185
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1062
->edgeConnectivity
  proteinGraph->nedges = 1062
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 988.000000 between residues 153 and 155
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 17, communities in prev iteration 17 and edges 1061
->edgeConnectivity
  proteinGraph->nedges = 1061
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 1050.000000 between residues 151 and 153
->floydWarshall
  residueCount = 46
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 17 and edges 1060
->addNodeToCommunityTree
numComm = 18, numCommPrev = 17
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1060
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 <-edgeConnectivity
Maximum edge Connectivity 165.625000 between residues 390 and 393
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1059
->edgeConnectivity
  proteinGraph->nedges = 1059
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 144.333328 between residues 395 and 419
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1058
->edgeConnectivity
  proteinGraph->nedges = 1058
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 165.083328 between residues 328 and 330
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1057
->edgeConnectivity
  proteinGraph->nedges = 1057
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 172.000000 between residues 387 and 389
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1056
->edgeConnectivity
  proteinGraph->nedges = 1056
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 195.833344 between residues 371 and 388
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1055
->edgeConnectivity
  proteinGraph->nedges = 1055
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 203.875000 between residues 386 and 388
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1054
->edgeConnectivity
  proteinGraph->nedges = 1054
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 180.000015 between residues 327 and 330
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1053
->edgeConnectivity
  proteinGraph->nedges = 1053
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 183.525009 between residues 366 and 368
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1052
->edgeConnectivity
  proteinGraph->nedges = 1052
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 164.902771 between residues 329 and 331
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1051
->edgeConnectivity
  proteinGraph->nedges = 1051
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 209.262497 between residues 326 and 330
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1050
->edgeConnectivity
  proteinGraph->nedges = 1050
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 270.250000 between residues 326 and 336
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1049
->edgeConnectivity
  proteinGraph->nedges = 1049
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 215.333344 between residues 367 and 393
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1048
->edgeConnectivity
  proteinGraph->nedges = 1048
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 249.000015 between residues 326 and 383
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1047
->edgeConnectivity
  proteinGraph->nedges = 1047
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 232.583344 between residues 325 and 336
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1046
->edgeConnectivity
  proteinGraph->nedges = 1046
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 432.333313 between residues 372 and 388
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1045
->edgeConnectivity
  proteinGraph->nedges = 1045
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 414.388885 between residues 364 and 393
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1044
->edgeConnectivity
  proteinGraph->nedges = 1044
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 251.166672 between residues 396 and 418
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1043
->edgeConnectivity
  proteinGraph->nedges = 1043
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 291.500000 between residues 366 and 393
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1042
->edgeConnectivity
  proteinGraph->nedges = 1042
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 354.083344 between residues 363 and 365
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1041
->edgeConnectivity
  proteinGraph->nedges = 1041
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 330.000000 between residues 364 and 395
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1040
->edgeConnectivity
  proteinGraph->nedges = 1040
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 398.750000 between residues 326 and 372
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1039
->edgeConnectivity
  proteinGraph->nedges = 1039
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 372.000000 between residues 336 and 418
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1038
->edgeConnectivity
  proteinGraph->nedges = 1038
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 434.277802 between residues 388 and 396
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1037
->edgeConnectivity
  proteinGraph->nedges = 1037
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 566.500000 between residues 363 and 396
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 18, communities in prev iteration 18 and edges 1036
->edgeConnectivity
  proteinGraph->nedges = 1036
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 874.000000 between residues 372 and 418
->floydWarshall
  residueCount = 42
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 18 and edges 1035
->addNodeToCommunityTree
numComm = 19, numCommPrev = 18
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1035
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 <-edgeConnectivity
Maximum edge Connectivity 143.083344 between residues 317 and 340
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1034
->edgeConnectivity
  proteinGraph->nedges = 1034
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 144.000000 between residues 316 and 412
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1033
->edgeConnectivity
  proteinGraph->nedges = 1033
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 159.383331 between residues 357 and 401
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1032
->edgeConnectivity
  proteinGraph->nedges = 1032
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 184.916641 between residues 318 and 322
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1031
->edgeConnectivity
  proteinGraph->nedges = 1031
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 153.083328 between residues 339 and 379
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1030
->edgeConnectivity
  proteinGraph->nedges = 1030
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 165.000000 between residues 322 and 340
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1029
->edgeConnectivity
  proteinGraph->nedges = 1029
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 226.000000 between residues 338 and 340
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1028
->edgeConnectivity
  proteinGraph->nedges = 1028
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 280.000000 between residues 341 and 357
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 19, communities in prev iteration 19 and edges 1027
->edgeConnectivity
  proteinGraph->nedges = 1027
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 350.000000 between residues 340 and 357
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 19 and edges 1026
->addNodeToCommunityTree
numComm = 20, numCommPrev = 19
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1026
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 136.625000 between residues 309 and 346
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1025
->edgeConnectivity
  proteinGraph->nedges = 1025
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 130.250000 between residues 143 and 193
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1024
->edgeConnectivity
  proteinGraph->nedges = 1024
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 129.333328 between residues 33 and 54
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1023
->edgeConnectivity
  proteinGraph->nedges = 1023
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 124.116669 between residues 32 and 34
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1022
->edgeConnectivity
  proteinGraph->nedges = 1022
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 157.366684 between residues 34 and 78
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1021
->edgeConnectivity
  proteinGraph->nedges = 1021
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 207.500000 between residues 31 and 54
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1020
->edgeConnectivity
  proteinGraph->nedges = 1020
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 296.000000 between residues 33 and 53
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1019
->edgeConnectivity
  proteinGraph->nedges = 1019
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 310.750000 between residues 32 and 53
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1018
->edgeConnectivity
  proteinGraph->nedges = 1018
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 275.166687 between residues 24 and 34
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1017
->edgeConnectivity
  proteinGraph->nedges = 1017
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 368.583313 between residues 27 and 30
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1016
->edgeConnectivity
  proteinGraph->nedges = 1016
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 327.500000 between residues 27 and 34
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 20, communities in prev iteration 20 and edges 1015
->edgeConnectivity
  proteinGraph->nedges = 1015
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 400.000000 between residues 23 and 25
->floydWarshall
  residueCount = 30
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 20 and edges 1014
->addNodeToCommunityTree
numComm = 21, numCommPrev = 20
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 1014
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <-edgeConnectivity
Maximum edge Connectivity 121.416672 between residues 358 and 374
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1013
->edgeConnectivity
  proteinGraph->nedges = 1013
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 154.000000 between residues 359 and 400
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1012
->edgeConnectivity
  proteinGraph->nedges = 1012
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 116.750000 between residues 37 and 75
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1011
->edgeConnectivity
  proteinGraph->nedges = 1011
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 116.506943 between residues 143 and 195
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1010
->edgeConnectivity
  proteinGraph->nedges = 1010
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 140.124985 between residues 141 and 194
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1009
->edgeConnectivity
  proteinGraph->nedges = 1009
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 122.750000 between residues 103 and 132
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1008
->edgeConnectivity
  proteinGraph->nedges = 1008
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 136.250000 between residues 131 and 133
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1007
->edgeConnectivity
  proteinGraph->nedges = 1007
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 150.708344 between residues 140 and 142
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1006
->edgeConnectivity
  proteinGraph->nedges = 1006
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 159.375000 between residues 100 and 193
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1005
->edgeConnectivity
  proteinGraph->nedges = 1005
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 174.000000 between residues 141 and 143
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1004
->edgeConnectivity
  proteinGraph->nedges = 1004
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 157.416656 between residues 132 and 193
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1003
->edgeConnectivity
  proteinGraph->nedges = 1003
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 184.638885 between residues 136 and 143
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1002
->edgeConnectivity
  proteinGraph->nedges = 1002
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 205.500000 between residues 132 and 144
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1001
->edgeConnectivity
  proteinGraph->nedges = 1001
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 297.500000 between residues 100 and 199
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 1000
->edgeConnectivity
  proteinGraph->nedges = 1000
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 320.250000 between residues 100 and 194
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 999
->edgeConnectivity
  proteinGraph->nedges = 999
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 353.750000 between residues 102 and 193
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 998
->edgeConnectivity
  proteinGraph->nedges = 998
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 652.000000 between residues 102 and 199
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 21, communities in prev iteration 21 and edges 997
->edgeConnectivity
  proteinGraph->nedges = 997
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 750.000000 between residues 140 and 223
->floydWarshall
  residueCount = 40
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 22, communities in prev iteration 21 and edges 996
->addNodeToCommunityTree
numComm = 22, numCommPrev = 21
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 996
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <-edgeConnectivity
Maximum edge Connectivity 110.250000 between residues 324 and 417
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 22, communities in prev iteration 22 and edges 995
->edgeConnectivity
  proteinGraph->nedges = 995
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 106.250000 between residues 309 and 350
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 22, communities in prev iteration 22 and edges 994
->edgeConnectivity
  proteinGraph->nedges = 994
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 113.750000 between residues 309 and 352
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 22, communities in prev iteration 22 and edges 993
->edgeConnectivity
  proteinGraph->nedges = 993
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 136.000000 between residues 277 and 346
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 22, communities in prev iteration 22 and edges 992
->edgeConnectivity
  proteinGraph->nedges = 992
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 240.000000 between residues 344 and 346
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 22 and edges 991
->addNodeToCommunityTree
numComm = 23, numCommPrev = 22
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 991
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 98.916656 between residues 38 and 74
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 990
->edgeConnectivity
  proteinGraph->nedges = 990
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 100.666672 between residues 71 and 73
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 989
->edgeConnectivity
  proteinGraph->nedges = 989
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 122.000000 between residues 74 and 94
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 988
->edgeConnectivity
  proteinGraph->nedges = 988
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 139.416656 between residues 74 and 92
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 987
->edgeConnectivity
  proteinGraph->nedges = 987
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 127.333328 between residues 45 and 72
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 986
->edgeConnectivity
  proteinGraph->nedges = 986
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 187.000000 between residues 73 and 92
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 985
->edgeConnectivity
  proteinGraph->nedges = 985
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 188.750000 between residues 36 and 76
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 984
->edgeConnectivity
  proteinGraph->nedges = 984
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 184.000000 between residues 92 and 94
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 23, communities in prev iteration 23 and edges 983
->edgeConnectivity
  proteinGraph->nedges = 983
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 276.000000 between residues 72 and 92
->floydWarshall
  residueCount = 29
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 23 and edges 982
->addNodeToCommunityTree
numComm = 24, numCommPrev = 23
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 982
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <-edgeConnectivity
Maximum edge Connectivity 95.166679 between residues 369 and 371
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 981
->edgeConnectivity
  proteinGraph->nedges = 981
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 94.430550 between residues 245 and 289
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 980
->edgeConnectivity
  proteinGraph->nedges = 980
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 126.750023 between residues 244 and 264
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 979
->edgeConnectivity
  proteinGraph->nedges = 979
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 131.000000 between residues 244 and 265
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 978
->edgeConnectivity
  proteinGraph->nedges = 978
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 130.916672 between residues 243 and 290
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 977
->edgeConnectivity
  proteinGraph->nedges = 977
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 142.000015 between residues 242 and 265
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 976
->edgeConnectivity
  proteinGraph->nedges = 976
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 193.750000 between residues 243 and 245
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 975
->edgeConnectivity
  proteinGraph->nedges = 975
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 260.250000 between residues 243 and 264
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 974
->edgeConnectivity
  proteinGraph->nedges = 974
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 211.666672 between residues 235 and 245
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 24, communities in prev iteration 24 and edges 973
->edgeConnectivity
  proteinGraph->nedges = 973
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 320.000000 between residues 234 and 236
->floydWarshall
  residueCount = 28
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 24 and edges 972
->addNodeToCommunityTree
numComm = 25, numCommPrev = 24
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 972
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <-edgeConnectivity
Maximum edge Connectivity 92.833328 between residues 323 and 337
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 971
->edgeConnectivity
  proteinGraph->nedges = 971
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 94.000000 between residues 322 and 415
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 970
->edgeConnectivity
  proteinGraph->nedges = 970
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 105.250000 between residues 319 and 321
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 969
->edgeConnectivity
  proteinGraph->nedges = 969
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 112.000000 between residues 320 and 322
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 968
->edgeConnectivity
  proteinGraph->nedges = 968
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 112.249992 between residues 337 and 416
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 967
->edgeConnectivity
  proteinGraph->nedges = 967
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 120.500000 between residues 359 and 374
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 966
->edgeConnectivity
  proteinGraph->nedges = 966
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 124.000000 between residues 359 and 373
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 965
->edgeConnectivity
  proteinGraph->nedges = 965
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 148.000000 between residues 339 and 378
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 964
->edgeConnectivity
  proteinGraph->nedges = 964
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 162.000000 between residues 339 and 357
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 963
->edgeConnectivity
  proteinGraph->nedges = 963
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 216.750000 between residues 322 and 414
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 962
->edgeConnectivity
  proteinGraph->nedges = 962
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 150.000000 between residues 319 and 322
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 961
->edgeConnectivity
  proteinGraph->nedges = 961
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 163.000000 between residues 381 and 400
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 960
->edgeConnectivity
  proteinGraph->nedges = 960
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 176.000000 between residues 317 and 357
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 959
->edgeConnectivity
  proteinGraph->nedges = 959
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 202.000000 between residues 335 and 381
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 958
->edgeConnectivity
  proteinGraph->nedges = 958
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 277.000000 between residues 337 and 381
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 957
->edgeConnectivity
  proteinGraph->nedges = 957
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 229.000000 between residues 322 and 339
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 956
->edgeConnectivity
  proteinGraph->nedges = 956
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 344.000000 between residues 317 and 322
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 25, communities in prev iteration 25 and edges 955
->edgeConnectivity
  proteinGraph->nedges = 955
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 572.000000 between residues 373 and 381
->floydWarshall
  residueCount = 35
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 25 and edges 954
->addNodeToCommunityTree
numComm = 26, numCommPrev = 25
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 954
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <-edgeConnectivity
Maximum edge Connectivity 87.833336 between residues 285 and 302
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 953
->edgeConnectivity
  proteinGraph->nedges = 953
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 86.250000 between residues 36 and 42
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 952
->edgeConnectivity
  proteinGraph->nedges = 952
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 106.750008 between residues 36 and 41
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 951
->edgeConnectivity
  proteinGraph->nedges = 951
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 83.222221 between residues 365 and 368
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 950
->edgeConnectivity
  proteinGraph->nedges = 950
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 148.583328 between residues 365 and 367
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 949
->edgeConnectivity
  proteinGraph->nedges = 949
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 152.000000 between residues 362 and 371
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 948
->edgeConnectivity
  proteinGraph->nedges = 948
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 104.343750 between residues 362 and 368
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 947
->edgeConnectivity
  proteinGraph->nedges = 947
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 159.750000 between residues 362 and 370
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 946
->edgeConnectivity
  proteinGraph->nedges = 946
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 149.000000 between residues 362 and 372
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 945
->edgeConnectivity
  proteinGraph->nedges = 945
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 152.666656 between residues 367 and 396
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 944
->edgeConnectivity
  proteinGraph->nedges = 944
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 174.000000 between residues 371 and 396
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 26, communities in prev iteration 26 and edges 943
->edgeConnectivity
  proteinGraph->nedges = 943
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 204.000000 between residues 372 and 396
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 26 and edges 942
->addNodeToCommunityTree
numComm = 27, numCommPrev = 26
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 942
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 80.916672 between residues 121 and 174
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 941
->edgeConnectivity
  proteinGraph->nedges = 941
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 102.666679 between residues 121 and 173
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 940
->edgeConnectivity
  proteinGraph->nedges = 940
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 96.500000 between residues 172 and 174
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 939
->edgeConnectivity
  proteinGraph->nedges = 939
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 99.625000 between residues 160 and 172
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 938
->edgeConnectivity
  proteinGraph->nedges = 938
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 151.583328 between residues 161 and 172
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 937
->edgeConnectivity
  proteinGraph->nedges = 937
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 134.708344 between residues 121 and 175
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 936
->edgeConnectivity
  proteinGraph->nedges = 936
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 102.000008 between residues 160 and 173
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 935
->edgeConnectivity
  proteinGraph->nedges = 935
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 128.583344 between residues 116 and 177
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 934
->edgeConnectivity
  proteinGraph->nedges = 934
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 187.000000 between residues 161 and 171
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 933
->edgeConnectivity
  proteinGraph->nedges = 933
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 187.000000 between residues 171 and 173
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 27, communities in prev iteration 27 and edges 932
->edgeConnectivity
  proteinGraph->nedges = 932
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 308.000000 between residues 160 and 171
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 27 and edges 931
->addNodeToCommunityTree
numComm = 28, numCommPrev = 27
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 931
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 80.624992 between residues 247 and 253
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 930
->edgeConnectivity
  proteinGraph->nedges = 930
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 128.416672 between residues 247 and 252
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 929
->edgeConnectivity
  proteinGraph->nedges = 929
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 79.583336 between residues 39 and 74
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 928
->edgeConnectivity
  proteinGraph->nedges = 928
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 101.500000 between residues 37 and 74
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 927
->edgeConnectivity
  proteinGraph->nedges = 927
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 91.750000 between residues 37 and 77
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 926
->edgeConnectivity
  proteinGraph->nedges = 926
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 105.000000 between residues 41 and 74
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 925
->edgeConnectivity
  proteinGraph->nedges = 925
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 126.166664 between residues 40 and 74
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 924
->edgeConnectivity
  proteinGraph->nedges = 924
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 234.000000 between residues 38 and 73
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 28, communities in prev iteration 28 and edges 923
->edgeConnectivity
  proteinGraph->nedges = 923
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 260.000000 between residues 37 and 73
->floydWarshall
  residueCount = 23
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 29, communities in prev iteration 28 and edges 922
->addNodeToCommunityTree
numComm = 29, numCommPrev = 28
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 922
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <-edgeConnectivity
Maximum edge Connectivity 78.833328 between residues 248 and 288
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 29, communities in prev iteration 29 and edges 921
->edgeConnectivity
  proteinGraph->nedges = 921
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 100.000000 between residues 247 and 285
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 29, communities in prev iteration 29 and edges 920
->edgeConnectivity
  proteinGraph->nedges = 920
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 172.666656 between residues 285 and 287
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 29, communities in prev iteration 29 and edges 919
->edgeConnectivity
  proteinGraph->nedges = 919
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 166.041672 between residues 250 and 284
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 29, communities in prev iteration 29 and edges 918
->edgeConnectivity
  proteinGraph->nedges = 918
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 179.000000 between residues 249 and 284
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 29, communities in prev iteration 29 and edges 917
->edgeConnectivity
  proteinGraph->nedges = 917
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 312.000000 between residues 285 and 301
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 30, communities in prev iteration 29 and edges 916
->addNodeToCommunityTree
numComm = 30, numCommPrev = 29
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 916
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 55.000000 between residues 321 and 415
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 30, communities in prev iteration 30 and edges 915
->edgeConnectivity
  proteinGraph->nedges = 915
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 63.000000 between residues 415 and 417
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 30, communities in prev iteration 30 and edges 914
->edgeConnectivity
  proteinGraph->nedges = 914
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 114.000000 between residues 397 and 417
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 31, communities in prev iteration 30 and edges 913
->addNodeToCommunityTree
numComm = 31, numCommPrev = 30
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 913
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 54.000000 between residues 287 and 300
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 31, communities in prev iteration 31 and edges 912
->edgeConnectivity
  proteinGraph->nedges = 912
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 69.000000 between residues 286 and 301
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 31, communities in prev iteration 31 and edges 911
->edgeConnectivity
  proteinGraph->nedges = 911
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 80.000000 between residues 233 and 262
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 32, communities in prev iteration 31 and edges 910
->addNodeToCommunityTree
numComm = 32, numCommPrev = 31
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 910
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 53.583332 between residues 27 and 32
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 32, communities in prev iteration 32 and edges 909
->edgeConnectivity
  proteinGraph->nedges = 909
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 63.611111 between residues 26 and 30
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 32, communities in prev iteration 32 and edges 908
->edgeConnectivity
  proteinGraph->nedges = 908
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 57.250000 between residues 28 and 30
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 32, communities in prev iteration 32 and edges 907
->edgeConnectivity
  proteinGraph->nedges = 907
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 63.125000 between residues 32 and 80
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 32, communities in prev iteration 32 and edges 906
->edgeConnectivity
  proteinGraph->nedges = 906
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 57.500000 between residues 24 and 27
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 32, communities in prev iteration 32 and edges 905
->edgeConnectivity
  proteinGraph->nedges = 905
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 100.000000 between residues 26 and 29
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 32, communities in prev iteration 32 and edges 904
->edgeConnectivity
  proteinGraph->nedges = 904
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 128.000000 between residues 26 and 28
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 32 and edges 903
->addNodeToCommunityTree
numComm = 33, numCommPrev = 32
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 903
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 53.416668 between residues 193 and 198
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 902
->edgeConnectivity
  proteinGraph->nedges = 902
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 59.194443 between residues 192 and 200
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 901
->edgeConnectivity
  proteinGraph->nedges = 901
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 54.583336 between residues 145 and 191
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 900
->edgeConnectivity
  proteinGraph->nedges = 900
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 62.833332 between residues 190 and 201
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 899
->edgeConnectivity
  proteinGraph->nedges = 899
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 93.500000 between residues 190 and 200
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 898
->edgeConnectivity
  proteinGraph->nedges = 898
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 117.138893 between residues 145 and 196
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 897
->edgeConnectivity
  proteinGraph->nedges = 897
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 131.583344 between residues 145 and 192
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 896
->edgeConnectivity
  proteinGraph->nedges = 896
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 153.000000 between residues 193 and 195
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 895
->edgeConnectivity
  proteinGraph->nedges = 895
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 125.666679 between residues 192 and 195
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 894
->edgeConnectivity
  proteinGraph->nedges = 894
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 104.000000 between residues 140 and 193
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 893
->edgeConnectivity
  proteinGraph->nedges = 893
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 105.083328 between residues 147 and 165
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 892
->edgeConnectivity
  proteinGraph->nedges = 892
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 179.750000 between residues 143 and 145
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 891
->edgeConnectivity
  proteinGraph->nedges = 891
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 219.000000 between residues 140 and 194
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 890
->edgeConnectivity
  proteinGraph->nedges = 890
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 205.000000 between residues 140 and 143
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 889
->edgeConnectivity
  proteinGraph->nedges = 889
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 216.000000 between residues 145 and 165
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 33, communities in prev iteration 33 and edges 888
->edgeConnectivity
  proteinGraph->nedges = 888
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 252.000000 between residues 165 and 195
->floydWarshall
  residueCount = 25
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 34, communities in prev iteration 33 and edges 887
->addNodeToCommunityTree
numComm = 34, numCommPrev = 33
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 887
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <-edgeConnectivity
Maximum edge Connectivity 52.500000 between residues 390 and 422
->floydWarshall
  residueCount = 19
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 34, communities in prev iteration 34 and edges 886
->edgeConnectivity
  proteinGraph->nedges = 886
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <-edgeConnectivity
Maximum edge Connectivity 96.000000 between residues 327 and 421
->floydWarshall
  residueCount = 19
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 34 and edges 885
->addNodeToCommunityTree
numComm = 35, numCommPrev = 34
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 885
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <-edgeConnectivity
Maximum edge Connectivity 51.281250 between residues 238 and 241
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 884
->edgeConnectivity
  proteinGraph->nedges = 884
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 77.916672 between residues 238 and 242
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 883
->edgeConnectivity
  proteinGraph->nedges = 883
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 49.361111 between residues 241 and 291
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 882
->edgeConnectivity
  proteinGraph->nedges = 882
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 71.083328 between residues 241 and 292
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 881
->edgeConnectivity
  proteinGraph->nedges = 881
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 75.833336 between residues 241 and 293
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 880
->edgeConnectivity
  proteinGraph->nedges = 880
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 85.361115 between residues 237 and 297
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 879
->edgeConnectivity
  proteinGraph->nedges = 879
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 111.972221 between residues 243 and 289
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 878
->edgeConnectivity
  proteinGraph->nedges = 878
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 91.000000 between residues 235 and 297
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 877
->edgeConnectivity
  proteinGraph->nedges = 877
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 93.000000 between residues 235 and 289
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 876
->edgeConnectivity
  proteinGraph->nedges = 876
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 81.666664 between residues 243 and 297
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 875
->edgeConnectivity
  proteinGraph->nedges = 875
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 112.166672 between residues 296 and 298
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 874
->edgeConnectivity
  proteinGraph->nedges = 874
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 129.111099 between residues 241 and 297
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 35, communities in prev iteration 35 and edges 873
->edgeConnectivity
  proteinGraph->nedges = 873
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 198.000000 between residues 289 and 298
->floydWarshall
  residueCount = 20
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 36, communities in prev iteration 35 and edges 872
->addNodeToCommunityTree
numComm = 36, numCommPrev = 35
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 872
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <-edgeConnectivity
Maximum edge Connectivity 47.000000 between residues 75 and 90
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 36, communities in prev iteration 36 and edges 871
->edgeConnectivity
  proteinGraph->nedges = 871
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 47.000000 between residues 104 and 192
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 36, communities in prev iteration 36 and edges 870
->edgeConnectivity
  proteinGraph->nedges = 870
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 53.444443 between residues 198 and 200
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 36, communities in prev iteration 36 and edges 869
->edgeConnectivity
  proteinGraph->nedges = 869
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 64.250000 between residues 193 and 196
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 36, communities in prev iteration 36 and edges 868
->edgeConnectivity
  proteinGraph->nedges = 868
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 120.000000 between residues 144 and 192
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 36, communities in prev iteration 36 and edges 867
->edgeConnectivity
  proteinGraph->nedges = 867
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 144.000000 between residues 144 and 165
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 37, communities in prev iteration 36 and edges 866
->addNodeToCommunityTree
numComm = 37, numCommPrev = 36
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 866
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 46.000000 between residues 217 and 306
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 37, communities in prev iteration 37 and edges 865
->edgeConnectivity
  proteinGraph->nedges = 865
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 65.000000 between residues 213 and 303
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 37, communities in prev iteration 37 and edges 864
->edgeConnectivity
  proteinGraph->nedges = 864
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 72.000000 between residues 213 and 216
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 37 and edges 863
->addNodeToCommunityTree
numComm = 38, numCommPrev = 37
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 863
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 45.250000 between residues 227 and 271
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 862
->edgeConnectivity
  proteinGraph->nedges = 862
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 45.166668 between residues 259 and 272
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 861
->edgeConnectivity
  proteinGraph->nedges = 861
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 48.000000 between residues 226 and 272
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 860
->edgeConnectivity
  proteinGraph->nedges = 860
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 58.000000 between residues 228 and 270
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 859
->edgeConnectivity
  proteinGraph->nedges = 859
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 44.458332 between residues 332 and 385
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 858
->edgeConnectivity
  proteinGraph->nedges = 858
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 60.500000 between residues 383 and 385
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 857
->edgeConnectivity
  proteinGraph->nedges = 857
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 45.000000 between residues 371 and 383
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 856
->edgeConnectivity
  proteinGraph->nedges = 856
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 87.000000 between residues 332 and 384
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 855
->edgeConnectivity
  proteinGraph->nedges = 855
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 80.166664 between residues 332 and 386
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 854
->edgeConnectivity
  proteinGraph->nedges = 854
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 90.000000 between residues 334 and 382
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 853
->edgeConnectivity
  proteinGraph->nedges = 853
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 122.000000 between residues 333 and 382
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 852
->edgeConnectivity
  proteinGraph->nedges = 852
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 121.000000 between residues 334 and 336
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 38, communities in prev iteration 38 and edges 851
->edgeConnectivity
  proteinGraph->nedges = 851
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 132.000000 between residues 336 and 383
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 38 and edges 850
->addNodeToCommunityTree
numComm = 39, numCommPrev = 38
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 850
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 44.000000 between residues 76 and 89
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 849
->edgeConnectivity
  proteinGraph->nedges = 849
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 44.000000 between residues 204 and 206
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 848
->edgeConnectivity
  proteinGraph->nedges = 848
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 50.500000 between residues 186 and 206
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 847
->edgeConnectivity
  proteinGraph->nedges = 847
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 59.000000 between residues 152 and 185
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 846
->edgeConnectivity
  proteinGraph->nedges = 846
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 94.000000 between residues 184 and 186
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 845
->edgeConnectivity
  proteinGraph->nedges = 845
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 68.000000 between residues 152 and 184
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 844
->edgeConnectivity
  proteinGraph->nedges = 844
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 102.000000 between residues 185 and 205
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 843
->edgeConnectivity
  proteinGraph->nedges = 843
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 106.000000 between residues 110 and 204
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 842
->edgeConnectivity
  proteinGraph->nedges = 842
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 160.000000 between residues 126 and 205
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 841
->edgeConnectivity
  proteinGraph->nedges = 841
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 174.166656 between residues 126 and 170
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 39, communities in prev iteration 39 and edges 840
->edgeConnectivity
  proteinGraph->nedges = 840
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 220.000000 between residues 170 and 207
->floydWarshall
  residueCount = 21
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 39 and edges 839
->addNodeToCommunityTree
numComm = 40, numCommPrev = 39
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 839
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <-edgeConnectivity
Maximum edge Connectivity 44.000000 between residues 404 and 410
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 838
->edgeConnectivity
  proteinGraph->nedges = 838
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 66.916672 between residues 403 and 410
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 837
->edgeConnectivity
  proteinGraph->nedges = 837
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 50.750000 between residues 314 and 404
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 836
->edgeConnectivity
  proteinGraph->nedges = 836
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 53.197918 between residues 343 and 353
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 835
->edgeConnectivity
  proteinGraph->nedges = 835
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 65.041664 between residues 314 and 411
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 834
->edgeConnectivity
  proteinGraph->nedges = 834
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 44.333332 between residues 343 and 404
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 833
->edgeConnectivity
  proteinGraph->nedges = 833
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 48.208332 between residues 311 and 405
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 832
->edgeConnectivity
  proteinGraph->nedges = 832
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 61.500000 between residues 311 and 404
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 831
->edgeConnectivity
  proteinGraph->nedges = 831
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 61.333336 between residues 315 and 404
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 830
->edgeConnectivity
  proteinGraph->nedges = 830
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 59.750000 between residues 343 and 355
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 829
->edgeConnectivity
  proteinGraph->nedges = 829
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 94.000000 between residues 313 and 404
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 828
->edgeConnectivity
  proteinGraph->nedges = 828
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 96.000000 between residues 313 and 315
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 827
->edgeConnectivity
  proteinGraph->nedges = 827
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 120.000000 between residues 315 and 410
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 40, communities in prev iteration 40 and edges 826
->edgeConnectivity
  proteinGraph->nedges = 826
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 192.000000 between residues 402 and 410
->floydWarshall
  residueCount = 22
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 40 and edges 825
->addNodeToCommunityTree
numComm = 41, numCommPrev = 40
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 825
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <-edgeConnectivity
Maximum edge Connectivity 42.240742 between residues 79 and 84
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 41 and edges 824
->edgeConnectivity
  proteinGraph->nedges = 824
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 42.000000 between residues 128 and 168
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 41 and edges 823
->edgeConnectivity
  proteinGraph->nedges = 823
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 51.000000 between residues 127 and 169
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 41 and edges 822
->edgeConnectivity
  proteinGraph->nedges = 822
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 60.250000 between residues 127 and 168
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 41 and edges 821
->edgeConnectivity
  proteinGraph->nedges = 821
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 54.000000 between residues 128 and 167
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 41 and edges 820
->edgeConnectivity
  proteinGraph->nedges = 820
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 50.000000 between residues 127 and 167
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 41 and edges 819
->edgeConnectivity
  proteinGraph->nedges = 819
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 80.000000 between residues 146 and 166
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 41, communities in prev iteration 41 and edges 818
->edgeConnectivity
  proteinGraph->nedges = 818
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 112.000000 between residues 146 and 163
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 41 and edges 817
->addNodeToCommunityTree
numComm = 42, numCommPrev = 41
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 817
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 41.250000 between residues 15 and 61
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 42 and edges 816
->edgeConnectivity
  proteinGraph->nedges = 816
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 60.500000 between residues 15 and 17
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 42 and edges 815
->edgeConnectivity
  proteinGraph->nedges = 815
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 52.166664 between residues 16 and 60
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 42 and edges 814
->edgeConnectivity
  proteinGraph->nedges = 814
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 44.500000 between residues 19 and 60
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 42 and edges 813
->edgeConnectivity
  proteinGraph->nedges = 813
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 44.500000 between residues 17 and 60
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 42 and edges 812
->edgeConnectivity
  proteinGraph->nedges = 812
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 65.000000 between residues 48 and 62
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 42 and edges 811
->edgeConnectivity
  proteinGraph->nedges = 811
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 119.166664 between residues 48 and 60
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 42, communities in prev iteration 42 and edges 810
->edgeConnectivity
  proteinGraph->nedges = 810
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 130.000000 between residues 48 and 64
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 43, communities in prev iteration 42 and edges 809
->addNodeToCommunityTree
numComm = 43, numCommPrev = 42
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 809
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 41.000000 between residues 225 and 228
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 43, communities in prev iteration 43 and edges 808
->edgeConnectivity
  proteinGraph->nedges = 808
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 64.000000 between residues 230 and 270
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 43, communities in prev iteration 43 and edges 807
->edgeConnectivity
  proteinGraph->nedges = 807
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 92.000000 between residues 259 and 271
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 43, communities in prev iteration 43 and edges 806
->edgeConnectivity
  proteinGraph->nedges = 806
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 106.194443 between residues 259 and 273
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 43, communities in prev iteration 43 and edges 805
->edgeConnectivity
  proteinGraph->nedges = 805
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 78.666672 between residues 229 and 269
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 43, communities in prev iteration 43 and edges 804
->edgeConnectivity
  proteinGraph->nedges = 804
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 101.000000 between residues 259 and 275
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 43, communities in prev iteration 43 and edges 803
->edgeConnectivity
  proteinGraph->nedges = 803
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 162.000000 between residues 231 and 269
->floydWarshall
  residueCount = 18
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 44, communities in prev iteration 43 and edges 802
->addNodeToCommunityTree
numComm = 44, numCommPrev = 43
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 802
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <-edgeConnectivity
Maximum edge Connectivity 40.000000 between residues 3 and 5
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 45, communities in prev iteration 44 and edges 801
->addNodeToCommunityTree
numComm = 45, numCommPrev = 44
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 801
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 36.000000 between residues 393 and 395
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 45, communities in prev iteration 45 and edges 800
->edgeConnectivity
  proteinGraph->nedges = 800
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 60.000000 between residues 394 and 418
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 45, communities in prev iteration 45 and edges 799
->edgeConnectivity
  proteinGraph->nedges = 799
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 78.000000 between residues 326 and 418
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 46, communities in prev iteration 45 and edges 798
->addNodeToCommunityTree
numComm = 46, numCommPrev = 45
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 798
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 35.000000 between residues 320 and 414
->floydWarshall
  residueCount = 19
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 46, communities in prev iteration 46 and edges 797
->edgeConnectivity
  proteinGraph->nedges = 797
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <-edgeConnectivity
Maximum edge Connectivity 40.000000 between residues 400 and 415
->floydWarshall
  residueCount = 19
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 46, communities in prev iteration 46 and edges 796
->edgeConnectivity
  proteinGraph->nedges = 796
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <-edgeConnectivity
Maximum edge Connectivity 56.000000 between residues 398 and 415
->floydWarshall
  residueCount = 19
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 46, communities in prev iteration 46 and edges 795
->edgeConnectivity
  proteinGraph->nedges = 795
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <-edgeConnectivity
Maximum edge Connectivity 68.000000 between residues 397 and 415
->floydWarshall
  residueCount = 19
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 47, communities in prev iteration 46 and edges 794
->addNodeToCommunityTree
numComm = 47, numCommPrev = 46
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 794
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <-edgeConnectivity
Maximum edge Connectivity 34.000000 between residues 74 and 91
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 47, communities in prev iteration 47 and edges 793
->edgeConnectivity
  proteinGraph->nedges = 793
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 48.000000 between residues 36 and 74
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 47, communities in prev iteration 47 and edges 792
->edgeConnectivity
  proteinGraph->nedges = 792
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 43.000000 between residues 36 and 92
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 47, communities in prev iteration 47 and edges 791
->edgeConnectivity
  proteinGraph->nedges = 791
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 84.000000 between residues 2 and 91
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 48, communities in prev iteration 47 and edges 790
->addNodeToCommunityTree
numComm = 48, numCommPrev = 47
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 790
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 219 and 308
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 48, communities in prev iteration 48 and edges 789
->edgeConnectivity
  proteinGraph->nedges = 789
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 48.000000 between residues 274 and 276
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 48, communities in prev iteration 48 and edges 788
->edgeConnectivity
  proteinGraph->nedges = 788
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 42.000000 between residues 221 and 310
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 48, communities in prev iteration 48 and edges 787
->edgeConnectivity
  proteinGraph->nedges = 787
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 72.000000 between residues 221 and 312
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 48 and edges 786
->addNodeToCommunityTree
numComm = 49, numCommPrev = 48
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 786
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 31.000000 between residues 154 and 157
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 785
->edgeConnectivity
  proteinGraph->nedges = 785
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 34.000000 between residues 159 and 174
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 784
->edgeConnectivity
  proteinGraph->nedges = 784
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 33.000000 between residues 160 and 177
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 783
->edgeConnectivity
  proteinGraph->nedges = 783
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 45.500000 between residues 160 and 175
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 782
->edgeConnectivity
  proteinGraph->nedges = 782
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 46.500000 between residues 157 and 160
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 781
->edgeConnectivity
  proteinGraph->nedges = 781
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 32.333332 between residues 157 and 175
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 780
->edgeConnectivity
  proteinGraph->nedges = 780
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 56.000000 between residues 159 and 161
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 779
->edgeConnectivity
  proteinGraph->nedges = 779
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 68.000000 between residues 159 and 173
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 49, communities in prev iteration 49 and edges 778
->edgeConnectivity
  proteinGraph->nedges = 778
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 80.000000 between residues 151 and 161
->floydWarshall
  residueCount = 14
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 50, communities in prev iteration 49 and edges 777
->addNodeToCommunityTree
numComm = 50, numCommPrev = 49
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 777
0 1 2 3 4 5 6 7 8 9 10 11 12 13 <-edgeConnectivity
Maximum edge Connectivity 30.847223 between residues 81 and 83
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 50, communities in prev iteration 50 and edges 776
->edgeConnectivity
  proteinGraph->nedges = 776
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 82 and 84
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 51, communities in prev iteration 50 and edges 775
->addNodeToCommunityTree
numComm = 51, numCommPrev = 50
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 775
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 27.000000 between residues 337 and 380
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 51, communities in prev iteration 51 and edges 774
->edgeConnectivity
  proteinGraph->nedges = 774
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 335 and 380
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 51, communities in prev iteration 51 and edges 773
->edgeConnectivity
  proteinGraph->nedges = 773
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 54.000000 between residues 337 and 379
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 51, communities in prev iteration 51 and edges 772
->edgeConnectivity
  proteinGraph->nedges = 772
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 72.000000 between residues 322 and 338
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 51 and edges 771
->addNodeToCommunityTree
numComm = 52, numCommPrev = 51
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 771
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 26.916666 between residues 251 and 256
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 770
->edgeConnectivity
  proteinGraph->nedges = 770
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 27.583334 between residues 250 and 254
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 769
->edgeConnectivity
  proteinGraph->nedges = 769
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 26.916668 between residues 254 and 257
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 768
->edgeConnectivity
  proteinGraph->nedges = 768
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 26.833336 between residues 32 and 79
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 767
->edgeConnectivity
  proteinGraph->nedges = 767
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 29.666668 between residues 80 and 83
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 766
->edgeConnectivity
  proteinGraph->nedges = 766
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 33.333332 between residues 79 and 86
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 765
->edgeConnectivity
  proteinGraph->nedges = 765
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 41.500000 between residues 78 and 85
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 764
->edgeConnectivity
  proteinGraph->nedges = 764
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 35.916668 between residues 79 and 81
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 763
->edgeConnectivity
  proteinGraph->nedges = 763
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 49.916668 between residues 33 and 79
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 762
->edgeConnectivity
  proteinGraph->nedges = 762
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 38.000000 between residues 78 and 87
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 761
->edgeConnectivity
  proteinGraph->nedges = 761
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 65.000000 between residues 31 and 79
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 760
->edgeConnectivity
  proteinGraph->nedges = 760
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 84.000000 between residues 24 and 87
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 52, communities in prev iteration 52 and edges 759
->edgeConnectivity
  proteinGraph->nedges = 759
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 88.000000 between residues 26 and 87
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 53, communities in prev iteration 52 and edges 758
->addNodeToCommunityTree
numComm = 53, numCommPrev = 52
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 758
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 26.000000 between residues 117 and 178
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 53, communities in prev iteration 53 and edges 757
->edgeConnectivity
  proteinGraph->nedges = 757
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 36.000000 between residues 178 and 183
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 53, communities in prev iteration 53 and edges 756
->edgeConnectivity
  proteinGraph->nedges = 756
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 40.000000 between residues 178 and 181
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 53 and edges 755
->addNodeToCommunityTree
numComm = 54, numCommPrev = 53
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 755
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 26.000000 between residues 317 and 339
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 754
->edgeConnectivity
  proteinGraph->nedges = 754
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 27.500000 between residues 400 and 413
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 753
->edgeConnectivity
  proteinGraph->nedges = 753
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 358 and 400
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 752
->edgeConnectivity
  proteinGraph->nedges = 752
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 360 and 400
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 751
->edgeConnectivity
  proteinGraph->nedges = 751
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 36.000000 between residues 397 and 416
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 750
->edgeConnectivity
  proteinGraph->nedges = 750
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 54.000000 between residues 399 and 414
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 749
->edgeConnectivity
  proteinGraph->nedges = 749
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 54.999996 between residues 361 and 398
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 748
->edgeConnectivity
  proteinGraph->nedges = 748
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 52.500000 between residues 401 and 412
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 747
->edgeConnectivity
  proteinGraph->nedges = 747
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 68.000000 between residues 317 and 413
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 746
->edgeConnectivity
  proteinGraph->nedges = 746
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 80.000000 between residues 317 and 401
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 54, communities in prev iteration 54 and edges 745
->edgeConnectivity
  proteinGraph->nedges = 745
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 144.000000 between residues 359 and 398
->floydWarshall
  residueCount = 17
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 55, communities in prev iteration 54 and edges 744
->addNodeToCommunityTree
numComm = 55, numCommPrev = 54
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 744
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <-edgeConnectivity
Maximum edge Connectivity 25.750000 between residues 405 and 409
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 55, communities in prev iteration 55 and edges 743
->edgeConnectivity
  proteinGraph->nedges = 743
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 25.000000 between residues 19 and 59
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 55, communities in prev iteration 55 and edges 742
->edgeConnectivity
  proteinGraph->nedges = 742
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 30.833334 between residues 17 and 59
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 55, communities in prev iteration 55 and edges 741
->edgeConnectivity
  proteinGraph->nedges = 741
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 36.000000 between residues 14 and 16
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 55, communities in prev iteration 55 and edges 740
->edgeConnectivity
  proteinGraph->nedges = 740
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 34.500000 between residues 17 and 19
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 55, communities in prev iteration 55 and edges 739
->edgeConnectivity
  proteinGraph->nedges = 739
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 44.000000 between residues 17 and 58
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 55 and edges 738
->addNodeToCommunityTree
numComm = 56, numCommPrev = 55
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 738
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 24.777779 between residues 356 and 407
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 737
->edgeConnectivity
  proteinGraph->nedges = 737
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 27.833334 between residues 404 and 409
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 736
->edgeConnectivity
  proteinGraph->nedges = 736
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 403 and 411
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 735
->edgeConnectivity
  proteinGraph->nedges = 735
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 24.333332 between residues 139 and 141
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 734
->edgeConnectivity
  proteinGraph->nedges = 734
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 38.333336 between residues 134 and 136
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 733
->edgeConnectivity
  proteinGraph->nedges = 733
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 47.666672 between residues 136 and 142
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 732
->edgeConnectivity
  proteinGraph->nedges = 732
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 135 and 138
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 731
->edgeConnectivity
  proteinGraph->nedges = 731
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 48.666668 between residues 136 and 139
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 730
->edgeConnectivity
  proteinGraph->nedges = 730
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 69.000000 between residues 139 and 223
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 729
->edgeConnectivity
  proteinGraph->nedges = 729
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 80.000000 between residues 135 and 137
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 56, communities in prev iteration 56 and edges 728
->edgeConnectivity
  proteinGraph->nedges = 728
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 88.000000 between residues 137 and 139
->floydWarshall
  residueCount = 15
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 57, communities in prev iteration 56 and edges 727
->addNodeToCommunityTree
numComm = 57, numCommPrev = 56
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 727
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <-edgeConnectivity
Maximum edge Connectivity 24.250000 between residues 250 and 255
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 57, communities in prev iteration 57 and edges 726
->edgeConnectivity
  proteinGraph->nedges = 726
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 254 and 256
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 57, communities in prev iteration 57 and edges 725
->edgeConnectivity
  proteinGraph->nedges = 725
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 37.333336 between residues 252 and 257
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 57, communities in prev iteration 57 and edges 724
->edgeConnectivity
  proteinGraph->nedges = 724
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 252 and 256
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 57, communities in prev iteration 57 and edges 723
->edgeConnectivity
  proteinGraph->nedges = 723
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 40.000000 between residues 250 and 256
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 58, communities in prev iteration 57 and edges 722
->addNodeToCommunityTree
numComm = 58, numCommPrev = 57
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 722
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 185 and 206
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 58, communities in prev iteration 58 and edges 721
->edgeConnectivity
  proteinGraph->nedges = 721
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 45.000000 between residues 113 and 207
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 58, communities in prev iteration 58 and edges 720
->edgeConnectivity
  proteinGraph->nedges = 720
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 50.000000 between residues 126 and 207
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 59, communities in prev iteration 58 and edges 719
->addNodeToCommunityTree
numComm = 59, numCommPrev = 58
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 719
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 370 and 372
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 59, communities in prev iteration 59 and edges 718
->edgeConnectivity
  proteinGraph->nedges = 718
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 371 and 384
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 59, communities in prev iteration 59 and edges 717
->edgeConnectivity
  proteinGraph->nedges = 717
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 370 and 384
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 59, communities in prev iteration 59 and edges 716
->edgeConnectivity
  proteinGraph->nedges = 716
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 56.000000 between residues 371 and 382
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 60, communities in prev iteration 59 and edges 715
->addNodeToCommunityTree
numComm = 60, numCommPrev = 59
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 715
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 22.458332 between residues 356 and 376
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 60, communities in prev iteration 60 and edges 714
->edgeConnectivity
  proteinGraph->nedges = 714
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 22.000000 between residues 214 and 216
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 60 and edges 713
->addNodeToCommunityTree
numComm = 61, numCommPrev = 60
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 713
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 22.000000 between residues 414 and 416
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 712
->edgeConnectivity
  proteinGraph->nedges = 712
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 22.500000 between residues 400 and 414
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 711
->edgeConnectivity
  proteinGraph->nedges = 711
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 21.875000 between residues 328 and 389
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 710
->edgeConnectivity
  proteinGraph->nedges = 710
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 32.333332 between residues 390 and 392
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 709
->edgeConnectivity
  proteinGraph->nedges = 709
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 26.000000 between residues 394 and 419
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 708
->edgeConnectivity
  proteinGraph->nedges = 708
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 39.500004 between residues 390 and 421
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 707
->edgeConnectivity
  proteinGraph->nedges = 707
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 50.000000 between residues 326 and 420
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 706
->edgeConnectivity
  proteinGraph->nedges = 706
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 54.000000 between residues 328 and 421
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 705
->edgeConnectivity
  proteinGraph->nedges = 705
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 68.000000 between residues 326 and 328
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 61, communities in prev iteration 61 and edges 704
->edgeConnectivity
  proteinGraph->nedges = 704
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 72.000000 between residues 326 and 388
->floydWarshall
  residueCount = 13
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 62, communities in prev iteration 61 and edges 703
->addNodeToCommunityTree
numComm = 62, numCommPrev = 61
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 703
0 1 2 3 4 5 6 7 8 9 10 11 12 <-edgeConnectivity
Maximum edge Connectivity 21.000000 between residues 122 and 172
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 62, communities in prev iteration 62 and edges 702
->edgeConnectivity
  proteinGraph->nedges = 702
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 23.000000 between residues 123 and 171
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 62, communities in prev iteration 62 and edges 701
->edgeConnectivity
  proteinGraph->nedges = 701
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 34.500000 between residues 120 and 122
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 62, communities in prev iteration 62 and edges 700
->edgeConnectivity
  proteinGraph->nedges = 700
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 48.000000 between residues 125 and 171
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 63, communities in prev iteration 62 and edges 699
->addNodeToCommunityTree
numComm = 63, numCommPrev = 62
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 699
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 20.354166 between residues 291 and 294
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 63, communities in prev iteration 63 and edges 698
->edgeConnectivity
  proteinGraph->nedges = 698
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 34.208336 between residues 290 and 295
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 63, communities in prev iteration 63 and edges 697
->edgeConnectivity
  proteinGraph->nedges = 697
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 22.575001 between residues 242 and 291
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 63, communities in prev iteration 63 and edges 696
->edgeConnectivity
  proteinGraph->nedges = 696
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 23.500000 between residues 289 and 291
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 63, communities in prev iteration 63 and edges 695
->edgeConnectivity
  proteinGraph->nedges = 695
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 30.416668 between residues 290 and 297
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 63, communities in prev iteration 63 and edges 694
->edgeConnectivity
  proteinGraph->nedges = 694
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 42.000000 between residues 289 and 295
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 63, communities in prev iteration 63 and edges 693
->edgeConnectivity
  proteinGraph->nedges = 693
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 56.000000 between residues 289 and 297
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 64, communities in prev iteration 63 and edges 692
->addNodeToCommunityTree
numComm = 64, numCommPrev = 63
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 692
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 16 and 18
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 64, communities in prev iteration 64 and edges 691
->edgeConnectivity
  proteinGraph->nedges = 691
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 29.000000 between residues 18 and 59
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 64, communities in prev iteration 64 and edges 690
->edgeConnectivity
  proteinGraph->nedges = 690
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 50 and 57
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 64, communities in prev iteration 64 and edges 689
->edgeConnectivity
  proteinGraph->nedges = 689
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 60.000000 between residues 57 and 59
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 65, communities in prev iteration 64 and edges 688
->addNodeToCommunityTree
numComm = 65, numCommPrev = 64
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 688
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 145 and 195
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 66, communities in prev iteration 65 and edges 687
->addNodeToCommunityTree
numComm = 66, numCommPrev = 65
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 687
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 148 and 189
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 66, communities in prev iteration 66 and edges 686
->edgeConnectivity
  proteinGraph->nedges = 686
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 150 and 187
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 66, communities in prev iteration 66 and edges 685
->edgeConnectivity
  proteinGraph->nedges = 685
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 186 and 205
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 66, communities in prev iteration 66 and edges 684
->edgeConnectivity
  proteinGraph->nedges = 684
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 186 and 204
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 66, communities in prev iteration 66 and edges 683
->edgeConnectivity
  proteinGraph->nedges = 683
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 37.000000 between residues 148 and 187
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 66, communities in prev iteration 66 and edges 682
->edgeConnectivity
  proteinGraph->nedges = 682
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 60.000000 between residues 188 and 203
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 66 and edges 681
->addNodeToCommunityTree
numComm = 67, numCommPrev = 66
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 681
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 402 and 404
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 680
->edgeConnectivity
  proteinGraph->nedges = 680
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 25.083334 between residues 355 and 404
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 679
->edgeConnectivity
  proteinGraph->nedges = 679
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 28.000000 between residues 353 and 355
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 678
->edgeConnectivity
  proteinGraph->nedges = 678
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 355 and 403
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 677
->edgeConnectivity
  proteinGraph->nedges = 677
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 34.750000 between residues 356 and 406
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 676
->edgeConnectivity
  proteinGraph->nedges = 676
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 35.000000 between residues 354 and 356
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 675
->edgeConnectivity
  proteinGraph->nedges = 675
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 39.000000 between residues 315 and 403
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 674
->edgeConnectivity
  proteinGraph->nedges = 674
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 62.000000 between residues 409 and 411
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 673
->edgeConnectivity
  proteinGraph->nedges = 673
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 102.000000 between residues 356 and 403
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 67, communities in prev iteration 67 and edges 672
->edgeConnectivity
  proteinGraph->nedges = 672
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 120.000000 between residues 376 and 406
->floydWarshall
  residueCount = 16
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 68, communities in prev iteration 67 and edges 671
->addNodeToCommunityTree
numComm = 68, numCommPrev = 67
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 671
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <-edgeConnectivity
Maximum edge Connectivity 19.000000 between residues 30 and 32
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 68, communities in prev iteration 68 and edges 670
->edgeConnectivity
  proteinGraph->nedges = 670
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 26.166666 between residues 31 and 80
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 68, communities in prev iteration 68 and edges 669
->edgeConnectivity
  proteinGraph->nedges = 669
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 28.250000 between residues 33 and 78
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 68, communities in prev iteration 68 and edges 668
->edgeConnectivity
  proteinGraph->nedges = 668
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 49.333336 between residues 30 and 80
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 68, communities in prev iteration 68 and edges 667
->edgeConnectivity
  proteinGraph->nedges = 667
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 56.000000 between residues 30 and 86
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 69, communities in prev iteration 68 and edges 666
->addNodeToCommunityTree
numComm = 69, numCommPrev = 68
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 666
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 19.000000 between residues 93 and 95
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 69, communities in prev iteration 69 and edges 665
->edgeConnectivity
  proteinGraph->nedges = 665
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 19.000000 between residues 5 and 93
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 69, communities in prev iteration 69 and edges 664
->edgeConnectivity
  proteinGraph->nedges = 664
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 4 and 6
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 69 and edges 663
->addNodeToCommunityTree
numComm = 70, numCommPrev = 69
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 663
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 19.000000 between residues 103 and 105
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 662
->edgeConnectivity
  proteinGraph->nedges = 662
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 104 and 130
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 661
->edgeConnectivity
  proteinGraph->nedges = 661
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 23.000000 between residues 104 and 131
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 660
->edgeConnectivity
  proteinGraph->nedges = 660
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 24.166668 between residues 144 and 193
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 659
->edgeConnectivity
  proteinGraph->nedges = 659
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 130 and 191
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 658
->edgeConnectivity
  proteinGraph->nedges = 658
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 26.000000 between residues 103 and 131
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 657
->edgeConnectivity
  proteinGraph->nedges = 657
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 130 and 144
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 656
->edgeConnectivity
  proteinGraph->nedges = 656
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 44.000000 between residues 105 and 201
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 70, communities in prev iteration 70 and edges 655
->edgeConnectivity
  proteinGraph->nedges = 655
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 64.000000 between residues 131 and 144
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 70 and edges 654
->addNodeToCommunityTree
numComm = 71, numCommPrev = 70
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 654
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 18.916668 between residues 220 and 276
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 71 and edges 653
->edgeConnectivity
  proteinGraph->nedges = 653
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 22.000000 between residues 277 and 308
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 71 and edges 652
->edgeConnectivity
  proteinGraph->nedges = 652
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 27.166668 between residues 220 and 277
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 71 and edges 651
->edgeConnectivity
  proteinGraph->nedges = 651
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 22.500000 between residues 276 and 278
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 71 and edges 650
->edgeConnectivity
  proteinGraph->nedges = 650
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 25.000000 between residues 278 and 280
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 71 and edges 649
->edgeConnectivity
  proteinGraph->nedges = 649
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 26.250000 between residues 277 and 279
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 71 and edges 648
->edgeConnectivity
  proteinGraph->nedges = 648
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 39.000000 between residues 277 and 280
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 71, communities in prev iteration 71 and edges 647
->edgeConnectivity
  proteinGraph->nedges = 647
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 54.000000 between residues 276 and 312
->floydWarshall
  residueCount = 12
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 11 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 11 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 72, communities in prev iteration 71 and edges 646
->addNodeToCommunityTree
numComm = 72, numCommPrev = 71
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 646
0 1 2 3 4 5 6 7 8 9 10 11 <-edgeConnectivity
Maximum edge Connectivity 18.750000 between residues 248 and 253
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 72, communities in prev iteration 72 and edges 645
->edgeConnectivity
  proteinGraph->nedges = 645
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 23.583334 between residues 251 and 254
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 72, communities in prev iteration 72 and edges 644
->edgeConnectivity
  proteinGraph->nedges = 644
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 24.083334 between residues 249 and 252
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 72, communities in prev iteration 72 and edges 643
->edgeConnectivity
  proteinGraph->nedges = 643
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 249 and 254
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 72, communities in prev iteration 72 and edges 642
->edgeConnectivity
  proteinGraph->nedges = 642
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 50.000000 between residues 251 and 285
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 73, communities in prev iteration 72 and edges 641
->addNodeToCommunityTree
numComm = 73, numCommPrev = 72
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 641
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 18.000000 between residues 227 and 270
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 73, communities in prev iteration 73 and edges 640
->edgeConnectivity
  proteinGraph->nedges = 640
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 18.000000 between residues 286 and 288
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 73, communities in prev iteration 73 and edges 639
->edgeConnectivity
  proteinGraph->nedges = 639
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 288 and 300
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 73, communities in prev iteration 73 and edges 638
->edgeConnectivity
  proteinGraph->nedges = 638
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 246 and 286
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 74, communities in prev iteration 73 and edges 637
->addNodeToCommunityTree
numComm = 74, numCommPrev = 73
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 637
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 17.750000 between residues 226 and 273
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 74, communities in prev iteration 74 and edges 636
->edgeConnectivity
  proteinGraph->nedges = 636
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 21.000000 between residues 271 and 273
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 74, communities in prev iteration 74 and edges 635
->edgeConnectivity
  proteinGraph->nedges = 635
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 28.000000 between residues 271 and 275
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 74 and edges 634
->addNodeToCommunityTree
numComm = 75, numCommPrev = 74
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 634
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 17.000000 between residues 283 and 305
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 75 and edges 633
->edgeConnectivity
  proteinGraph->nedges = 633
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 16.833334 between residues 117 and 210
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 75 and edges 632
->edgeConnectivity
  proteinGraph->nedges = 632
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 17.250000 between residues 179 and 209
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 75 and edges 631
->edgeConnectivity
  proteinGraph->nedges = 631
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 16.583332 between residues 115 and 210
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 75 and edges 630
->edgeConnectivity
  proteinGraph->nedges = 630
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 19.083332 between residues 183 and 209
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 75 and edges 629
->edgeConnectivity
  proteinGraph->nedges = 629
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 179 and 211
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 75 and edges 628
->edgeConnectivity
  proteinGraph->nedges = 628
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 117 and 179
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 75, communities in prev iteration 75 and edges 627
->edgeConnectivity
  proteinGraph->nedges = 627
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 48.000000 between residues 115 and 208
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 76, communities in prev iteration 75 and edges 626
->addNodeToCommunityTree
numComm = 76, numCommPrev = 75
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 626
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 23 and 34
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 76, communities in prev iteration 76 and edges 625
->edgeConnectivity
  proteinGraph->nedges = 625
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 21 and 56
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 76, communities in prev iteration 76 and edges 624
->edgeConnectivity
  proteinGraph->nedges = 624
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 21 and 55
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 77, communities in prev iteration 76 and edges 623
->addNodeToCommunityTree
numComm = 77, numCommPrev = 76
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 623
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 151 and 154
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 77, communities in prev iteration 77 and edges 622
->edgeConnectivity
  proteinGraph->nedges = 622
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 154 and 158
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 77, communities in prev iteration 77 and edges 621
->edgeConnectivity
  proteinGraph->nedges = 621
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 25.000000 between residues 155 and 160
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 77, communities in prev iteration 77 and edges 620
->edgeConnectivity
  proteinGraph->nedges = 620
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 29.000000 between residues 157 and 174
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 77, communities in prev iteration 77 and edges 619
->edgeConnectivity
  proteinGraph->nedges = 619
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 40.000000 between residues 151 and 160
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 77, communities in prev iteration 77 and edges 618
->edgeConnectivity
  proteinGraph->nedges = 618
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 50.000000 between residues 158 and 160
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 78, communities in prev iteration 77 and edges 617
->addNodeToCommunityTree
numComm = 78, numCommPrev = 77
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 617
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 225 and 227
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 79, communities in prev iteration 78 and edges 616
->addNodeToCommunityTree
numComm = 79, numCommPrev = 78
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 616
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 278 and 344
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 79, communities in prev iteration 79 and edges 615
->edgeConnectivity
  proteinGraph->nedges = 615
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 277 and 344
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 80, communities in prev iteration 79 and edges 614
->addNodeToCommunityTree
numComm = 80, numCommPrev = 79
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 614
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 283 and 304
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 80, communities in prev iteration 80 and edges 613
->edgeConnectivity
  proteinGraph->nedges = 613
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 16.333334 between residues 218 and 307
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 80, communities in prev iteration 80 and edges 612
->edgeConnectivity
  proteinGraph->nedges = 612
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 24.750000 between residues 281 and 306
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 80, communities in prev iteration 80 and edges 611
->edgeConnectivity
  proteinGraph->nedges = 611
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 39.000000 between residues 216 and 305
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 80, communities in prev iteration 80 and edges 610
->edgeConnectivity
  proteinGraph->nedges = 610
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 45.000000 between residues 282 and 304
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 80, communities in prev iteration 80 and edges 609
->edgeConnectivity
  proteinGraph->nedges = 609
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 56.000000 between residues 216 and 303
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 81, communities in prev iteration 80 and edges 608
->addNodeToCommunityTree
numComm = 81, numCommPrev = 80
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 608
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 339 and 400
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 81, communities in prev iteration 81 and edges 607
->edgeConnectivity
  proteinGraph->nedges = 607
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 21.000000 between residues 398 and 414
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 81, communities in prev iteration 81 and edges 606
->edgeConnectivity
  proteinGraph->nedges = 606
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 317 and 400
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 81, communities in prev iteration 81 and edges 605
->edgeConnectivity
  proteinGraph->nedges = 605
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 40.000000 between residues 400 and 412
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 82, communities in prev iteration 81 and edges 604
->addNodeToCommunityTree
numComm = 82, numCommPrev = 81
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 604
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 15.033333 between residues 404 and 407
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 82, communities in prev iteration 82 and edges 603
->edgeConnectivity
  proteinGraph->nedges = 603
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 19.083334 between residues 405 and 407
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 82, communities in prev iteration 82 and edges 602
->edgeConnectivity
  proteinGraph->nedges = 602
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 403 and 405
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 82, communities in prev iteration 82 and edges 601
->edgeConnectivity
  proteinGraph->nedges = 601
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 23.083334 between residues 403 and 406
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 82, communities in prev iteration 82 and edges 600
->edgeConnectivity
  proteinGraph->nedges = 600
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 21.000000 between residues 354 and 403
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 82, communities in prev iteration 82 and edges 599
->edgeConnectivity
  proteinGraph->nedges = 599
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 42.000000 between residues 354 and 407
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 83, communities in prev iteration 82 and edges 598
->addNodeToCommunityTree
numComm = 83, numCommPrev = 82
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 598
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 14.916667 between residues 237 and 240
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 83, communities in prev iteration 83 and edges 597
->edgeConnectivity
  proteinGraph->nedges = 597
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 235 and 238
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 83, communities in prev iteration 83 and edges 596
->edgeConnectivity
  proteinGraph->nedges = 596
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 22.000000 between residues 238 and 243
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 83, communities in prev iteration 83 and edges 595
->edgeConnectivity
  proteinGraph->nedges = 595
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 236 and 239
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 83, communities in prev iteration 83 and edges 594
->edgeConnectivity
  proteinGraph->nedges = 594
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 36.000000 between residues 236 and 298
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 84, communities in prev iteration 83 and edges 593
->addNodeToCommunityTree
numComm = 84, numCommPrev = 83
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 593
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 14.833333 between residues 245 and 264
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 84, communities in prev iteration 84 and edges 592
->edgeConnectivity
  proteinGraph->nedges = 592
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 17.000000 between residues 263 and 266
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 84, communities in prev iteration 84 and edges 591
->edgeConnectivity
  proteinGraph->nedges = 591
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 232 and 267
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 84, communities in prev iteration 84 and edges 590
->edgeConnectivity
  proteinGraph->nedges = 590
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 234 and 245
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 85, communities in prev iteration 84 and edges 589
->addNodeToCommunityTree
numComm = 85, numCommPrev = 84
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 589
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 102 and 133
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 85, communities in prev iteration 85 and edges 588
->edgeConnectivity
  proteinGraph->nedges = 588
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 133 and 135
->floydWarshall
  residueCount = 11
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 10 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 10 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 86, communities in prev iteration 85 and edges 587
->addNodeToCommunityTree
numComm = 86, numCommPrev = 85
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 587
0 1 2 3 4 5 6 7 8 9 10 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 109 and 111
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 87, communities in prev iteration 86 and edges 586
->addNodeToCommunityTree
numComm = 87, numCommPrev = 86
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 586
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 231 and 268
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 88, communities in prev iteration 87 and edges 585
->addNodeToCommunityTree
numComm = 88, numCommPrev = 87
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 585
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 350 and 352
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 89, communities in prev iteration 88 and edges 584
->addNodeToCommunityTree
numComm = 89, numCommPrev = 88
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 584
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 373 and 375
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 89, communities in prev iteration 89 and edges 583
->edgeConnectivity
  proteinGraph->nedges = 583
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 373 and 380
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 90, communities in prev iteration 89 and edges 582
->addNodeToCommunityTree
numComm = 90, numCommPrev = 89
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 582
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 13.916667 between residues 98 and 134
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 90, communities in prev iteration 90 and edges 581
->edgeConnectivity
  proteinGraph->nedges = 581
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 19.833332 between residues 98 and 100
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 90, communities in prev iteration 90 and edges 580
->edgeConnectivity
  proteinGraph->nedges = 580
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 36.000000 between residues 135 and 142
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 90, communities in prev iteration 90 and edges 579
->edgeConnectivity
  proteinGraph->nedges = 579
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 48.000000 between residues 66 and 134
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 91, communities in prev iteration 90 and edges 578
->addNodeToCommunityTree
numComm = 91, numCommPrev = 90
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 578
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 13.000000 between residues 44 and 46
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 91, communities in prev iteration 91 and edges 577
->edgeConnectivity
  proteinGraph->nedges = 577
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 16.975000 between residues 40 and 43
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 91, communities in prev iteration 91 and edges 576
->edgeConnectivity
  proteinGraph->nedges = 576
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 18.350000 between residues 39 and 43
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 91, communities in prev iteration 91 and edges 575
->edgeConnectivity
  proteinGraph->nedges = 575
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 15.833334 between residues 39 and 41
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 91, communities in prev iteration 91 and edges 574
->edgeConnectivity
  proteinGraph->nedges = 574
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 40 and 44
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 91, communities in prev iteration 91 and edges 573
->edgeConnectivity
  proteinGraph->nedges = 573
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 39 and 45
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 91, communities in prev iteration 91 and edges 572
->edgeConnectivity
  proteinGraph->nedges = 572
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 32.000000 between residues 42 and 44
->floydWarshall
  residueCount = 10
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 9 
  Distances calculated.
0 1 2 3 4 5 6 7 8 9 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 92, communities in prev iteration 91 and edges 571
->addNodeToCommunityTree
numComm = 92, numCommPrev = 91
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 571
0 1 2 3 4 5 6 7 8 9 <-edgeConnectivity
Maximum edge Connectivity 12.166667 between residues 106 and 129
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 92, communities in prev iteration 92 and edges 570
->edgeConnectivity
  proteinGraph->nedges = 570
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 34 and 53
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 92, communities in prev iteration 92 and edges 569
->edgeConnectivity
  proteinGraph->nedges = 569
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 52 and 55
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 92, communities in prev iteration 92 and edges 568
->edgeConnectivity
  proteinGraph->nedges = 568
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 22 and 55
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 93, communities in prev iteration 92 and edges 567
->addNodeToCommunityTree
numComm = 93, numCommPrev = 92
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 567
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 63 and 65
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 94, communities in prev iteration 93 and edges 566
->addNodeToCommunityTree
numComm = 94, numCommPrev = 93
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 566
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 103 and 200
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 94, communities in prev iteration 94 and edges 565
->edgeConnectivity
  proteinGraph->nedges = 565
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 104 and 199
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 94, communities in prev iteration 94 and edges 564
->edgeConnectivity
  proteinGraph->nedges = 564
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 17.750000 between residues 104 and 193
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 94, communities in prev iteration 94 and edges 563
->edgeConnectivity
  proteinGraph->nedges = 563
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 15.000000 between residues 191 and 193
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 94, communities in prev iteration 94 and edges 562
->edgeConnectivity
  proteinGraph->nedges = 562
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 191 and 199
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 95, communities in prev iteration 94 and edges 561
->addNodeToCommunityTree
numComm = 95, numCommPrev = 94
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 561
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 116 and 119
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 95, communities in prev iteration 95 and edges 560
->edgeConnectivity
  proteinGraph->nedges = 560
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 118 and 120
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 96, communities in prev iteration 95 and edges 559
->addNodeToCommunityTree
numComm = 96, numCommPrev = 95
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 559
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 355 and 402
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 96, communities in prev iteration 96 and edges 558
->edgeConnectivity
  proteinGraph->nedges = 558
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 315 and 355
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 97, communities in prev iteration 96 and edges 557
->addNodeToCommunityTree
numComm = 97, numCommPrev = 96
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 557
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 359 and 399
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 97, communities in prev iteration 97 and edges 556
->edgeConnectivity
  proteinGraph->nedges = 556
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 361 and 399
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 97, communities in prev iteration 97 and edges 555
->edgeConnectivity
  proteinGraph->nedges = 555
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 397 and 399
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 98, communities in prev iteration 97 and edges 554
->addNodeToCommunityTree
numComm = 98, numCommPrev = 97
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 554
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 362 and 365
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 98, communities in prev iteration 98 and edges 553
->edgeConnectivity
  proteinGraph->nedges = 553
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 362 and 369
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 99, communities in prev iteration 98 and edges 552
->addNodeToCommunityTree
numComm = 99, numCommPrev = 98
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 552
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 390 and 394
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 99, communities in prev iteration 99 and edges 551
->edgeConnectivity
  proteinGraph->nedges = 551
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 18.000000 between residues 394 and 420
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 99, communities in prev iteration 99 and edges 550
->edgeConnectivity
  proteinGraph->nedges = 550
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 26.000000 between residues 389 and 420
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 99, communities in prev iteration 99 and edges 549
->edgeConnectivity
  proteinGraph->nedges = 549
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 27.000000 between residues 389 and 391
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 99, communities in prev iteration 99 and edges 548
->edgeConnectivity
  proteinGraph->nedges = 548
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 36.000000 between residues 389 and 393
->floydWarshall
  residueCount = 9
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 8 
  Distances calculated.
0 1 2 3 4 5 6 7 8 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 100, communities in prev iteration 99 and edges 547
->addNodeToCommunityTree
numComm = 100, numCommPrev = 99
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 547
0 1 2 3 4 5 6 7 8 <-edgeConnectivity
Maximum edge Connectivity 11.000000 between residues 310 and 345
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 100, communities in prev iteration 100 and edges 546
->edgeConnectivity
  proteinGraph->nedges = 546
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 312 and 345
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 100, communities in prev iteration 100 and edges 545
->edgeConnectivity
  proteinGraph->nedges = 545
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 22.000000 between residues 220 and 309
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 100, communities in prev iteration 100 and edges 544
->edgeConnectivity
  proteinGraph->nedges = 544
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 278 and 309
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 100, communities in prev iteration 100 and edges 543
->edgeConnectivity
  proteinGraph->nedges = 543
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 278 and 345
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 101, communities in prev iteration 100 and edges 542
->addNodeToCommunityTree
numComm = 101, numCommPrev = 100
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 542
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 11.000000 between residues 371 and 386
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 101, communities in prev iteration 101 and edges 541
->edgeConnectivity
  proteinGraph->nedges = 541
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 368 and 371
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 101, communities in prev iteration 101 and edges 540
->edgeConnectivity
  proteinGraph->nedges = 540
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 370 and 385
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 101, communities in prev iteration 101 and edges 539
->edgeConnectivity
  proteinGraph->nedges = 539
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 368 and 385
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 102, communities in prev iteration 101 and edges 538
->addNodeToCommunityTree
numComm = 102, numCommPrev = 101
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 538
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 10.625000 between residues 290 and 296
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 102, communities in prev iteration 102 and edges 537
->edgeConnectivity
  proteinGraph->nedges = 537
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 10.583333 between residues 292 and 294
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 102, communities in prev iteration 102 and edges 536
->edgeConnectivity
  proteinGraph->nedges = 536
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 244 and 289
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 102, communities in prev iteration 102 and edges 535
->edgeConnectivity
  proteinGraph->nedges = 535
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 290 and 294
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 103, communities in prev iteration 102 and edges 534
->addNodeToCommunityTree
numComm = 103, numCommPrev = 102
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 534
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 40 and 45
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 103, communities in prev iteration 103 and edges 533
->edgeConnectivity
  proteinGraph->nedges = 533
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 14.333333 between residues 38 and 43
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 103, communities in prev iteration 103 and edges 532
->edgeConnectivity
  proteinGraph->nedges = 532
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 38 and 41
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 103, communities in prev iteration 103 and edges 531
->edgeConnectivity
  proteinGraph->nedges = 531
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 42 and 46
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 103, communities in prev iteration 103 and edges 530
->edgeConnectivity
  proteinGraph->nedges = 530
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 30.000000 between residues 37 and 42
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 104, communities in prev iteration 103 and edges 529
->addNodeToCommunityTree
numComm = 104, numCommPrev = 103
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 529
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 65 and 68
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 105, communities in prev iteration 104 and edges 528
->addNodeToCommunityTree
numComm = 105, numCommPrev = 104
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 528
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 73 and 75
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 105, communities in prev iteration 105 and edges 527
->edgeConnectivity
  proteinGraph->nedges = 527
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.500000 between residues 75 and 91
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 105, communities in prev iteration 105 and edges 526
->edgeConnectivity
  proteinGraph->nedges = 526
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 89 and 91
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 106, communities in prev iteration 105 and edges 525
->addNodeToCommunityTree
numComm = 106, numCommPrev = 105
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 525
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 88 and 90
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 107, communities in prev iteration 106 and edges 524
->addNodeToCommunityTree
numComm = 107, numCommPrev = 106
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 524
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 165 and 196
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 108, communities in prev iteration 107 and edges 523
->addNodeToCommunityTree
numComm = 108, numCommPrev = 107
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 523
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 183 and 208
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 108, communities in prev iteration 108 and edges 522
->edgeConnectivity
  proteinGraph->nedges = 522
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 18.000000 between residues 179 and 210
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 109, communities in prev iteration 108 and edges 521
->addNodeToCommunityTree
numComm = 109, numCommPrev = 108
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 521
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 338 and 379
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 109, communities in prev iteration 109 and edges 520
->edgeConnectivity
  proteinGraph->nedges = 520
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 338 and 378
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 110, communities in prev iteration 109 and edges 519
->addNodeToCommunityTree
numComm = 110, numCommPrev = 109
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 519
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 391 and 393
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 110, communities in prev iteration 110 and edges 518
->edgeConnectivity
  proteinGraph->nedges = 518
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 328 and 391
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 111, communities in prev iteration 110 and edges 517
->addNodeToCommunityTree
numComm = 111, numCommPrev = 110
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 517
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 9.583333 between residues 84 and 86
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 111, communities in prev iteration 111 and edges 516
->edgeConnectivity
  proteinGraph->nedges = 516
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 24 and 78
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 111, communities in prev iteration 111 and edges 515
->edgeConnectivity
  proteinGraph->nedges = 515
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.750000 between residues 32 and 78
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 111, communities in prev iteration 111 and edges 514
->edgeConnectivity
  proteinGraph->nedges = 514
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 78 and 86
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 111, communities in prev iteration 111 and edges 513
->edgeConnectivity
  proteinGraph->nedges = 513
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 80 and 86
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 112, communities in prev iteration 111 and edges 512
->addNodeToCommunityTree
numComm = 112, numCommPrev = 111
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 512
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 9.000000 between residues 8 and 11
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 112, communities in prev iteration 112 and edges 511
->edgeConnectivity
  proteinGraph->nedges = 511
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 9 and 97
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 112, communities in prev iteration 112 and edges 510
->edgeConnectivity
  proteinGraph->nedges = 510
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 18.000000 between residues 7 and 9
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 112, communities in prev iteration 112 and edges 509
->edgeConnectivity
  proteinGraph->nedges = 509
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 7 and 11
->floydWarshall
  residueCount = 8
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 7 
  Distances calculated.
0 1 2 3 4 5 6 7 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 113, communities in prev iteration 112 and edges 508
->addNodeToCommunityTree
numComm = 113, numCommPrev = 112
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 508
0 1 2 3 4 5 6 7 <-edgeConnectivity
Maximum edge Connectivity 9.000000 between residues 235 and 237
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 113, communities in prev iteration 113 and edges 507
->edgeConnectivity
  proteinGraph->nedges = 507
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 235 and 243
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 113, communities in prev iteration 113 and edges 506
->edgeConnectivity
  proteinGraph->nedges = 506
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 237 and 298
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 114, communities in prev iteration 113 and edges 505
->addNodeToCommunityTree
numComm = 114, numCommPrev = 113
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 505
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 9.000000 between residues 287 and 301
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 114, communities in prev iteration 114 and edges 504
->edgeConnectivity
  proteinGraph->nedges = 504
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 233 and 301
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 115, communities in prev iteration 114 and edges 503
->addNodeToCommunityTree
numComm = 115, numCommPrev = 114
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 503
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 9.000000 between residues 346 and 349
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 115, communities in prev iteration 115 and edges 502
->edgeConnectivity
  proteinGraph->nedges = 502
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 346 and 350
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 115, communities in prev iteration 115 and edges 501
->edgeConnectivity
  proteinGraph->nedges = 501
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 12 and 348
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 115, communities in prev iteration 115 and edges 500
->edgeConnectivity
  proteinGraph->nedges = 500
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 348 and 350
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 116, communities in prev iteration 115 and edges 499
->addNodeToCommunityTree
numComm = 116, numCommPrev = 115
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 499
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 5 and 95
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 116, communities in prev iteration 116 and edges 498
->edgeConnectivity
  proteinGraph->nedges = 498
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 7 and 97
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 116, communities in prev iteration 116 and edges 497
->edgeConnectivity
  proteinGraph->nedges = 497
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 7 and 95
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 117, communities in prev iteration 116 and edges 496
->addNodeToCommunityTree
numComm = 117, numCommPrev = 116
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 496
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 13 and 15
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 118, communities in prev iteration 117 and edges 495
->addNodeToCommunityTree
numComm = 118, numCommPrev = 117
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 495
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 25 and 27
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 119, communities in prev iteration 118 and edges 494
->addNodeToCommunityTree
numComm = 119, numCommPrev = 118
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 494
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 49 and 94
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 119, communities in prev iteration 119 and edges 493
->edgeConnectivity
  proteinGraph->nedges = 493
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 72 and 94
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 119, communities in prev iteration 119 and edges 492
->edgeConnectivity
  proteinGraph->nedges = 492
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 72 and 96
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 120, communities in prev iteration 119 and edges 491
->addNodeToCommunityTree
numComm = 120, numCommPrev = 119
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 491
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 67 and 101
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 120, communities in prev iteration 120 and edges 490
->edgeConnectivity
  proteinGraph->nedges = 490
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 65 and 101
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 121, communities in prev iteration 120 and edges 489
->addNodeToCommunityTree
numComm = 121, numCommPrev = 120
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 489
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 106 and 108
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 121, communities in prev iteration 121 and edges 488
->edgeConnectivity
  proteinGraph->nedges = 488
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 13.000000 between residues 111 and 128
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 121, communities in prev iteration 121 and edges 487
->edgeConnectivity
  proteinGraph->nedges = 487
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 129 and 146
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 121, communities in prev iteration 121 and edges 486
->edgeConnectivity
  proteinGraph->nedges = 486
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 106 and 111
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 122, communities in prev iteration 121 and edges 485
->addNodeToCommunityTree
numComm = 122, numCommPrev = 121
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 485
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 113 and 206
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 122, communities in prev iteration 122 and edges 484
->edgeConnectivity
  proteinGraph->nedges = 484
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 112 and 126
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 123, communities in prev iteration 122 and edges 483
->addNodeToCommunityTree
numComm = 123, numCommPrev = 122
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 483
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 151 and 158
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 124, communities in prev iteration 123 and edges 482
->addNodeToCommunityTree
numComm = 124, numCommPrev = 123
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 482
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 154 and 156
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 125, communities in prev iteration 124 and edges 481
->addNodeToCommunityTree
numComm = 125, numCommPrev = 124
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 481
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 161 and 177
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 126, communities in prev iteration 125 and edges 480
->addNodeToCommunityTree
numComm = 126, numCommPrev = 125
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 480
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 162 and 164
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 126, communities in prev iteration 126 and edges 479
->edgeConnectivity
  proteinGraph->nedges = 479
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 164 and 169
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 126, communities in prev iteration 126 and edges 478
->edgeConnectivity
  proteinGraph->nedges = 478
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 14.000000 between residues 163 and 168
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 126, communities in prev iteration 126 and edges 477
->edgeConnectivity
  proteinGraph->nedges = 477
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 164 and 167
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 127, communities in prev iteration 126 and edges 476
->addNodeToCommunityTree
numComm = 127, numCommPrev = 126
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 476
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 228 and 230
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 127, communities in prev iteration 127 and edges 475
->edgeConnectivity
  proteinGraph->nedges = 475
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 226 and 271
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 127, communities in prev iteration 127 and edges 474
->edgeConnectivity
  proteinGraph->nedges = 474
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 228 and 271
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 127, communities in prev iteration 127 and edges 473
->edgeConnectivity
  proteinGraph->nedges = 473
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 228 and 269
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 128, communities in prev iteration 127 and edges 472
->addNodeToCommunityTree
numComm = 128, numCommPrev = 127
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 472
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 252 and 254
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 129, communities in prev iteration 128 and edges 471
->addNodeToCommunityTree
numComm = 129, numCommPrev = 128
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 471
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 260 and 305
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 129, communities in prev iteration 129 and edges 470
->edgeConnectivity
  proteinGraph->nedges = 470
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 283 and 307
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 129, communities in prev iteration 129 and edges 469
->edgeConnectivity
  proteinGraph->nedges = 469
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 303 and 305
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 130, communities in prev iteration 129 and edges 468
->addNodeToCommunityTree
numComm = 130, numCommPrev = 129
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 468
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 270 and 272
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 130, communities in prev iteration 130 and edges 467
->edgeConnectivity
  proteinGraph->nedges = 467
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 227 and 229
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 130, communities in prev iteration 130 and edges 466
->edgeConnectivity
  proteinGraph->nedges = 466
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 261 and 270
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 130, communities in prev iteration 130 and edges 465
->edgeConnectivity
  proteinGraph->nedges = 465
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 259 and 261
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 130, communities in prev iteration 130 and edges 464
->edgeConnectivity
  proteinGraph->nedges = 464
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 24.000000 between residues 261 and 268
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 131, communities in prev iteration 130 and edges 463
->addNodeToCommunityTree
numComm = 131, numCommPrev = 130
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 463
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 314 and 343
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 131, communities in prev iteration 131 and edges 462
->edgeConnectivity
  proteinGraph->nedges = 462
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 313 and 410
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 131, communities in prev iteration 131 and edges 461
->edgeConnectivity
  proteinGraph->nedges = 461
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 18.000000 between residues 311 and 410
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 132, communities in prev iteration 131 and edges 460
->addNodeToCommunityTree
numComm = 132, numCommPrev = 131
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 460
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 375 and 380
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 132, communities in prev iteration 132 and edges 459
->edgeConnectivity
  proteinGraph->nedges = 459
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 375 and 378
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 132, communities in prev iteration 132 and edges 458
->edgeConnectivity
  proteinGraph->nedges = 458
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 11.000000 between residues 357 and 378
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 132, communities in prev iteration 132 and edges 457
->edgeConnectivity
  proteinGraph->nedges = 457
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 20.000000 between residues 374 and 380
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 133, communities in prev iteration 132 and edges 456
->addNodeToCommunityTree
numComm = 133, numCommPrev = 132
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 456
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 393 and 420
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 134, communities in prev iteration 133 and edges 455
->addNodeToCommunityTree
numComm = 134, numCommPrev = 133
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 455
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 22 and 56
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 134, communities in prev iteration 134 and edges 454
->edgeConnectivity
  proteinGraph->nedges = 454
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 22 and 34
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 134, communities in prev iteration 134 and edges 453
->edgeConnectivity
  proteinGraph->nedges = 453
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 51 and 56
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 134, communities in prev iteration 134 and edges 452
->edgeConnectivity
  proteinGraph->nedges = 452
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 34 and 51
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 135, communities in prev iteration 134 and edges 451
->addNodeToCommunityTree
numComm = 135, numCommPrev = 134
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 451
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 35 and 77
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 135, communities in prev iteration 135 and edges 450
->edgeConnectivity
  proteinGraph->nedges = 450
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 35 and 75
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 136, communities in prev iteration 135 and edges 449
->addNodeToCommunityTree
numComm = 136, numCommPrev = 135
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 449
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 43 and 45
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 136, communities in prev iteration 136 and edges 448
->edgeConnectivity
  proteinGraph->nedges = 448
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 41 and 45
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 137, communities in prev iteration 136 and edges 447
->addNodeToCommunityTree
numComm = 137, numCommPrev = 136
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 447
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 50 and 59
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 137, communities in prev iteration 137 and edges 446
->edgeConnectivity
  proteinGraph->nedges = 446
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 16 and 61
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 137, communities in prev iteration 137 and edges 445
->edgeConnectivity
  proteinGraph->nedges = 445
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 16 and 59
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 138, communities in prev iteration 137 and edges 444
->addNodeToCommunityTree
numComm = 138, numCommPrev = 137
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 444
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 134 and 142
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 138, communities in prev iteration 138 and edges 443
->edgeConnectivity
  proteinGraph->nedges = 443
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 132 and 134
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 138, communities in prev iteration 138 and edges 442
->edgeConnectivity
  proteinGraph->nedges = 442
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 102 and 132
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 138, communities in prev iteration 138 and edges 441
->edgeConnectivity
  proteinGraph->nedges = 441
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 132 and 141
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 139, communities in prev iteration 138 and edges 440
->addNodeToCommunityTree
numComm = 139, numCommPrev = 138
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 440
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 182 and 184
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 139, communities in prev iteration 139 and edges 439
->edgeConnectivity
  proteinGraph->nedges = 439
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 185 and 207
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 139, communities in prev iteration 139 and edges 438
->edgeConnectivity
  proteinGraph->nedges = 438
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 153 and 184
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 140, communities in prev iteration 139 and edges 437
->addNodeToCommunityTree
numComm = 140, numCommPrev = 139
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 437
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 190 and 202
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 140, communities in prev iteration 140 and edges 436
->edgeConnectivity
  proteinGraph->nedges = 436
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 147 and 149
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 140, communities in prev iteration 140 and edges 435
->edgeConnectivity
  proteinGraph->nedges = 435
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 149 and 190
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 141, communities in prev iteration 140 and edges 434
->addNodeToCommunityTree
numComm = 141, numCommPrev = 140
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 434
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 310 and 312
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 141, communities in prev iteration 141 and edges 433
->edgeConnectivity
  proteinGraph->nedges = 433
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 347 and 349
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 141, communities in prev iteration 141 and edges 432
->edgeConnectivity
  proteinGraph->nedges = 432
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 9.000000 between residues 12 and 350
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 141, communities in prev iteration 141 and edges 431
->edgeConnectivity
  proteinGraph->nedges = 431
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 12 and 347
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 142, communities in prev iteration 141 and edges 430
->addNodeToCommunityTree
numComm = 142, numCommPrev = 141
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 430
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 354 and 405
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 142, communities in prev iteration 142 and edges 429
->edgeConnectivity
  proteinGraph->nedges = 429
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 11.166667 between residues 351 and 405
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 142, communities in prev iteration 142 and edges 428
->edgeConnectivity
  proteinGraph->nedges = 428
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 405 and 408
->floydWarshall
  residueCount = 7
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 6 
  Distances calculated.
0 1 2 3 4 5 6 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 143, communities in prev iteration 142 and edges 427
->addNodeToCommunityTree
numComm = 143, numCommPrev = 142
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 427
0 1 2 3 4 5 6 <-edgeConnectivity
Maximum edge Connectivity 7.000000 between residues 351 and 354
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 143, communities in prev iteration 143 and edges 426
->edgeConnectivity
  proteinGraph->nedges = 426
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 353 and 404
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 143, communities in prev iteration 143 and edges 425
->edgeConnectivity
  proteinGraph->nedges = 425
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 351 and 353
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 144, communities in prev iteration 143 and edges 424
->addNodeToCommunityTree
numComm = 144, numCommPrev = 143
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 424
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 2 and 90
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 144, communities in prev iteration 144 and edges 423
->edgeConnectivity
  proteinGraph->nedges = 423
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 2 and 92
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 145, communities in prev iteration 144 and edges 422
->addNodeToCommunityTree
numComm = 145, numCommPrev = 144
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 422
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 19 and 58
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 145, communities in prev iteration 145 and edges 421
->edgeConnectivity
  proteinGraph->nedges = 421
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 19 and 57
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 146, communities in prev iteration 145 and edges 420
->addNodeToCommunityTree
numComm = 146, numCommPrev = 145
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 420
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 30 and 81
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 147, communities in prev iteration 146 and edges 419
->addNodeToCommunityTree
numComm = 147, numCommPrev = 146
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 419
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 48 and 50
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 147, communities in prev iteration 147 and edges 418
->edgeConnectivity
  proteinGraph->nedges = 418
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 9.000000 between residues 47 and 61
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 147, communities in prev iteration 147 and edges 417
->edgeConnectivity
  proteinGraph->nedges = 417
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 50 and 61
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 148, communities in prev iteration 147 and edges 416
->addNodeToCommunityTree
numComm = 148, numCommPrev = 147
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 416
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 85 and 87
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 149, communities in prev iteration 148 and edges 415
->addNodeToCommunityTree
numComm = 149, numCommPrev = 148
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 415
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 108 and 111
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 150, communities in prev iteration 149 and edges 414
->addNodeToCommunityTree
numComm = 150, numCommPrev = 149
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 414
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 120 and 172
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 150, communities in prev iteration 150 and edges 413
->edgeConnectivity
  proteinGraph->nedges = 413
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 120 and 123
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 151, communities in prev iteration 150 and edges 412
->addNodeToCommunityTree
numComm = 151, numCommPrev = 150
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 412
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 137 and 223
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 152, communities in prev iteration 151 and edges 411
->addNodeToCommunityTree
numComm = 152, numCommPrev = 151
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 411
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 143 and 194
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 152, communities in prev iteration 152 and edges 410
->edgeConnectivity
  proteinGraph->nedges = 410
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 144 and 191
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 152, communities in prev iteration 152 and edges 409
->edgeConnectivity
  proteinGraph->nedges = 409
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 104 and 144
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 153, communities in prev iteration 152 and edges 408
->addNodeToCommunityTree
numComm = 153, numCommPrev = 152
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 408
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 148 and 150
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 153, communities in prev iteration 153 and edges 407
->edgeConnectivity
  proteinGraph->nedges = 407
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 150 and 188
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 154, communities in prev iteration 153 and edges 406
->addNodeToCommunityTree
numComm = 154, numCommPrev = 153
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 406
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 162 and 169
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 155, communities in prev iteration 154 and edges 405
->addNodeToCommunityTree
numComm = 155, numCommPrev = 154
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 405
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 170 and 189
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 155, communities in prev iteration 155 and edges 404
->edgeConnectivity
  proteinGraph->nedges = 404
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 170 and 205
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 155, communities in prev iteration 155 and edges 403
->edgeConnectivity
  proteinGraph->nedges = 403
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 170 and 187
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 156, communities in prev iteration 155 and edges 402
->addNodeToCommunityTree
numComm = 156, numCommPrev = 155
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 402
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 220 and 278
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 156, communities in prev iteration 156 and edges 401
->edgeConnectivity
  proteinGraph->nedges = 401
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 220 and 312
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 157, communities in prev iteration 156 and edges 400
->addNodeToCommunityTree
numComm = 157, numCommPrev = 156
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 400
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 259 and 270
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 158, communities in prev iteration 157 and edges 399
->addNodeToCommunityTree
numComm = 158, numCommPrev = 157
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 399
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 264 and 266
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 159, communities in prev iteration 158 and edges 398
->addNodeToCommunityTree
numComm = 159, numCommPrev = 158
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 398
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 316 and 342
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 159, communities in prev iteration 159 and edges 397
->edgeConnectivity
  proteinGraph->nedges = 397
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 318 and 342
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 160, communities in prev iteration 159 and edges 396
->addNodeToCommunityTree
numComm = 160, numCommPrev = 159
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 396
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 317 and 412
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 161, communities in prev iteration 160 and edges 395
->addNodeToCommunityTree
numComm = 161, numCommPrev = 160
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 395
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 322 and 337
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 162, communities in prev iteration 161 and edges 394
->addNodeToCommunityTree
numComm = 162, numCommPrev = 161
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 394
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 331 and 334
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 162, communities in prev iteration 162 and edges 393
->edgeConnectivity
  proteinGraph->nedges = 393
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 331 and 383
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 162, communities in prev iteration 162 and edges 392
->edgeConnectivity
  proteinGraph->nedges = 392
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 16.000000 between residues 333 and 383
->floydWarshall
  residueCount = 6
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 5 
  Distances calculated.
0 1 2 3 4 5 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 163, communities in prev iteration 162 and edges 391
->addNodeToCommunityTree
numComm = 163, numCommPrev = 162
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 391
0 1 2 3 4 5 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 339 and 416
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 163, communities in prev iteration 163 and edges 390
->edgeConnectivity
  proteinGraph->nedges = 390
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 339 and 381
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 164, communities in prev iteration 163 and edges 389
->addNodeToCommunityTree
numComm = 164, numCommPrev = 163
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 389
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 354 and 406
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 164, communities in prev iteration 164 and edges 388
->edgeConnectivity
  proteinGraph->nedges = 388
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 354 and 404
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 165, communities in prev iteration 164 and edges 387
->addNodeToCommunityTree
numComm = 165, numCommPrev = 164
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 387
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 356 and 402
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 166, communities in prev iteration 165 and edges 386
->addNodeToCommunityTree
numComm = 166, numCommPrev = 165
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 386
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 374 and 379
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 166, communities in prev iteration 166 and edges 385
->edgeConnectivity
  proteinGraph->nedges = 385
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 357 and 374
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 167, communities in prev iteration 166 and edges 384
->addNodeToCommunityTree
numComm = 167, numCommPrev = 166
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 384
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 382 and 384
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 168, communities in prev iteration 167 and edges 383
->addNodeToCommunityTree
numComm = 168, numCommPrev = 167
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 383
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 62 and 64
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 168, communities in prev iteration 168 and edges 382
->edgeConnectivity
  proteinGraph->nedges = 382
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 60 and 64
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 169, communities in prev iteration 168 and edges 381
->addNodeToCommunityTree
numComm = 169, numCommPrev = 168
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 381
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 66 and 98
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 169, communities in prev iteration 169 and edges 380
->edgeConnectivity
  proteinGraph->nedges = 380
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 66 and 135
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 170, communities in prev iteration 169 and edges 379
->addNodeToCommunityTree
numComm = 170, numCommPrev = 169
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 379
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 187 and 205
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 170, communities in prev iteration 170 and edges 378
->edgeConnectivity
  proteinGraph->nedges = 378
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 189 and 204
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 170, communities in prev iteration 170 and edges 377
->edgeConnectivity
  proteinGraph->nedges = 377
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 10.000000 between residues 187 and 189
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 170, communities in prev iteration 170 and edges 376
->edgeConnectivity
  proteinGraph->nedges = 376
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 12.000000 between residues 187 and 203
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 171, communities in prev iteration 170 and edges 375
->addNodeToCommunityTree
numComm = 171, numCommPrev = 170
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 375
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 192 and 198
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 171, communities in prev iteration 171 and edges 374
->edgeConnectivity
  proteinGraph->nedges = 374
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 143 and 196
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 171, communities in prev iteration 171 and edges 373
->edgeConnectivity
  proteinGraph->nedges = 373
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 143 and 192
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 172, communities in prev iteration 171 and edges 372
->addNodeToCommunityTree
numComm = 172, numCommPrev = 171
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 372
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 241 and 243
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 172, communities in prev iteration 172 and edges 371
->edgeConnectivity
  proteinGraph->nedges = 371
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 237 and 243
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 173, communities in prev iteration 172 and edges 370
->addNodeToCommunityTree
numComm = 173, numCommPrev = 172
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 370
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 246 and 262
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 173, communities in prev iteration 173 and edges 369
->edgeConnectivity
  proteinGraph->nedges = 369
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 247 and 288
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 174, communities in prev iteration 173 and edges 368
->addNodeToCommunityTree
numComm = 174, numCommPrev = 173
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 368
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 249 and 251
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 174, communities in prev iteration 174 and edges 367
->edgeConnectivity
  proteinGraph->nedges = 367
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 249 and 253
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 175, communities in prev iteration 174 and edges 366
->addNodeToCommunityTree
numComm = 175, numCommPrev = 174
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 366
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 286 and 300
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 175, communities in prev iteration 175 and edges 365
->edgeConnectivity
  proteinGraph->nedges = 365
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 300 and 302
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 176, communities in prev iteration 175 and edges 364
->addNodeToCommunityTree
numComm = 176, numCommPrev = 175
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 364
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 326 and 421
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 176, communities in prev iteration 176 and edges 363
->edgeConnectivity
  proteinGraph->nedges = 363
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 326 and 419
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 177, communities in prev iteration 176 and edges 362
->addNodeToCommunityTree
numComm = 177, numCommPrev = 176
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 362
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 401 and 413
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 177, communities in prev iteration 177 and edges 361
->edgeConnectivity
  proteinGraph->nedges = 361
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 6.250000 between residues 399 and 413
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 177, communities in prev iteration 177 and edges 360
->edgeConnectivity
  proteinGraph->nedges = 360
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 360 and 413
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 178, communities in prev iteration 177 and edges 359
->addNodeToCommunityTree
numComm = 178, numCommPrev = 177
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 359
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 4.500000 between residues 291 and 295
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 178, communities in prev iteration 178 and edges 358
->edgeConnectivity
  proteinGraph->nedges = 358
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 291 and 293
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 178, communities in prev iteration 178 and edges 357
->edgeConnectivity
  proteinGraph->nedges = 357
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 295 and 297
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 179, communities in prev iteration 178 and edges 356
->addNodeToCommunityTree
numComm = 179, numCommPrev = 178
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 356
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 20 and 57
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 179, communities in prev iteration 179 and edges 355
->edgeConnectivity
  proteinGraph->nedges = 355
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 18 and 57
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 180, communities in prev iteration 179 and edges 354
->addNodeToCommunityTree
numComm = 180, numCommPrev = 179
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 354
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 34 and 56
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 180, communities in prev iteration 180 and edges 353
->edgeConnectivity
  proteinGraph->nedges = 353
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 34 and 54
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 180, communities in prev iteration 180 and edges 352
->edgeConnectivity
  proteinGraph->nedges = 352
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 34 and 52
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 181, communities in prev iteration 180 and edges 351
->addNodeToCommunityTree
numComm = 181, numCommPrev = 180
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 351
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 37 and 41
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 181, communities in prev iteration 181 and edges 350
->edgeConnectivity
  proteinGraph->nedges = 350
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 37 and 43
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 182, communities in prev iteration 181 and edges 349
->addNodeToCommunityTree
numComm = 182, numCommPrev = 181
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 349
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 70 and 96
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 182, communities in prev iteration 182 and edges 348
->edgeConnectivity
  proteinGraph->nedges = 348
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 70 and 94
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 183, communities in prev iteration 182 and edges 347
->addNodeToCommunityTree
numComm = 183, numCommPrev = 182
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 347
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 74 and 76
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 183, communities in prev iteration 183 and edges 346
->edgeConnectivity
  proteinGraph->nedges = 346
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 74 and 90
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 184, communities in prev iteration 183 and edges 345
->addNodeToCommunityTree
numComm = 184, numCommPrev = 183
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 345
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 100 and 102
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 184, communities in prev iteration 184 and edges 344
->edgeConnectivity
  proteinGraph->nedges = 344
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 102 and 134
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 185, communities in prev iteration 184 and edges 343
->addNodeToCommunityTree
numComm = 185, numCommPrev = 184
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 343
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 105 and 130
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 185, communities in prev iteration 185 and edges 342
->edgeConnectivity
  proteinGraph->nedges = 342
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 107 and 130
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 186, communities in prev iteration 185 and edges 341
->addNodeToCommunityTree
numComm = 186, numCommPrev = 185
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 341
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 115 and 209
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 186, communities in prev iteration 186 and edges 340
->edgeConnectivity
  proteinGraph->nedges = 340
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 115 and 117
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 187, communities in prev iteration 186 and edges 339
->addNodeToCommunityTree
numComm = 187, numCommPrev = 186
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 339
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 123 and 125
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 187, communities in prev iteration 187 and edges 338
->edgeConnectivity
  proteinGraph->nedges = 338
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 8.000000 between residues 125 and 172
->floydWarshall
  residueCount = 5
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 4 
  Distances calculated.
0 1 2 3 4 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 188, communities in prev iteration 187 and edges 337
->addNodeToCommunityTree
numComm = 188, numCommPrev = 187
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 337
0 1 2 3 4 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 155 and 157
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 188, communities in prev iteration 188 and edges 336
->edgeConnectivity
  proteinGraph->nedges = 336
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 151 and 155
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 189, communities in prev iteration 188 and edges 335
->addNodeToCommunityTree
numComm = 189, numCommPrev = 188
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 335
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 156 and 176
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 189, communities in prev iteration 189 and edges 334
->edgeConnectivity
  proteinGraph->nedges = 334
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 156 and 160
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 190, communities in prev iteration 189 and edges 333
->addNodeToCommunityTree
numComm = 190, numCommPrev = 189
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 333
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 163 and 169
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 191, communities in prev iteration 190 and edges 332
->addNodeToCommunityTree
numComm = 191, numCommPrev = 190
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 332
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 191 and 200
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 191, communities in prev iteration 191 and edges 331
->edgeConnectivity
  proteinGraph->nedges = 331
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 104 and 200
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 192, communities in prev iteration 191 and edges 330
->addNodeToCommunityTree
numComm = 192, numCommPrev = 191
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 330
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 192 and 196
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 192, communities in prev iteration 192 and edges 329
->edgeConnectivity
  proteinGraph->nedges = 329
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 192 and 194
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 193, communities in prev iteration 192 and edges 328
->addNodeToCommunityTree
numComm = 193, numCommPrev = 192
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 328
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 212 and 301
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 194, communities in prev iteration 193 and edges 327
->addNodeToCommunityTree
numComm = 194, numCommPrev = 193
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 327
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 213 and 215
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 195, communities in prev iteration 194 and edges 326
->addNodeToCommunityTree
numComm = 195, numCommPrev = 194
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 326
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 218 and 306
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 195, communities in prev iteration 195 and edges 325
->edgeConnectivity
  proteinGraph->nedges = 325
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 216 and 218
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 196, communities in prev iteration 195 and edges 324
->addNodeToCommunityTree
numComm = 196, numCommPrev = 195
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 324
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 219 and 221
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 197, communities in prev iteration 196 and edges 323
->addNodeToCommunityTree
numComm = 197, numCommPrev = 196
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 323
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 222 and 226
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 197, communities in prev iteration 197 and edges 322
->edgeConnectivity
  proteinGraph->nedges = 322
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 222 and 228
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 198, communities in prev iteration 197 and edges 321
->addNodeToCommunityTree
numComm = 198, numCommPrev = 197
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 321
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 230 and 269
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 199, communities in prev iteration 198 and edges 320
->addNodeToCommunityTree
numComm = 199, numCommPrev = 198
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 320
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 236 and 238
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 200, communities in prev iteration 199 and edges 319
->addNodeToCommunityTree
numComm = 200, numCommPrev = 199
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 319
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 242 and 292
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 200, communities in prev iteration 200 and edges 318
->edgeConnectivity
  proteinGraph->nedges = 318
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 242 and 244
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 200, communities in prev iteration 200 and edges 317
->edgeConnectivity
  proteinGraph->nedges = 317
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 242 and 290
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 201, communities in prev iteration 200 and edges 316
->addNodeToCommunityTree
numComm = 201, numCommPrev = 200
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 316
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 248 and 252
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 201, communities in prev iteration 201 and edges 315
->edgeConnectivity
  proteinGraph->nedges = 315
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 248 and 285
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 202, communities in prev iteration 201 and edges 314
->addNodeToCommunityTree
numComm = 202, numCommPrev = 201
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 314
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 253 and 257
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 202, communities in prev iteration 202 and edges 313
->edgeConnectivity
  proteinGraph->nedges = 313
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 251 and 253
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 202, communities in prev iteration 202 and edges 312
->edgeConnectivity
  proteinGraph->nedges = 312
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 253 and 255
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 203, communities in prev iteration 202 and edges 311
->addNodeToCommunityTree
numComm = 203, numCommPrev = 202
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 311
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 260 and 283
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 204, communities in prev iteration 203 and edges 310
->addNodeToCommunityTree
numComm = 204, numCommPrev = 203
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 310
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 276 and 279
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 205, communities in prev iteration 204 and edges 309
->addNodeToCommunityTree
numComm = 205, numCommPrev = 204
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 309
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 281 and 307
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 205, communities in prev iteration 205 and edges 308
->edgeConnectivity
  proteinGraph->nedges = 308
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 281 and 305
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 206, communities in prev iteration 205 and edges 307
->addNodeToCommunityTree
numComm = 206, numCommPrev = 205
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 307
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 289 and 296
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 207, communities in prev iteration 206 and edges 306
->addNodeToCommunityTree
numComm = 207, numCommPrev = 206
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 306
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 311 and 313
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 208, communities in prev iteration 207 and edges 305
->addNodeToCommunityTree
numComm = 208, numCommPrev = 207
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 305
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 318 and 340
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 208, communities in prev iteration 208 and edges 304
->edgeConnectivity
  proteinGraph->nedges = 304
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 316 and 340
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 209, communities in prev iteration 208 and edges 303
->addNodeToCommunityTree
numComm = 209, numCommPrev = 208
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 303
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 324 and 337
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 210, communities in prev iteration 209 and edges 302
->addNodeToCommunityTree
numComm = 210, numCommPrev = 209
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 302
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 327 and 329
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 211, communities in prev iteration 210 and edges 301
->addNodeToCommunityTree
numComm = 211, numCommPrev = 210
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 301
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 359 and 361
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 212, communities in prev iteration 211 and edges 300
->addNodeToCommunityTree
numComm = 212, numCommPrev = 211
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 300
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 363 and 395
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 213, communities in prev iteration 212 and edges 299
->addNodeToCommunityTree
numComm = 213, numCommPrev = 212
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 299
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 367 and 387
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 213, communities in prev iteration 213 and edges 298
->edgeConnectivity
  proteinGraph->nedges = 298
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 367 and 371
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 214, communities in prev iteration 213 and edges 297
->addNodeToCommunityTree
numComm = 214, numCommPrev = 213
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 297
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 368 and 370
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 215, communities in prev iteration 214 and edges 296
->addNodeToCommunityTree
numComm = 215, numCommPrev = 214
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 296
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 381 and 416
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 215, communities in prev iteration 215 and edges 295
->edgeConnectivity
  proteinGraph->nedges = 295
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 381 and 398
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 216, communities in prev iteration 215 and edges 294
->addNodeToCommunityTree
numComm = 216, numCommPrev = 215
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 294
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 6 and 8
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 216, communities in prev iteration 216 and edges 293
->edgeConnectivity
  proteinGraph->nedges = 293
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 8 and 97
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 217, communities in prev iteration 216 and edges 292
->addNodeToCommunityTree
numComm = 217, numCommPrev = 216
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 292
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 31 and 81
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 217, communities in prev iteration 217 and edges 291
->edgeConnectivity
  proteinGraph->nedges = 291
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 31 and 33
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 218, communities in prev iteration 217 and edges 290
->addNodeToCommunityTree
numComm = 218, numCommPrev = 217
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 290
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 36 and 75
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 218, communities in prev iteration 218 and edges 289
->edgeConnectivity
  proteinGraph->nedges = 289
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 36 and 77
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 219, communities in prev iteration 218 and edges 288
->addNodeToCommunityTree
numComm = 219, numCommPrev = 218
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 288
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 110 and 112
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 219, communities in prev iteration 219 and edges 287
->edgeConnectivity
  proteinGraph->nedges = 287
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 110 and 206
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 220, communities in prev iteration 219 and edges 286
->addNodeToCommunityTree
numComm = 220, numCommPrev = 219
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 286
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 136 and 138
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 220, communities in prev iteration 220 and edges 285
->edgeConnectivity
  proteinGraph->nedges = 285
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 136 and 223
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 221, communities in prev iteration 220 and edges 284
->addNodeToCommunityTree
numComm = 221, numCommPrev = 220
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 284
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 179 and 183
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 221, communities in prev iteration 221 and edges 283
->edgeConnectivity
  proteinGraph->nedges = 283
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 179 and 181
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 222, communities in prev iteration 221 and edges 282
->addNodeToCommunityTree
numComm = 222, numCommPrev = 221
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 282
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 263 and 267
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 222, communities in prev iteration 222 and edges 281
->edgeConnectivity
  proteinGraph->nedges = 281
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 245 and 263
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 222, communities in prev iteration 222 and edges 280
->edgeConnectivity
  proteinGraph->nedges = 280
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 263 and 265
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 223, communities in prev iteration 222 and edges 279
->addNodeToCommunityTree
numComm = 223, numCommPrev = 222
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 279
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 328 and 388
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 223, communities in prev iteration 223 and edges 278
->edgeConnectivity
  proteinGraph->nedges = 278
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 388 and 390
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 223, communities in prev iteration 223 and edges 277
->edgeConnectivity
  proteinGraph->nedges = 277
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 388 and 420
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 224, communities in prev iteration 223 and edges 276
->addNodeToCommunityTree
numComm = 224, numCommPrev = 223
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 276
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 336 and 382
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 224, communities in prev iteration 224 and edges 275
->edgeConnectivity
  proteinGraph->nedges = 275
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 336 and 372
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 225, communities in prev iteration 224 and edges 274
->addNodeToCommunityTree
numComm = 225, numCommPrev = 224
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 274
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 351 and 404
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 225, communities in prev iteration 225 and edges 273
->edgeConnectivity
  proteinGraph->nedges = 273
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 351 and 406
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 226, communities in prev iteration 225 and edges 272
->addNodeToCommunityTree
numComm = 226, numCommPrev = 225
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 272
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 358 and 360
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 226, communities in prev iteration 226 and edges 271
->edgeConnectivity
  proteinGraph->nedges = 271
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 358 and 401
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 226, communities in prev iteration 226 and edges 270
->edgeConnectivity
  proteinGraph->nedges = 270
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 358 and 399
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 227, communities in prev iteration 226 and edges 269
->addNodeToCommunityTree
numComm = 227, numCommPrev = 226
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 269
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 364 and 366
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 227, communities in prev iteration 227 and edges 268
->edgeConnectivity
  proteinGraph->nedges = 268
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 5.000000 between residues 362 and 366
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 227, communities in prev iteration 227 and edges 267
->edgeConnectivity
  proteinGraph->nedges = 267
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 366 and 396
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 228, communities in prev iteration 227 and edges 266
->addNodeToCommunityTree
numComm = 228, numCommPrev = 227
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 266
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 389 and 392
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 228, communities in prev iteration 228 and edges 265
->edgeConnectivity
  proteinGraph->nedges = 265
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 389 and 394
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 229, communities in prev iteration 228 and edges 264
->addNodeToCommunityTree
numComm = 229, numCommPrev = 228
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 264
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 1 and 3
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 230, communities in prev iteration 229 and edges 263
->addNodeToCommunityTree
numComm = 230, numCommPrev = 229
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 263
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 4 and 93
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 231, communities in prev iteration 230 and edges 262
->addNodeToCommunityTree
numComm = 231, numCommPrev = 230
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 262
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 5 and 7
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 232, communities in prev iteration 231 and edges 261
->addNodeToCommunityTree
numComm = 232, numCommPrev = 231
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 261
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 6 and 95
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 232, communities in prev iteration 232 and edges 260
->edgeConnectivity
  proteinGraph->nedges = 260
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 6 and 97
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 233, communities in prev iteration 232 and edges 259
->addNodeToCommunityTree
numComm = 233, numCommPrev = 232
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 259
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 9 and 11
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 234, communities in prev iteration 233 and edges 258
->addNodeToCommunityTree
numComm = 234, numCommPrev = 233
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 258
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 10 and 12
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 234, communities in prev iteration 234 and edges 257
->edgeConnectivity
  proteinGraph->nedges = 257
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 10 and 349
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 235, communities in prev iteration 234 and edges 256
->addNodeToCommunityTree
numComm = 235, numCommPrev = 234
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 256
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 12 and 349
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 236, communities in prev iteration 235 and edges 255
->addNodeToCommunityTree
numComm = 236, numCommPrev = 235
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 255
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 14 and 17
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 237, communities in prev iteration 236 and edges 254
->addNodeToCommunityTree
numComm = 237, numCommPrev = 236
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 254
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 15 and 60
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 237, communities in prev iteration 237 and edges 253
->edgeConnectivity
  proteinGraph->nedges = 253
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 15 and 62
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 238, communities in prev iteration 237 and edges 252
->addNodeToCommunityTree
numComm = 238, numCommPrev = 237
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 252
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 18 and 20
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 238, communities in prev iteration 238 and edges 251
->edgeConnectivity
  proteinGraph->nedges = 251
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 18 and 58
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 239, communities in prev iteration 238 and edges 250
->addNodeToCommunityTree
numComm = 239, numCommPrev = 238
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 250
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 20 and 58
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 240, communities in prev iteration 239 and edges 249
->addNodeToCommunityTree
numComm = 240, numCommPrev = 239
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 249
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 21 and 23
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 241, communities in prev iteration 240 and edges 248
->addNodeToCommunityTree
numComm = 241, numCommPrev = 240
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 248
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 22 and 51
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 242, communities in prev iteration 241 and edges 247
->addNodeToCommunityTree
numComm = 242, numCommPrev = 241
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 247
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 24 and 26
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 242, communities in prev iteration 242 and edges 246
->edgeConnectivity
  proteinGraph->nedges = 246
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 24 and 32
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 242, communities in prev iteration 242 and edges 245
->edgeConnectivity
  proteinGraph->nedges = 245
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 24 and 86
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 243, communities in prev iteration 242 and edges 244
->addNodeToCommunityTree
numComm = 243, numCommPrev = 242
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 244
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 25 and 28
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 244, communities in prev iteration 243 and edges 243
->addNodeToCommunityTree
numComm = 244, numCommPrev = 243
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 243
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 26 and 32
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 244, communities in prev iteration 244 and edges 242
->edgeConnectivity
  proteinGraph->nedges = 242
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 26 and 86
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 245, communities in prev iteration 244 and edges 241
->addNodeToCommunityTree
numComm = 245, numCommPrev = 244
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 241
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 27 and 29
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 246, communities in prev iteration 245 and edges 240
->addNodeToCommunityTree
numComm = 246, numCommPrev = 245
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 240
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 32 and 86
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 247, communities in prev iteration 246 and edges 239
->addNodeToCommunityTree
numComm = 247, numCommPrev = 246
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 239
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 33 and 81
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 248, communities in prev iteration 247 and edges 238
->addNodeToCommunityTree
numComm = 248, numCommPrev = 247
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 238
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 38 and 40
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 248, communities in prev iteration 248 and edges 237
->edgeConnectivity
  proteinGraph->nedges = 237
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 38 and 42
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 249, communities in prev iteration 248 and edges 236
->addNodeToCommunityTree
numComm = 249, numCommPrev = 248
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 236
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 39 and 44
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 250, communities in prev iteration 249 and edges 235
->addNodeToCommunityTree
numComm = 250, numCommPrev = 249
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 235
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 40 and 42
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 251, communities in prev iteration 250 and edges 234
->addNodeToCommunityTree
numComm = 251, numCommPrev = 250
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 234
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 41 and 43
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 251, communities in prev iteration 251 and edges 233
->edgeConnectivity
  proteinGraph->nedges = 233
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 41 and 46
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 252, communities in prev iteration 251 and edges 232
->addNodeToCommunityTree
numComm = 252, numCommPrev = 251
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 232
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 43 and 46
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 253, communities in prev iteration 252 and edges 231
->addNodeToCommunityTree
numComm = 253, numCommPrev = 252
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 231
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 47 and 50
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 254, communities in prev iteration 253 and edges 230
->addNodeToCommunityTree
numComm = 254, numCommPrev = 253
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 230
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 48 and 59
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 254, communities in prev iteration 254 and edges 229
->edgeConnectivity
  proteinGraph->nedges = 229
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 48 and 61
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 255, communities in prev iteration 254 and edges 228
->addNodeToCommunityTree
numComm = 255, numCommPrev = 254
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 228
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 49 and 72
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 256, communities in prev iteration 255 and edges 227
->addNodeToCommunityTree
numComm = 256, numCommPrev = 255
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 227
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 52 and 54
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 256, communities in prev iteration 256 and edges 226
->edgeConnectivity
  proteinGraph->nedges = 226
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 52 and 56
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 257, communities in prev iteration 256 and edges 225
->addNodeToCommunityTree
numComm = 257, numCommPrev = 256
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 225
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 53 and 55
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 258, communities in prev iteration 257 and edges 224
->addNodeToCommunityTree
numComm = 258, numCommPrev = 257
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 224
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 54 and 56
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 259, communities in prev iteration 258 and edges 223
->addNodeToCommunityTree
numComm = 259, numCommPrev = 258
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 223
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 59 and 61
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 260, communities in prev iteration 259 and edges 222
->addNodeToCommunityTree
numComm = 260, numCommPrev = 259
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 222
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 60 and 62
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 261, communities in prev iteration 260 and edges 221
->addNodeToCommunityTree
numComm = 261, numCommPrev = 260
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 221
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 65 and 67
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 261, communities in prev iteration 261 and edges 220
->edgeConnectivity
  proteinGraph->nedges = 220
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 65 and 69
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 262, communities in prev iteration 261 and edges 219
->addNodeToCommunityTree
numComm = 262, numCommPrev = 261
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 219
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 67 and 69
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 263, communities in prev iteration 262 and edges 218
->addNodeToCommunityTree
numComm = 263, numCommPrev = 262
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 218
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 71 and 94
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 263, communities in prev iteration 263 and edges 217
->edgeConnectivity
  proteinGraph->nedges = 217
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 71 and 96
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 264, communities in prev iteration 263 and edges 216
->addNodeToCommunityTree
numComm = 264, numCommPrev = 263
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 216
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 73 and 91
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 265, communities in prev iteration 264 and edges 215
->addNodeToCommunityTree
numComm = 265, numCommPrev = 264
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 215
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 75 and 77
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 265, communities in prev iteration 265 and edges 214
->edgeConnectivity
  proteinGraph->nedges = 214
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 75 and 89
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 266, communities in prev iteration 265 and edges 213
->addNodeToCommunityTree
numComm = 266, numCommPrev = 265
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 213
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 76 and 90
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 266, communities in prev iteration 266 and edges 212
->edgeConnectivity
  proteinGraph->nedges = 212
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 76 and 92
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 267, communities in prev iteration 266 and edges 211
->addNodeToCommunityTree
numComm = 267, numCommPrev = 266
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 211
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 77 and 89
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 268, communities in prev iteration 267 and edges 210
->addNodeToCommunityTree
numComm = 268, numCommPrev = 267
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 210
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 78 and 80
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 268, communities in prev iteration 268 and edges 209
->edgeConnectivity
  proteinGraph->nedges = 209
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 78 and 84
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 269, communities in prev iteration 268 and edges 208
->addNodeToCommunityTree
numComm = 269, numCommPrev = 268
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 208
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 79 and 83
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 269, communities in prev iteration 269 and edges 207
->edgeConnectivity
  proteinGraph->nedges = 207
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 79 and 85
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 270, communities in prev iteration 269 and edges 206
->addNodeToCommunityTree
numComm = 270, numCommPrev = 269
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 206
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 80 and 84
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 271, communities in prev iteration 270 and edges 205
->addNodeToCommunityTree
numComm = 271, numCommPrev = 270
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 205
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 83 and 85
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 272, communities in prev iteration 271 and edges 204
->addNodeToCommunityTree
numComm = 272, numCommPrev = 271
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 204
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 90 and 92
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 273, communities in prev iteration 272 and edges 203
->addNodeToCommunityTree
numComm = 273, numCommPrev = 272
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 203
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 94 and 96
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 274, communities in prev iteration 273 and edges 202
->addNodeToCommunityTree
numComm = 274, numCommPrev = 273
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 202
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 95 and 97
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 275, communities in prev iteration 274 and edges 201
->addNodeToCommunityTree
numComm = 275, numCommPrev = 274
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 201
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 98 and 135
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 275, communities in prev iteration 275 and edges 200
->edgeConnectivity
  proteinGraph->nedges = 200
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 98 and 139
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 276, communities in prev iteration 275 and edges 199
->addNodeToCommunityTree
numComm = 276, numCommPrev = 275
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 199
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 99 and 101
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 277, communities in prev iteration 276 and edges 198
->addNodeToCommunityTree
numComm = 277, numCommPrev = 276
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 198
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 100 and 134
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 277, communities in prev iteration 277 and edges 197
->edgeConnectivity
  proteinGraph->nedges = 197
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 100 and 141
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 278, communities in prev iteration 277 and edges 196
->addNodeToCommunityTree
numComm = 278, numCommPrev = 277
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 196
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 103 and 193
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 278, communities in prev iteration 278 and edges 195
->edgeConnectivity
  proteinGraph->nedges = 195
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 103 and 199
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 279, communities in prev iteration 278 and edges 194
->addNodeToCommunityTree
numComm = 279, numCommPrev = 278
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 194
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 104 and 191
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 279, communities in prev iteration 279 and edges 193
->edgeConnectivity
  proteinGraph->nedges = 193
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 104 and 201
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 280, communities in prev iteration 279 and edges 192
->addNodeToCommunityTree
numComm = 280, numCommPrev = 279
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 192
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 105 and 107
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 280, communities in prev iteration 280 and edges 191
->edgeConnectivity
  proteinGraph->nedges = 191
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 105 and 131
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 281, communities in prev iteration 280 and edges 190
->addNodeToCommunityTree
numComm = 281, numCommPrev = 280
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 190
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 106 and 128
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 281, communities in prev iteration 281 and edges 189
->edgeConnectivity
  proteinGraph->nedges = 189
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 106 and 146
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 282, communities in prev iteration 281 and edges 188
->addNodeToCommunityTree
numComm = 282, numCommPrev = 281
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 188
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 107 and 131
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 283, communities in prev iteration 282 and edges 187
->addNodeToCommunityTree
numComm = 283, numCommPrev = 282
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 187
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 111 and 127
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 283, communities in prev iteration 283 and edges 186
->edgeConnectivity
  proteinGraph->nedges = 186
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 111 and 129
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 284, communities in prev iteration 283 and edges 185
->addNodeToCommunityTree
numComm = 284, numCommPrev = 283
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 185
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 112 and 206
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 285, communities in prev iteration 284 and edges 184
->addNodeToCommunityTree
numComm = 285, numCommPrev = 284
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 184
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 113 and 126
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 286, communities in prev iteration 285 and edges 183
->addNodeToCommunityTree
numComm = 286, numCommPrev = 285
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 183
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 114 and 208
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 286, communities in prev iteration 286 and edges 182
->edgeConnectivity
  proteinGraph->nedges = 182
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 114 and 210
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 287, communities in prev iteration 286 and edges 181
->addNodeToCommunityTree
numComm = 287, numCommPrev = 286
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 181
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 116 and 118
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 288, communities in prev iteration 287 and edges 180
->addNodeToCommunityTree
numComm = 288, numCommPrev = 287
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 180
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 117 and 209
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 288, communities in prev iteration 288 and edges 179
->edgeConnectivity
  proteinGraph->nedges = 179
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 117 and 211
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 289, communities in prev iteration 288 and edges 178
->addNodeToCommunityTree
numComm = 289, numCommPrev = 288
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 178
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 119 and 121
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 289, communities in prev iteration 289 and edges 177
->edgeConnectivity
  proteinGraph->nedges = 177
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 119 and 172
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 289, communities in prev iteration 289 and edges 176
->edgeConnectivity
  proteinGraph->nedges = 176
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 119 and 123
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 290, communities in prev iteration 289 and edges 175
->addNodeToCommunityTree
numComm = 290, numCommPrev = 289
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 175
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 121 and 123
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 290, communities in prev iteration 290 and edges 174
->edgeConnectivity
  proteinGraph->nedges = 174
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 121 and 172
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 291, communities in prev iteration 290 and edges 173
->addNodeToCommunityTree
numComm = 291, numCommPrev = 290
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 173
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 122 and 124
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 291, communities in prev iteration 291 and edges 172
->edgeConnectivity
  proteinGraph->nedges = 172
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 122 and 171
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 292, communities in prev iteration 291 and edges 171
->addNodeToCommunityTree
numComm = 292, numCommPrev = 291
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 171
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 123 and 172
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 293, communities in prev iteration 292 and edges 170
->addNodeToCommunityTree
numComm = 293, numCommPrev = 292
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 170
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 124 and 171
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 294, communities in prev iteration 293 and edges 169
->addNodeToCommunityTree
numComm = 294, numCommPrev = 293
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 169
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 127 and 129
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 295, communities in prev iteration 294 and edges 168
->addNodeToCommunityTree
numComm = 295, numCommPrev = 294
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 168
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 128 and 146
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 296, communities in prev iteration 295 and edges 167
->addNodeToCommunityTree
numComm = 296, numCommPrev = 295
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 167
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 132 and 142
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 297, communities in prev iteration 296 and edges 166
->addNodeToCommunityTree
numComm = 297, numCommPrev = 296
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 166
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 134 and 141
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 298, communities in prev iteration 297 and edges 165
->addNodeToCommunityTree
numComm = 298, numCommPrev = 297
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 165
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 135 and 139
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 299, communities in prev iteration 298 and edges 164
->addNodeToCommunityTree
numComm = 299, numCommPrev = 298
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 164
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 138 and 223
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 300, communities in prev iteration 299 and edges 163
->addNodeToCommunityTree
numComm = 300, numCommPrev = 299
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 163
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 140 and 195
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 301, communities in prev iteration 300 and edges 162
->addNodeToCommunityTree
numComm = 301, numCommPrev = 300
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 162
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 145 and 147
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 301, communities in prev iteration 301 and edges 161
->edgeConnectivity
  proteinGraph->nedges = 161
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 145 and 190
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 302, communities in prev iteration 301 and edges 160
->addNodeToCommunityTree
numComm = 302, numCommPrev = 301
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 160
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 147 and 190
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 303, communities in prev iteration 302 and edges 159
->addNodeToCommunityTree
numComm = 303, numCommPrev = 302
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 159
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 148 and 188
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 304, communities in prev iteration 303 and edges 158
->addNodeToCommunityTree
numComm = 304, numCommPrev = 303
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 158
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 149 and 202
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 305, communities in prev iteration 304 and edges 157
->addNodeToCommunityTree
numComm = 305, numCommPrev = 304
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 157
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 150 and 152
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 305, communities in prev iteration 305 and edges 156
->edgeConnectivity
  proteinGraph->nedges = 156
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 150 and 186
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 306, communities in prev iteration 305 and edges 155
->addNodeToCommunityTree
numComm = 306, numCommPrev = 305
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 155
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 151 and 157
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 306, communities in prev iteration 306 and edges 154
->edgeConnectivity
  proteinGraph->nedges = 154
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 151 and 159
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 307, communities in prev iteration 306 and edges 153
->addNodeToCommunityTree
numComm = 307, numCommPrev = 306
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 153
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 152 and 186
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 308, communities in prev iteration 307 and edges 152
->addNodeToCommunityTree
numComm = 308, numCommPrev = 307
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 152
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 153 and 182
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 308, communities in prev iteration 308 and edges 151
->edgeConnectivity
  proteinGraph->nedges = 151
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 153 and 185
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 309, communities in prev iteration 308 and edges 150
->addNodeToCommunityTree
numComm = 309, numCommPrev = 308
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 150
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 157 and 159
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 310, communities in prev iteration 309 and edges 149
->addNodeToCommunityTree
numComm = 310, numCommPrev = 309
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 149
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 160 and 174
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 310, communities in prev iteration 310 and edges 148
->edgeConnectivity
  proteinGraph->nedges = 148
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 160 and 176
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 311, communities in prev iteration 310 and edges 147
->addNodeToCommunityTree
numComm = 311, numCommPrev = 310
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 147
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 161 and 173
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 312, communities in prev iteration 311 and edges 146
->addNodeToCommunityTree
numComm = 312, numCommPrev = 311
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 146
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 164 and 166
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 312, communities in prev iteration 312 and edges 145
->edgeConnectivity
  proteinGraph->nedges = 145
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 164 and 168
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 313, communities in prev iteration 312 and edges 144
->addNodeToCommunityTree
numComm = 313, numCommPrev = 312
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 144
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 166 and 168
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 314, communities in prev iteration 313 and edges 143
->addNodeToCommunityTree
numComm = 314, numCommPrev = 313
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 143
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 167 and 169
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 315, communities in prev iteration 314 and edges 142
->addNodeToCommunityTree
numComm = 315, numCommPrev = 314
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 142
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 174 and 176
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 316, communities in prev iteration 315 and edges 141
->addNodeToCommunityTree
numComm = 316, numCommPrev = 315
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 141
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 175 and 177
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 317, communities in prev iteration 316 and edges 140
->addNodeToCommunityTree
numComm = 317, numCommPrev = 316
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 140
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 178 and 180
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 318, communities in prev iteration 317 and edges 139
->addNodeToCommunityTree
numComm = 318, numCommPrev = 317
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 139
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 181 and 183
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 319, communities in prev iteration 318 and edges 138
->addNodeToCommunityTree
numComm = 319, numCommPrev = 318
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 138
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 182 and 185
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 320, communities in prev iteration 319 and edges 137
->addNodeToCommunityTree
numComm = 320, numCommPrev = 319
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 137
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 184 and 207
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 321, communities in prev iteration 320 and edges 136
->addNodeToCommunityTree
numComm = 321, numCommPrev = 320
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 136
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 187 and 204
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 322, communities in prev iteration 321 and edges 135
->addNodeToCommunityTree
numComm = 322, numCommPrev = 321
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 135
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 189 and 203
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 322, communities in prev iteration 322 and edges 134
->edgeConnectivity
  proteinGraph->nedges = 134
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 189 and 205
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 323, communities in prev iteration 322 and edges 133
->addNodeToCommunityTree
numComm = 323, numCommPrev = 322
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 133
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 191 and 201
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 324, communities in prev iteration 323 and edges 132
->addNodeToCommunityTree
numComm = 324, numCommPrev = 323
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 132
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 193 and 199
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 325, communities in prev iteration 324 and edges 131
->addNodeToCommunityTree
numComm = 325, numCommPrev = 324
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 131
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 194 and 196
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 325, communities in prev iteration 325 and edges 130
->edgeConnectivity
  proteinGraph->nedges = 130
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 194 and 198
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 326, communities in prev iteration 325 and edges 129
->addNodeToCommunityTree
numComm = 326, numCommPrev = 325
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 129
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 196 and 198
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 327, communities in prev iteration 326 and edges 128
->addNodeToCommunityTree
numComm = 327, numCommPrev = 326
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 128
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 197 and 314
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 327, communities in prev iteration 327 and edges 127
->edgeConnectivity
  proteinGraph->nedges = 127
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 197 and 410
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 328, communities in prev iteration 327 and edges 126
->addNodeToCommunityTree
numComm = 328, numCommPrev = 327
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 126
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 203 and 205
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 329, communities in prev iteration 328 and edges 125
->addNodeToCommunityTree
numComm = 329, numCommPrev = 328
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 125
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 208 and 210
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 330, communities in prev iteration 329 and edges 124
->addNodeToCommunityTree
numComm = 330, numCommPrev = 329
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 124
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 209 and 211
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 331, communities in prev iteration 330 and edges 123
->addNodeToCommunityTree
numComm = 331, numCommPrev = 330
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 123
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 215 and 217
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 332, communities in prev iteration 331 and edges 122
->addNodeToCommunityTree
numComm = 332, numCommPrev = 331
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 122
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 216 and 304
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 332, communities in prev iteration 332 and edges 121
->edgeConnectivity
  proteinGraph->nedges = 121
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 216 and 306
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 333, communities in prev iteration 332 and edges 120
->addNodeToCommunityTree
numComm = 333, numCommPrev = 332
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 120
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 220 and 308
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 333, communities in prev iteration 333 and edges 119
->edgeConnectivity
  proteinGraph->nedges = 119
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 220 and 310
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 334, communities in prev iteration 333 and edges 118
->addNodeToCommunityTree
numComm = 334, numCommPrev = 333
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 118
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 221 and 274
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 335, communities in prev iteration 334 and edges 117
->addNodeToCommunityTree
numComm = 335, numCommPrev = 334
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 117
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 224 and 226
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 335, communities in prev iteration 335 and edges 116
->edgeConnectivity
  proteinGraph->nedges = 116
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 224 and 228
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 336, communities in prev iteration 335 and edges 115
->addNodeToCommunityTree
numComm = 336, numCommPrev = 335
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 115
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 226 and 228
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 337, communities in prev iteration 336 and edges 114
->addNodeToCommunityTree
numComm = 337, numCommPrev = 336
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 114
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 227 and 261
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 337, communities in prev iteration 337 and edges 113
->edgeConnectivity
  proteinGraph->nedges = 113
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 227 and 272
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 338, communities in prev iteration 337 and edges 112
->addNodeToCommunityTree
numComm = 338, numCommPrev = 337
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 112
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 229 and 268
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 338, communities in prev iteration 338 and edges 111
->edgeConnectivity
  proteinGraph->nedges = 111
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 229 and 270
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 339, communities in prev iteration 338 and edges 110
->addNodeToCommunityTree
numComm = 339, numCommPrev = 338
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 110
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 230 and 271
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 340, communities in prev iteration 339 and edges 109
->addNodeToCommunityTree
numComm = 340, numCommPrev = 339
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 109
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 232 and 234
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 340, communities in prev iteration 340 and edges 108
->edgeConnectivity
  proteinGraph->nedges = 108
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 232 and 266
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 341, communities in prev iteration 340 and edges 107
->addNodeToCommunityTree
numComm = 341, numCommPrev = 340
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 107
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 233 and 287
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 342, communities in prev iteration 341 and edges 106
->addNodeToCommunityTree
numComm = 342, numCommPrev = 341
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 106
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 234 and 266
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 343, communities in prev iteration 342 and edges 105
->addNodeToCommunityTree
numComm = 343, numCommPrev = 342
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 105
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 235 and 298
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 344, communities in prev iteration 343 and edges 104
->addNodeToCommunityTree
numComm = 344, numCommPrev = 343
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 104
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 237 and 239
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 344, communities in prev iteration 344 and edges 103
->edgeConnectivity
  proteinGraph->nedges = 103
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 237 and 241
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 345, communities in prev iteration 344 and edges 102
->addNodeToCommunityTree
numComm = 345, numCommPrev = 344
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 102
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 238 and 240
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 346, communities in prev iteration 345 and edges 101
->addNodeToCommunityTree
numComm = 346, numCommPrev = 345
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 101
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 239 and 241
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 347, communities in prev iteration 346 and edges 100
->addNodeToCommunityTree
numComm = 347, numCommPrev = 346
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 100
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 244 and 290
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 347, communities in prev iteration 347 and edges 99
->edgeConnectivity
  proteinGraph->nedges = 99
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 244 and 292
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 348, communities in prev iteration 347 and edges 98
->addNodeToCommunityTree
numComm = 348, numCommPrev = 347
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 98
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 245 and 265
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 348, communities in prev iteration 348 and edges 97
->edgeConnectivity
  proteinGraph->nedges = 97
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 245 and 267
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 349, communities in prev iteration 348 and edges 96
->addNodeToCommunityTree
numComm = 349, numCommPrev = 348
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 96
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 246 and 288
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 350, communities in prev iteration 349 and edges 95
->addNodeToCommunityTree
numComm = 350, numCommPrev = 349
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 95
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 247 and 262
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 351, communities in prev iteration 350 and edges 94
->addNodeToCommunityTree
numComm = 351, numCommPrev = 350
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 94
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 250 and 252
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 351, communities in prev iteration 351 and edges 93
->edgeConnectivity
  proteinGraph->nedges = 93
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 250 and 285
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 352, communities in prev iteration 351 and edges 92
->addNodeToCommunityTree
numComm = 352, numCommPrev = 351
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 92
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 251 and 255
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 352, communities in prev iteration 352 and edges 91
->edgeConnectivity
  proteinGraph->nedges = 91
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 251 and 257
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 353, communities in prev iteration 352 and edges 90
->addNodeToCommunityTree
numComm = 353, numCommPrev = 352
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 90
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 252 and 285
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 354, communities in prev iteration 353 and edges 89
->addNodeToCommunityTree
numComm = 354, numCommPrev = 353
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 89
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 255 and 257
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 355, communities in prev iteration 354 and edges 88
->addNodeToCommunityTree
numComm = 355, numCommPrev = 354
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 88
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 256 and 258
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 356, communities in prev iteration 355 and edges 87
->addNodeToCommunityTree
numComm = 356, numCommPrev = 355
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 87
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 261 and 272
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 357, communities in prev iteration 356 and edges 86
->addNodeToCommunityTree
numComm = 357, numCommPrev = 356
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 86
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 265 and 267
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 358, communities in prev iteration 357 and edges 85
->addNodeToCommunityTree
numComm = 358, numCommPrev = 357
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 85
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 268 and 270
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 359, communities in prev iteration 358 and edges 84
->addNodeToCommunityTree
numComm = 359, numCommPrev = 358
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 84
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 273 and 275
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 360, communities in prev iteration 359 and edges 83
->addNodeToCommunityTree
numComm = 360, numCommPrev = 359
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 83
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 276 and 280
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 361, communities in prev iteration 360 and edges 82
->addNodeToCommunityTree
numComm = 361, numCommPrev = 360
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 82
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 277 and 309
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 361, communities in prev iteration 361 and edges 81
->edgeConnectivity
  proteinGraph->nedges = 81
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 277 and 345
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 362, communities in prev iteration 361 and edges 80
->addNodeToCommunityTree
numComm = 362, numCommPrev = 361
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 80
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 278 and 312
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 363, communities in prev iteration 362 and edges 79
->addNodeToCommunityTree
numComm = 363, numCommPrev = 362
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 79
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 282 and 305
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 363, communities in prev iteration 363 and edges 78
->edgeConnectivity
  proteinGraph->nedges = 78
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 282 and 307
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 364, communities in prev iteration 363 and edges 77
->addNodeToCommunityTree
numComm = 364, numCommPrev = 363
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 77
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 283 and 303
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 365, communities in prev iteration 364 and edges 76
->addNodeToCommunityTree
numComm = 365, numCommPrev = 364
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 76
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 284 and 286
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 365, communities in prev iteration 365 and edges 75
->edgeConnectivity
  proteinGraph->nedges = 75
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 284 and 302
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 366, communities in prev iteration 365 and edges 74
->addNodeToCommunityTree
numComm = 366, numCommPrev = 365
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 74
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 286 and 302
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 367, communities in prev iteration 366 and edges 73
->addNodeToCommunityTree
numComm = 367, numCommPrev = 366
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 73
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 290 and 292
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 368, communities in prev iteration 367 and edges 72
->addNodeToCommunityTree
numComm = 368, numCommPrev = 367
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 72
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 291 and 297
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 369, communities in prev iteration 368 and edges 71
->addNodeToCommunityTree
numComm = 369, numCommPrev = 368
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 71
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 293 and 295
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 370, communities in prev iteration 369 and edges 70
->addNodeToCommunityTree
numComm = 370, numCommPrev = 369
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 70
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 294 and 296
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 371, communities in prev iteration 370 and edges 69
->addNodeToCommunityTree
numComm = 371, numCommPrev = 370
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 69
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 299 and 301
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 372, communities in prev iteration 371 and edges 68
->addNodeToCommunityTree
numComm = 372, numCommPrev = 371
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 68
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 304 and 306
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 373, communities in prev iteration 372 and edges 67
->addNodeToCommunityTree
numComm = 373, numCommPrev = 372
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 67
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 305 and 307
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 374, communities in prev iteration 373 and edges 66
->addNodeToCommunityTree
numComm = 374, numCommPrev = 373
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 66
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 308 and 310
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 375, communities in prev iteration 374 and edges 65
->addNodeToCommunityTree
numComm = 375, numCommPrev = 374
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 65
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 309 and 345
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 376, communities in prev iteration 375 and edges 64
->addNodeToCommunityTree
numComm = 376, numCommPrev = 375
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 64
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 313 and 343
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 377, communities in prev iteration 376 and edges 63
->addNodeToCommunityTree
numComm = 377, numCommPrev = 376
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 63
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 314 and 410
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 378, communities in prev iteration 377 and edges 62
->addNodeToCommunityTree
numComm = 378, numCommPrev = 377
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 62
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 315 and 402
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 378, communities in prev iteration 378 and edges 61
->edgeConnectivity
  proteinGraph->nedges = 61
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 315 and 411
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 379, communities in prev iteration 378 and edges 60
->addNodeToCommunityTree
numComm = 379, numCommPrev = 378
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 60
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 316 and 318
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 379, communities in prev iteration 379 and edges 59
->edgeConnectivity
  proteinGraph->nedges = 59
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 316 and 341
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 380, communities in prev iteration 379 and edges 58
->addNodeToCommunityTree
numComm = 380, numCommPrev = 379
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 58
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 317 and 319
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 380, communities in prev iteration 380 and edges 57
->edgeConnectivity
  proteinGraph->nedges = 57
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 317 and 414
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 381, communities in prev iteration 380 and edges 56
->addNodeToCommunityTree
numComm = 381, numCommPrev = 380
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 56
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 318 and 341
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 382, communities in prev iteration 381 and edges 55
->addNodeToCommunityTree
numComm = 382, numCommPrev = 381
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 55
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 319 and 414
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 383, communities in prev iteration 382 and edges 54
->addNodeToCommunityTree
numComm = 383, numCommPrev = 382
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 54
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 320 and 415
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 384, communities in prev iteration 383 and edges 53
->addNodeToCommunityTree
numComm = 384, numCommPrev = 383
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 53
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 321 and 323
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 384, communities in prev iteration 384 and edges 52
->edgeConnectivity
  proteinGraph->nedges = 52
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 321 and 417
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 385, communities in prev iteration 384 and edges 51
->addNodeToCommunityTree
numComm = 385, numCommPrev = 384
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 51
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 323 and 417
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 386, communities in prev iteration 385 and edges 50
->addNodeToCommunityTree
numComm = 386, numCommPrev = 385
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 50
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 325 and 419
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 386, communities in prev iteration 386 and edges 49
->edgeConnectivity
  proteinGraph->nedges = 49
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 325 and 421
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 387, communities in prev iteration 386 and edges 48
->addNodeToCommunityTree
numComm = 387, numCommPrev = 386
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 48
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 327 and 422
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 388, communities in prev iteration 387 and edges 47
->addNodeToCommunityTree
numComm = 388, numCommPrev = 387
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 47
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 328 and 390
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 388, communities in prev iteration 388 and edges 46
->edgeConnectivity
  proteinGraph->nedges = 46
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 328 and 420
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 389, communities in prev iteration 388 and edges 45
->addNodeToCommunityTree
numComm = 389, numCommPrev = 388
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 45
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 330 and 332
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 389, communities in prev iteration 389 and edges 44
->edgeConnectivity
  proteinGraph->nedges = 44
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 330 and 383
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 389, communities in prev iteration 389 and edges 43
->edgeConnectivity
  proteinGraph->nedges = 43
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 330 and 334
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 390, communities in prev iteration 389 and edges 42
->addNodeToCommunityTree
numComm = 390, numCommPrev = 389
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 42
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 331 and 333
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 391, communities in prev iteration 390 and edges 41
->addNodeToCommunityTree
numComm = 391, numCommPrev = 390
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 41
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 332 and 334
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 391, communities in prev iteration 391 and edges 40
->edgeConnectivity
  proteinGraph->nedges = 40
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 332 and 383
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 392, communities in prev iteration 391 and edges 39
->addNodeToCommunityTree
numComm = 392, numCommPrev = 391
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 39
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 334 and 383
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 393, communities in prev iteration 392 and edges 38
->addNodeToCommunityTree
numComm = 393, numCommPrev = 392
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 38
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 335 and 337
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 394, communities in prev iteration 393 and edges 37
->addNodeToCommunityTree
numComm = 394, numCommPrev = 393
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 37
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 346 and 348
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 395, communities in prev iteration 394 and edges 36
->addNodeToCommunityTree
numComm = 395, numCommPrev = 394
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 36
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 347 and 350
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 396, communities in prev iteration 395 and edges 35
->addNodeToCommunityTree
numComm = 396, numCommPrev = 395
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 35
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 355 and 376
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 397, communities in prev iteration 396 and edges 34
->addNodeToCommunityTree
numComm = 397, numCommPrev = 396
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 34
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 357 and 375
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 397, communities in prev iteration 397 and edges 33
->edgeConnectivity
  proteinGraph->nedges = 33
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 3.000000 between residues 357 and 377
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 397, communities in prev iteration 397 and edges 32
->edgeConnectivity
  proteinGraph->nedges = 32
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 6.000000 between residues 357 and 379
->floydWarshall
  residueCount = 4
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 3 
  Distances calculated.
0 1 2 3 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 398, communities in prev iteration 397 and edges 31
->addNodeToCommunityTree
numComm = 398, numCommPrev = 397
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 31
0 1 2 3 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 360 and 399
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 398, communities in prev iteration 398 and edges 30
->edgeConnectivity
  proteinGraph->nedges = 30
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 360 and 401
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 399, communities in prev iteration 398 and edges 29
->addNodeToCommunityTree
numComm = 399, numCommPrev = 398
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 29
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 361 and 397
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 400, communities in prev iteration 399 and edges 28
->addNodeToCommunityTree
numComm = 400, numCommPrev = 399
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 28
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 362 and 364
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 400, communities in prev iteration 400 and edges 27
->edgeConnectivity
  proteinGraph->nedges = 27
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 362 and 396
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 401, communities in prev iteration 400 and edges 26
->addNodeToCommunityTree
numComm = 401, numCommPrev = 400
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 26
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 364 and 396
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 402, communities in prev iteration 401 and edges 25
->addNodeToCommunityTree
numComm = 402, numCommPrev = 401
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 25
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 365 and 369
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 403, communities in prev iteration 402 and edges 24
->addNodeToCommunityTree
numComm = 403, numCommPrev = 402
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 24
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 368 and 386
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 404, communities in prev iteration 403 and edges 23
->addNodeToCommunityTree
numComm = 404, numCommPrev = 403
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 23
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 371 and 385
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 404, communities in prev iteration 404 and edges 22
->edgeConnectivity
  proteinGraph->nedges = 22
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 371 and 387
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 405, communities in prev iteration 404 and edges 21
->addNodeToCommunityTree
numComm = 405, numCommPrev = 404
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 21
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 372 and 382
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 406, communities in prev iteration 405 and edges 20
->addNodeToCommunityTree
numComm = 406, numCommPrev = 405
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 20
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 375 and 377
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 406, communities in prev iteration 406 and edges 19
->edgeConnectivity
  proteinGraph->nedges = 19
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 375 and 379
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 407, communities in prev iteration 406 and edges 18
->addNodeToCommunityTree
numComm = 407, numCommPrev = 406
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 18
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 377 and 379
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 408, communities in prev iteration 407 and edges 17
->addNodeToCommunityTree
numComm = 408, numCommPrev = 407
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 17
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 378 and 380
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 409, communities in prev iteration 408 and edges 16
->addNodeToCommunityTree
numComm = 409, numCommPrev = 408
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 16
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 385 and 387
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 410, communities in prev iteration 409 and edges 15
->addNodeToCommunityTree
numComm = 410, numCommPrev = 409
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 15
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 390 and 420
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 411, communities in prev iteration 410 and edges 14
->addNodeToCommunityTree
numComm = 411, numCommPrev = 410
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 14
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 392 and 394
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 412, communities in prev iteration 411 and edges 13
->addNodeToCommunityTree
numComm = 412, numCommPrev = 411
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 13
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 395 and 418
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 413, communities in prev iteration 412 and edges 12
->addNodeToCommunityTree
numComm = 413, numCommPrev = 412
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 12
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 398 and 400
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 413, communities in prev iteration 413 and edges 11
->edgeConnectivity
  proteinGraph->nedges = 11
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 398 and 416
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 414, communities in prev iteration 413 and edges 10
->addNodeToCommunityTree
numComm = 414, numCommPrev = 413
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 10
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 399 and 401
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 415, communities in prev iteration 414 and edges 9
->addNodeToCommunityTree
numComm = 415, numCommPrev = 414
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 9
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 400 and 416
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 416, communities in prev iteration 415 and edges 8
->addNodeToCommunityTree
numComm = 416, numCommPrev = 415
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 8
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 402 and 411
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 417, communities in prev iteration 416 and edges 7
->addNodeToCommunityTree
numComm = 417, numCommPrev = 416
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 7
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 403 and 407
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 417, communities in prev iteration 417 and edges 6
->edgeConnectivity
  proteinGraph->nedges = 6
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 403 and 409
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 418, communities in prev iteration 417 and edges 5
->addNodeToCommunityTree
numComm = 418, numCommPrev = 417
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 5
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 404 and 406
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 418, communities in prev iteration 418 and edges 4
->edgeConnectivity
  proteinGraph->nedges = 4
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 4.000000 between residues 404 and 408
->floydWarshall
  residueCount = 3
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 2 
  Distances calculated.
0 1 2 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 419, communities in prev iteration 418 and edges 3
->addNodeToCommunityTree
numComm = 419, numCommPrev = 418
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 3
0 1 2 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 406 and 408
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 420, communities in prev iteration 419 and edges 2
->addNodeToCommunityTree
numComm = 420, numCommPrev = 419
<-addNodeToCommunityTree
->edgeConnectivity
  proteinGraph->nedges = 2
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 407 and 409
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
Number of communities 421, communities in prev iteration 421 and edges 1
->edgeConnectivity
  proteinGraph->nedges = 1
0 1 <-edgeConnectivity
Maximum edge Connectivity 2.000000 between residues 419 and 421
->floydWarshall
  residueCount = 2
  Initialization done.
  Dynamic programming to calculate pairwise shortest distances.
0 1 
  Distances calculated.
0 1 
<-floydWarshall
Shortest distance and shortest path matrices calculated.
The residues in community 1 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 2 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 3 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 4 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 5 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 6 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 7 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 8 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 9 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
The residues in community 10 are: newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 534
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 425
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 540
newPtr->residue = 454
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 670
newPtr->residue = 525
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 513
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 673
newPtr->residue = 603
newPtr->residue = 450
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 514
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 678
newPtr->residue = 602
newPtr->residue = 556
newPtr->residue = 498
newPtr->residue = 428
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 660
newPtr->residue = 486
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 676
newPtr->residue = 569
newPtr->residue = 559
newPtr->residue = 477
newPtr->residue = 464
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 659
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 539
newPtr->residue = 433
newPtr->residue = 422
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 683
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 639
newPtr->residue = 568
newPtr->residue = 490
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 690
newPtr->residue = 533
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 691
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 666
newPtr->residue = 664
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 474
newPtr->residue = 442
newPtr->residue = 428
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 687
newPtr->residue = 640
newPtr->residue = 557
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 527
newPtr->residue = 469
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 688
newPtr->residue = 605
newPtr->residue = 566
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 685
newPtr->residue = 604
newPtr->residue = 541
newPtr->residue = 445
newPtr->residue = 435
newPtr->residue = 422
newPtr->residue = 654
newPtr->residue = 538
newPtr->residue = 491
newPtr->residue = 466
newPtr->residue = 422
newPtr->residue = 426
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 426
newPtr->residue = 542
newPtr->residue = 515
newPtr->residue = 430
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 544
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 705
newPtr->residue = 571
newPtr->residue = 543
newPtr->residue = 427
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 702
newPtr->residue = 492
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 697
newPtr->residue = 591
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 699
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 560
newPtr->residue = 512
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 703
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 728
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 734
newPtr->residue = 548
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 612
newPtr->residue = 576
newPtr->residue = 463
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 713
newPtr->residue = 484
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 712
newPtr->residue = 711
newPtr->residue = 517
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 732
newPtr->residue = 611
newPtr->residue = 546
newPtr->residue = 499
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 547
newPtr->residue = 471
newPtr->residue = 449
newPtr->residue = 439
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 475
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 643
newPtr->residue = 530
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 730
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 727
newPtr->residue = 575
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 723
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 425
newPtr->residue = 747
newPtr->residue = 614
newPtr->residue = 593
newPtr->residue = 458
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 700
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 701
newPtr->residue = 516
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 562
newPtr->residue = 487
newPtr->residue = 455
newPtr->residue = 443
newPtr->residue = 426
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 744
newPtr->residue = 592
newPtr->residue = 577
newPtr->residue = 488
newPtr->residue = 461
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 641
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 561
newPtr->residue = 480
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 708
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 710
newPtr->residue = 608
newPtr->residue = 497
newPtr->residue = 437
newPtr->residue = 432
newPtr->residue = 427
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 616
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 642
newPtr->residue = 478
newPtr->residue = 426
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 757
newPtr->residue = 619
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 621
newPtr->residue = 505
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 766
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 535
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 774
newPtr->residue = 596
newPtr->residue = 494
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 479
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 595
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 429
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 762
newPtr->residue = 429
newPtr->residue = 770
newPtr->residue = 506
newPtr->residue = 429
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 760
newPtr->residue = 552
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 549
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 759
newPtr->residue = 500
newPtr->residue = 465
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 618
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 496
newPtr->residue = 438
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 493
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 773
newPtr->residue = 623
newPtr->residue = 451
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 536
newPtr->residue = 424
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 769
newPtr->residue = 622
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 600
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 628
newPtr->residue = 524
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 485
newPtr->residue = 457
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 446
newPtr->residue = 429
newPtr->residue = 424
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 615
newPtr->residue = 424
newPtr->residue = 787
newPtr->residue = 495
newPtr->residue = 453
newPtr->residue = 424
newPtr->residue = 625
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 754
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 785
newPtr->residue = 627
newPtr->residue = 551
newPtr->residue = 502
newPtr->residue = 482
newPtr->residue = 459
newPtr->residue = 434
newPtr->residue = 424
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 755
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 578
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 584
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 631
newPtr->residue = 583
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 801
newPtr->residue = 423
newPtr->residue = 423
newPtr->residue = 629
newPtr->residue = 553
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 783
newPtr->residue = 522
newPtr->residue = 470
newPtr->residue = 444
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 537
newPtr->residue = 425
newPtr->residue = 656
newPtr->residue = 425
newPtr->residue = 563
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 520
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 518
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 828
newPtr->residue = 819
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 554
newPtr->residue = 531
newPtr->residue = 473
newPtr->residue = 447
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 646
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 813
newPtr->residue = 811
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 523
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 826
newPtr->residue = 635
newPtr->residue = 481
newPtr->residue = 460
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 650
newPtr->residue = 521
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 822
newPtr->residue = 448
newPtr->residue = 440
newPtr->residue = 431
newPtr->residue = 633
newPtr->residue = 519
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 820
newPtr->residue = 648
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 840
newPtr->residue = 647
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 504
newPtr->residue = 489
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 749
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 800
newPtr->residue = 462
newPtr->residue = 436
newPtr->residue = 425
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 476
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 802
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 468
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 835
newPtr->residue = 637
newPtr->residue = 585
newPtr->residue = 503
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 806
newPtr->residue = 452
newPtr->residue = 441
newPtr->residue = 423
newPtr->residue = 634
newPtr->residue = 467
newPtr->residue = 431
newPtr->residue = 431
newPtr->residue = 810
newPtr->residue = 483
newPtr->residue = 431
newPtr->residue = 808
newPtr->residue = 431
newPtr->residue = 456
newPtr->residue = 431
Community Tree
Community list for community 1 is: 0: 1 
Community list for community 2 is: 315: 2 
Community list for community 3 is: 211: 3 1 
Community list for community 4 is: 9: 4 1 
Community list for community 5 is: 65: 5 4 1 
Community list for community 6 is: 105: 6 5 4 1 
Community list for community 7 is: 20: 7 1 
Community list for community 8 is: 231: 8 3 1 
Community list for community 9 is: 62: 9 4 1 
Community list for community 10 is: 324: 10 2 
((((1,7)1,((4,9)4,(5,6)5)4)1,(3,8)3)1,(2,10)2)1<-gnewman
->getFlowComm
number of communities = 10
<-getFlowComm
->getIntercommunityFlow
number of communities = 10
<-getIntercommunityFlow
